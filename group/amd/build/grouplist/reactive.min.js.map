{"version":3,"sources":["../../src/grouplist/reactive.js"],"names":["reactives","reactive","definition","maindefinition","definitions","store","componentnames","Set","components","name","add","maincomponent","Object","assign","$reactive","push","parentcomponent","elem","dataset","TypeError","create","el","extradata","key","props","bindname","getDataFromPath","result","addBind","update","value","data","pendingchanges","emitChange","path","action","patharray","split","queueChange","propagateChanges","node","length","$action","first","shift","instantPropagateChanges","log","debug","changestosend","keys","forEach","rootnode","component","$id"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course groups store.\n *\n * @module     core_group/grouplist/store\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {createComponent} from 'core_group/grouplist/component';\n// import datahandler from 'core_group/grouplist/datahandler';\nimport {debounce} from 'core/utils';\nimport log from 'core/log';\n\n\nconst reactives = [];\n\n/**\n * Set up general reactive class.\n *\n * The reactive class is responsible for contining the main store,\n * the complete components list that can be used and initialize the main\n * component.\n *\n * @return {void}\n */\nconst reactive = class {\n\n    constructor(definition) {\n        // Component definitions. This is used to create new components.\n        this.maindefinition = definition;\n        this.definitions = {};\n        this.store = definition.store ?? {};\n        // This array contains the unique name of every component. The name list\n        // is used on every component rendering and we want it as fast as posible.\n        this.componentnames = new Set([]);\n        this.components = [];\n    }\n\n    component(definition) {\n        this.definitions[definition.name] = definition;\n        this.componentnames.add(definition.name);\n    }\n\n    render() {\n        // Generate the main component.\n        this.maincomponent = createComponent(\n            Object.assign(this.maindefinition, {name: 'appmain', $reactive: this}),\n            {}\n        );\n        reactives.push(this.maincomponent);\n    }\n\n    renderComponent(parentcomponent, elem) {\n        // Check for base definition.\n        const name = elem.dataset.name;\n        if (this.definitions[name] == undefined) {\n            throw new TypeError(`Unkown component ${name}`);\n        }\n        const definition = Object.create(this.definitions[name]);\n        definition.$reactive = this;\n        definition.el = elem;\n        const extradata = {};\n        // Load props.\n        for (const key in definition.props) {\n            const bindname = elem.dataset[key];\n            if (bindname !== undefined) {\n                extradata[key] = parentcomponent.getDataFromPath(bindname) ?? definition.props[key];\n            } else {\n                extradata[key] = definition.props[key];\n            }\n        }\n\n        // Render component.\n        const result = createComponent(definition, extradata);\n        // Add binds.\n        for (const key in definition.props) {\n            const bindname = elem.dataset[key];\n            if (bindname !== undefined) {\n                parentcomponent.addBind(bindname, {\n                    update: (value) => {\n                        result.data[key] = value;\n                    },\n                });\n            }\n        }\n        this.components.push(result);\n        reactives.push(result);\n        return result;\n    }\n\n    getComponents() {\n        return this.components;\n    }\n\n    getStore() {\n        return this.store;\n    }\n\n    getMainComponent() {\n        return this.maincomponent;\n    }\n};\n\nexport default reactive;\n\n// This structure contains all changes pending to propagate.\nlet pendingchanges = {};\n\nexport const emitChange = function(path, action) {\n    // Convert path to structure.\n    let patharray = path.split('.');\n    action = action ?? 'update';\n    queueChange(patharray, action, pendingchanges);\n    // Send the order to propagate changes.\n    propagateChanges();\n};\n\n\nconst queueChange = function(patharray, action, node) {\n    if (patharray.length == 0) {\n        node.$action = action;\n        return;\n    }\n    const first = patharray.shift();\n    if (node[first] === undefined) {\n        // We don't need to add any action because the default action is update.\n        node[first] = {};\n    }\n    return queueChange(patharray, action, node[first]);\n};\n\n// Propagate changes to all components.\nconst instantPropagateChanges = function() {\n    log.debug(\"Sending changes to the observers\");\n    // Safe the current changes and clean the list.\n    const changestosend = pendingchanges;\n    pendingchanges = {};\n    // Check the storages which need to propagate to all reactives.\n    Object.keys(changestosend).forEach((rootnode) => {\n        // Check which reactives uses this storage.\n        reactives.forEach((component) => {\n            if (component.data.$id == rootnode) {\n                component.propagateChanges(changestosend[rootnode]);\n            }\n        });\n    });\n};\n\nconst propagateChanges = debounce(instantPropagateChanges, 10);\n"],"file":"reactive.min.js"}