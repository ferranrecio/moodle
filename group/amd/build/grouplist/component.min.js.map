{"version":3,"sources":["../../src/grouplist/component.js"],"names":["createComponent","definition","extradata","data","TypeError","name","$reactive","refresh","defaultRefresh","component","datahandler","proxyComponent","$el","$store","store","template","domstructure","render","defaultRenderer","subcomponents","binds","child","Set","onOutput","props","Object","assign","computed","watchers","methods","getDataFromPath","updateDataFromPath","propagateChanges","defaultPropagateChanges","addBind","defaultAddBind","processAllBinds","processBinds","mounted","defaultMounted","finishiOutput","parseOutput","Promise","resolve","then","el","parentNode","replaceChild","log","debug","path","getInternalPath","patharray","split","findNodeFromPath","length","first","shift","temp","document","createElement","innerHTML","trim","content","firstChild","prop","value","shutup","val","changes","forEach","subcomponent","bind","bindObjectToPath","init","push","node","add","executeBinds","changenode","bindnode","datanode","action","$action","binder","keys","childname","bindchild","initmethod","parseIf","parseElse","parseSubcomponents","parseBinds","parseModel","parseEvents","querySelectorAll","subc","renderComponent","parseBindsText","parseBindsHTML","parseOnClick","dataset","if","original","style","display","update","isEmpty","else","valueOf","primitive","r","f","bindText","innerText","bindHtml","model","activeElement","addEventListener","propname","pop","parent","generateFakeComponent","elem","dummie","result","Date","now","onclick","method","e"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Defgault reactive component.\n *\n * @module     core_group/grouplist/store\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport log from 'core/log';\nimport {debounce} from 'core/utils';\nimport datahandler from 'core_group/grouplist/datahandler';\n\n\n/**\n * Generate a valir component from definition.\n *\n * @return {void}\n */\nexport const createComponent = function (definition, extradata) {\n    // We save all the required strings into the debounced string loader.\n    // TODO: the rest of the component logic should wait until all strings are loaded.\n\n    if (extradata === undefined) {\n        extradata = {};\n    }\n\n    if (definition.data == undefined) {\n        definition.data = () => {};\n    }\n\n    if (typeof definition.data !== 'function') {\n        throw new TypeError('Data should be a function');\n    }\n\n    if (definition.name == undefined) {\n        throw new TypeError('All components require a name property');\n    }\n\n    if (definition.$reactive == undefined) {\n        throw new TypeError('core_group/grouplist/reactive to register new components');\n    }\n\n    // Some methods require a small debounce to prevent infinite chains.\n    const refresh = debounce(definition.refresh ?? defaultRefresh, 50);\n\n    const component = datahandler.proxyComponent({\n        name: definition.name,\n        $el: {},\n        $reactive : definition.$reactive,\n        $store : definition.store ?? {},\n        // $definition: definition,\n        // Component render and refresh.\n        template : definition.template ?? '',\n        domstructure : definition.domstructure,\n        render : definition.render ?? defaultRenderer,\n        refresh: refresh,\n        // Internal lists.\n        subcomponents: [],\n        binds: { child: {}, binds: new Set([])},\n        // dirty: {}, // TODO move this to a proxy.\n        onOutput: [], // Array of methods to execute on output.\n        // Stored attributes.\n        props : definition.props ?? {},\n        data : Object.assign(extradata, definition.data() ?? {}),\n        computed : definition.computed ?? {},\n        // Other helpers.\n        watchers : definition.watchers ?? {},\n        methods : definition.methods ?? {},\n        getDataFromPath : getDataFromPath,\n        updateDataFromPath : updateDataFromPath,\n        // Binding methods.\n        propagateChanges : definition.propagateChanges ?? defaultPropagateChanges,\n        addBind : definition.addBind ?? defaultAddBind,\n        processAllBinds : definition.processAllBinds ?? processAllBinds,\n        processBinds : definition.processBinds ?? processBinds,\n        // Component lifecycle.\n        mounted : definition.mounted ?? defaultMounted,\n        // markDirty: markDirty,\n        finishiOutput: finishiOutput,\n    });\n\n    // Add computed props.\n    // datahandler.addPComputedProxis(component);\n\n    // Generate the element (bindings will be applied later).\n    component.$el = component.render();\n    // Index all bindings and subcomponents.\n    parseOutput(component);\n\n    // Each DOM object is resposible of it's own data and it is stored there.\n    // Maybe this is unnecessary.\n    component.$el.component = component;\n\n    // Now we have the element, we can invoke the async component methods before display it.\n    Promise.resolve(component.mounted()).then(() => {\n        component.finishiOutput();\n        // Replace the original DOM element by the new one.\n        definition.el.parentNode.replaceChild(component.$el, definition.el);\n        log.debug(`Component ${component.name} rendered`);\n    });\n\n    return component;\n};\n\n// Translate a string path to a specific data path.\nconst getDataFromPath = function(path) {\n    // Paths can include the root node or not. Because this is a component method\n    // we don't need to care about that but we check if it is correct to avoid problems.\n    path = datahandler.getInternalPath(path, this.data);\n    let patharray = path.split('.');\n    return findNodeFromPath(patharray, this.data);\n};\n\n// This is a generic method to get data from complex objects using a path array.\nconst findNodeFromPath = function(patharray, data) {\n    if (patharray.length == 0) {\n        return data;\n    }\n    const first = patharray.shift();\n    if (data[first] === undefined) {\n        return undefined;\n    }\n    return findNodeFromPath(patharray, data[first]);\n};\n\n/**\n * Returns an element to be used ar initial component.\n */\nconst defaultRenderer = function() {\n\n    if (this.domstructure !== undefined) {\n        return this.domstructure;\n    }\n    let temp = document.createElement('template');\n    // If the component hass a static template.\n    if (this.template != '') {\n        // Trim is necessary to avoid empty nodes in the structure.\n        temp.innerHTML = this.template.trim();\n    } else {\n        temp.innerHTML = '<div>Invalid component!</div>';\n    }\n    // If the component has a mustache template (soon).\n    return temp.content.firstChild;\n};\n\nconst defaultRefresh = function(prop, value) {\n    if (prop == undefined) {\n        // processAllBinds(this);\n        shutup(value);\n        return;\n    }\n    // processBinds(this, prop, value);\n};\n//TODO delete this method\nconst shutup = function(val) {\n    return val;\n};\n\nconst defaultMounted = function() {\n    // The default Mount does not do anything.\n    return true;\n};\n\n\n// Binds is a structure of reactive data observer. Its a tree where each node represents a set of\n// observer methods. When some change is performed in the data tree the emit change will look for the\n// equivalent node of that tree and will execute all methods of the set.\nconst defaultPropagateChanges = function(changes) {\n    // Let bindings do their job.\n    this.processBinds(changes);\n    // Propagate changes to subcomponents.\n    this.subcomponents.forEach((subcomponent) => {\n        subcomponent.propagateChanges(changes);\n    });\n    return true;\n};\n\n/**\n * Binds a watcher into a specific data path.\n *\n * Binds, like watchers, can have several methods:\n *  - update(value) will recieve the node value when a change is emitted.\n *  - delete() executed when the binded data is eliminated\n *  - init(value) this will be executed only once when the object is ready to be rendered.\n *\n * @param String path: the internal path (root node will be added if not present)\n * @bind Object the bind object.\n */\nconst defaultAddBind = function(path, bind) {\n    // Paths can include the root node or not. Because this is a component method\n    // we don't need to care about that but we check if it is correct to avoid problems.\n    path = datahandler.getInternalPath(path, this.data);\n    let patharray = path.split('.');\n    bindObjectToPath(patharray, this.binds, bind);\n\n    if (bind.init !== undefined) {\n        this.onOutput.push(bind.init);\n    }\n};\n\nconst bindObjectToPath = function(patharray, node, bind) {\n    if (patharray.length == 0) {\n        node.binds.add(bind);\n        return;\n    }\n    const first = patharray.shift();\n    if (node.child[first] === undefined) {\n        // log.debug(data);\n        // throw new TypeError(`Cannot find ${first} to bind data.`);\n        node.child[first] = { child: {}, binds: new Set([])};\n    }\n    return bindObjectToPath(patharray, node.child[first], bind);\n};\n\n/**\n * Process a specific property bindings from a component.\n *\n * @param String the property name\n * @param component the reactive component\n */\nconst processAllBinds = function () {\n    // The default action is \"update\". If we send the full data will execute all\n    // possible \"updates\"\n    executeBinds(this.data, this.binds, this.data);\n};\n\nconst processBinds = function (changes) {\n    executeBinds(changes, this.binds, this.data);\n};\n\nconst executeBinds = function (changenode, bindnode, datanode) {\n    // If change node is undefined we don't need to continue any further.\n    if (changenode === undefined) {\n        return;\n    }\n    // Detect change type.\n    const action = changenode.$action ?? 'update';\n    // Process all binding of that node (if any).\n    [...bindnode.binds].forEach((binder) => {\n        if (binder[action] !== undefined) {\n            binder[action](datanode);\n        }\n    });\n    // Propagate changes to sons.\n    Object.keys(bindnode.child).forEach((childname) => {\n        const bindchild = bindnode.child[childname];\n        if (datanode !== undefined) {\n            executeBinds(changenode[childname], bindchild, datanode[childname]);\n        } else {\n            // there are some situations where a binding has no data:\n            // - When data is deleted.\n            // - When the data is binded to a value it will be there eventually.\n            executeBinds(changenode[childname], bindchild);\n        }\n\n    });\n};\n\n// Other.\n\nconst finishiOutput = function() {\n    this.onOutput.forEach((initmethod) => {\n        initmethod();\n    });\n    this.processAllBinds();\n};\n\n// Reactive DOM!\n// TODO: move this to another module and generate a single method wrapper that gets:\n// - domelement.\n// - reactive data storage.\n// - Methods for events.\n// - blocks / slots\n\n/**\n * Generate bindings and subcomponents.\n *\n * One key point of reactivity is not to update all page every time but only the affected\n * elements. Once the component has loaded the template, this method generate all\n * bindings, models, subcomponents and if affected by refreshes.\n */\nconst parseOutput = function(component) {\n    // Ifs and Else.\n    parseIf(component);\n    parseElse(component);\n    // For.\n    // Remainign subcomponents.\n    parseSubcomponents(component);\n    // Direct bindings on internal elements.\n    parseBinds(component);\n    // Models.\n    parseModel(component);\n    // Events.\n    parseEvents(component);\n};\n\nconst parseSubcomponents = function(component) {\n    const subcomponents = component.$el.querySelectorAll('component');\n    subcomponents.forEach((subcomponent) => {\n        const subc = component.$reactive.renderComponent(component, subcomponent);\n        component.subcomponents.push(subc);\n    });\n};\n\nconst parseBinds = function(component) {\n    parseBindsText(component);\n    parseBindsHTML(component);\n    // Full binds.\n    // parseFullBinds(component);\n};\n\nconst parseEvents = function(component) {\n    parseOnClick(component);\n    // Full binds.\n    // parseFullBinds(component);\n};\n\nconst parseIf = function(component) {\n    const binds = component.$el.querySelectorAll('[data-if]');\n    binds.forEach((bind) => {\n        const name = bind.dataset.if;\n        const original = bind.style.display;\n        component.addBind(name, {\n            update: (value) => {\n                if (isEmpty(value)) {\n                    bind.style.display = 'none';\n                } else {\n                    bind.style.display = original;\n                }\n            },\n        });\n    });\n};\n\nconst parseElse = function(component) {\n    const binds = component.$el.querySelectorAll('[data-else]');\n    binds.forEach((bind) => {\n        const name = bind.dataset.else;\n        const original = bind.style.display;\n        component.addBind(name, {\n            update: (value) => {\n                if (isEmpty(value)) {\n                    bind.style.display = original;\n                } else {\n                    bind.style.display = 'none';\n                }\n            },\n        });\n    });\n};\n\n// TODO: move to util.js.\n/**\n * This is a equivalent of PHP empty in JS but only for objects.\n *\n * @param mixed value the variable to check.\n */\nconst isEmpty = (value) => {\n    if (value === undefined) {\n        return true;\n    }\n    if (typeof (value) == 'function') {\n        return false;\n    }\n    if (value == '' || value == false || value == 0 || value === null || value.length === 0){\n        return true;\n    }\n    if (value.valueOf !== undefined) {\n        const primitive = value.valueOf();\n        if (primitive == '' || primitive == false || primitive == 0 || primitive === null || primitive.length === 0){\n            return true;\n        }\n        return false;\n    }\n\n    if (typeof (value) == \"object\") {\n        let r = true;\n        for (let f in value) {\n            r = (f !== null);\n        }\n        return r;\n    }\n    return false;\n};\n\nconst parseBindsText = function(component) {\n    const binds = component.$el.querySelectorAll('[data-bind-text]');\n    binds.forEach((bind) => {\n        const name = bind.dataset.bindText;\n        // const data = component.getDataFromPath(name);\n        component.addBind(name, {\n            update: (value) => {\n                if (bind.innerText != value) {\n                    bind.innerText = value;\n                }\n            },\n        });\n    });\n};\n\nconst parseBindsHTML = function(component) {\n    const binds = component.$el.querySelectorAll('[data-bind-html]');\n    binds.forEach((bind) => {\n        const name = bind.dataset.bindHtml;\n        // const data = component.getDataFromPath(name);\n        component.addBind(name, {\n            update: (value) => {\n                if (bind.innerHTML != value) {\n                    bind.innerHTML = value;\n                }\n            },\n        });\n    });\n};\n\n// TODO: for now this is limited to input values.\nconst parseModel = function(component) {\n    const binds = component.$el.querySelectorAll('input[data-model]');\n    binds.forEach((bind) => {\n        const name = bind.dataset.model;\n        component.addBind(name, {\n            update: (value) => {\n                if (bind.value != value && document.activeElement !== bind) {\n                    bind.value = value;\n                }\n            },\n        });\n        // Add events to the input element.\n        bind.addEventListener(\n          'keyup',\n          () => {\n            const data = component.getDataFromPath(name);\n            if (bind.value != data.valueOf()) {\n                component.updateDataFromPath(name, bind.value);\n            }\n          }\n        );\n    });\n};\n\nconst updateDataFromPath = function(path, value) {\n    path = datahandler.getInternalPath(path, this.data);\n    let patharray = path.split('.');\n    const propname = patharray.pop();\n    let parent = findNodeFromPath(patharray, this.data);\n    parent[propname] = value;\n};\n\n\n/**\n * Generate fake components for all full bindings.\n *\n * Full binds is seems like a regular bind-text or bind-html but it is not.\n * a full bind is in reality to go deeper in the component data and it is, in fact,\n * a fake subcomponent that will react to their own version of the data.\n *\n * @param component a component structure.\n */\nconst parseFullBinds = function(component) {\n    const binds = component.$el.querySelectorAll('[data-bind]');\n    binds.forEach((bind) => {\n        const name = bind.dataset.bind;\n        // const data = component.getDataFromPath(name);\n        // Generate a fake component to replace the current node.\n        const fakecompoment = generateFakeComponent(bind, component, component.data[name]);\n        component.subcomponents.push(fakecompoment);\n        // Add this event as a bind to progate changes.\n        component.addBind(name, {\n            update: (value) => {\n                if (fakecompoment.data[name] !== value) {\n                    fakecompoment.data[name] = value;\n                }\n            },\n        });\n    });\n};\n\nconst generateFakeComponent = function(elem, component, extradata) {\n    // We don't want the fakecomponent to interfere with the main component so we\n    // remove from the presentation until it is reactive by itself.\n    const dummie = document.createElement('template');\n    elem.parentNode.replaceChild(dummie, elem);\n    // const data = Object.assign(extradata, component.data);\n    // const data = Object.create(component.data);\n    const data = {};\n    Object.assign(data, component.data);\n    Object.assign(data, extradata);\n\n    const result = createComponent({\n        el: dummie,\n        name: Date.now(),\n        props : component.props,\n        domstructure : elem,\n        data : function() {\n            return extradata;\n        },\n        // Copy some elements form component definition.\n        $reactive : component.$reactive,\n        $store : component.$store,\n        render: component.render,\n        computed: component.computed,\n        methods: component.methods,\n        // Fake components does not have lifecycle.\n        mounted : defaultMounted,\n    });\n    return result;\n};\n\nconst parseOnClick = function(component) {\n    const binds = component.$el.querySelectorAll('[data-onclick]');\n    binds.forEach((bind) => {\n        const name = bind.dataset.onclick;\n        const method = component.methods[name].bind(component);\n        bind.addEventListener(\"click\", (e) => {method(e);});\n    });\n};\n"],"file":"component.min.js"}