{"version":3,"sources":["../../src/grouplist/store.js"],"names":["state","groups","title","onrequest","getters","group","id","actions","loadGroup","store","mutations","processUpdates","updates"],"mappings":"8cAwBMA,CAAAA,CAAK,CAAG,CAEVC,MAAM,CAAE,EAFE,CAGVC,KAAK,CAAE,WAHG,CAIVC,SAAS,GAJC,C,WAsCA,CACZH,KAAK,CAALA,CADY,CAEZI,OAAO,CARO,CACZC,KAAK,CAAE,eAACL,CAAD,QAAW,UAACM,CAAD,CAAQ,CACtB,MAAON,CAAAA,CAAK,CAACC,MAAN,CAAaK,CAAb,CACV,CAFM,CADK,CAMF,CAGZC,OAAO,CArBO,CACNC,SADM,oBACIC,CADJ,CACWJ,CADX,CACkB,gIAC1BL,CAAK,CAACG,SAAN,IAEAH,CAAK,CAACG,SAAN,IAH0B,yBAInBE,CAJmB,8CAK7B,CANW,CAkBF,CAIZK,SAAS,CAhCO,CACdC,cADc,yBACCX,CADD,CACQY,CADR,CACiB,CAC3BZ,CAAK,CAACG,SAAN,IACAH,CAAK,CAACG,SAAN,IACA,MAAOS,CAAAA,CACV,CALa,CA4BJ,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course groups store.\n *\n * @module     core_group/grouplist/store\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst state = {\n    // The complete group list.\n    groups: {},\n    title: 'title me!',\n    onrequest: false,\n};\n\n// mutations are operations that actually mutate the state.\n// each mutation handler gets the entire state tree as the\n// first argument, followed by additional payload arguments.\nconst mutations = {\n    processUpdates(state, updates) {\n        state.onrequest = true;\n        state.onrequest = false;\n        return updates; // TODO: elmimate this!\n    },\n};\n\n// actions are functions that cause side effects and can involve\n// asynchronous operations. Each method will recive the store object.\nconst actions = {\n    async loadGroup(store, group) {\n        state.onrequest = true;\n        // Load a group data into store.\n        state.onrequest = false;\n        return group; // TODO: elmimate this!\n    },\n};\n\n// getters are functions to retrieve information from the state.\n// They will get the state as only parameter. In case a getter has\n// params, it will reqwuire a double return.\nconst getters = {\n    group: (state) => (id) => {\n        return state.groups[id];\n    },\n};\n\nconst store = {\n  state,\n  getters,\n  actions,\n  mutations,\n};\nexport default store;\n"],"file":"store.min.js"}