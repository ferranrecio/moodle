{"version":3,"sources":["../../../src/local/tests/testbase.js"],"names":["TestBase","fullname","initialstate","anoncounter","shortname","item","document","createElement","dataset","innerHTML","currenttitle","target","appendChild","addBullet","assertTrue","recalcStats","bulletof","prepend","element","getElementById","total","querySelectorAll","length","pass","fails","exceptions","content","fail","tooglepass","addEventListener","classList","toggle","value","bullet","querySelector","text","extraselectors","addTest","expected","reality","itemresult","getTestItem","log","error","setBullet","parentNode","addExpected","state","removeExpected","add","JSON","stringify","style","display","tests","getAllTests","forEach","test","providerFunction","charAt","toUpperCase","slice","singlescenario","scenario","hasOwnProperty","testitle","addTitle","setUp","key","markTestException","tearDown","obj","funcs","Object","getOwnPropertyNames","getPrototypeOf","filter","match","markTestPass","markTestFail"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Test base component.\n *\n * @module     format_editortest/local/tests/stateevents\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport log from 'core/log';\n\nclass TestBase {\n\n    addTest(fullname, initialstate) {\n        if (this.anoncounter === undefined) {\n            this.anoncounter = 0;\n        }\n        this.anoncounter++;\n        let shortname = `Assert#${this.anoncounter}`;\n\n        const item = document.createElement('p');\n        item.dataset.shortname = shortname;\n        item.innerHTML = `<strong style=\"min-width:5em;\">Pending</strong> - ${fullname} (${this.currenttitle} ${shortname})`;\n        this.target.appendChild(item);\n        this.addBullet(shortname);\n        // Set state if necessary.\n        if (initialstate !== undefined) {\n            this.assertTrue(shortname, initialstate);\n        }\n\n        this.recalcStats();\n\n        return item.dataset.shortname;\n    }\n\n    addBullet(shortname) {\n        const item = document.createElement('span');\n        item.dataset.bulletof = shortname;\n        item.innerHTML = '?';\n        this.target.prepend(item);\n    }\n\n    recalcStats() {\n        let element = document.getElementById('assertsummary');\n\n        // Count assert totals.\n        const total = document.querySelectorAll(`p[data-shortname]`).length;\n        // Count OK.\n        const pass = document.querySelectorAll(`p[data-shortname][data-state='pass']`).length;\n        // Count errors.\n        const fails = document.querySelectorAll(`p[data-shortname][data-state='fail']`).length;\n        // Count Exceptions.\n        const exceptions = document.querySelectorAll(`p[data-shortname][data-state='exception']`).length;\n\n        let content = {\n            pass: `Test passed: ${pass}/${total} (click to display passed test)`,\n            fail: `Test failed: ${fails}/${total}`,\n            exceptions: `Uncatched exceptions: ${exceptions}/${total}`,\n        };\n\n        if (pass === total) {\n            content.pass = `<span style=\"color:green\">${content.pass}</span>`;\n        }\n        if (fails > 0) {\n            content.fail = `<span style=\"color:red\">${content.fail}</span>`;\n        }\n        if (exceptions > 0) {\n            content.exceptions = `<span style=\"color:red\">${content.exceptions}</span>`;\n        }\n\n        element.innerHTML = `<ul>\n            <li id=\"passedtests\">${content.pass}</li>\n            <li>${content.fail}</li>\n            <li>${content.exceptions}</li>\n        <ul>`;\n\n        // Small hack to toogle passed tests.\n        const tooglepass = document.getElementById('passedtests');\n        tooglepass.addEventListener('click', () => {\n            document.getElementById('region-main').classList.toggle('displaypass');\n        });\n    }\n\n    setBullet(shortname, value) {\n        const bullet = this.target.querySelector(`[data-bulletof='${shortname}']`);\n        if (bullet) {\n            bullet.innerHTML = value;\n        }\n    }\n\n    addTitle(text) {\n        this.currenttitle = text;\n        const item = document.createElement('h4');\n        item.innerHTML = text;\n        this.target.appendChild(item);\n    }\n\n    getTestItem(shortname, extraselectors) {\n        // Check if it is an anonymous test\n        if (shortname === null) {\n            shortname = this.addTest('Anonymous assert');\n        }\n        extraselectors = extraselectors ?? '';\n        return this.target.querySelector(`[data-shortname='${shortname}'] ${extraselectors}`);\n    }\n\n    markTestFail(shortname, expected, reality) {\n        const itemresult = this.getTestItem(shortname, 'strong');\n        if (!itemresult) {\n            log.error(`Missing ${shortname} test`);\n            return;\n        }\n        itemresult.innerHTML = '<span style=\"color:red\">Failed!</span>';\n        this.setBullet(itemresult.parentNode.dataset.shortname, '<span style=\"color:red\">F</span>');\n        this.addExpected(itemresult.parentNode, expected, reality);\n\n        itemresult.parentNode.dataset.state = 'fail';\n\n        this.recalcStats();\n    }\n\n    markTestException(shortname, error) {\n        const itemresult = this.getTestItem(shortname, 'strong');\n        if (!itemresult) {\n            log.error(`Missing ${shortname} test`);\n            return;\n        }\n        itemresult.innerHTML = '<span style=\"color:red\">Exception!</span>';\n        this.setBullet(itemresult.parentNode.dataset.shortname, '<span style=\"color:red\">E</span>');\n        this.addExpected(itemresult.parentNode, 'No exceptions', error);\n\n        itemresult.parentNode.dataset.state = 'exception';\n\n        this.recalcStats();\n    }\n\n    markTestPass(shortname) {\n        const itemresult = this.getTestItem(shortname, 'strong');\n        if (!itemresult) {\n            log.error(`Missing ${shortname} test`);\n            return;\n        }\n        itemresult.innerHTML = '<span style=\"color:green\">Pass</span>';\n        this.setBullet(itemresult.parentNode.dataset.shortname, '<span style=\"color:green\">·</span>');\n        this.removeExpected(itemresult.parentNode);\n\n        itemresult.parentNode.dataset.state = 'pass';\n\n        this.recalcStats();\n    }\n\n    addExpected(target, expected, reality) {\n        const item = document.createElement('div');\n        item.classList.add('alert');\n        item.classList.add('alert-danger');\n        item.innerHTML = `<strong>Expected: </strong> <pre>${JSON.stringify(expected, null, 2)}</pre>`;\n        item.innerHTML += `<strong>Reality: </strong> <pre>${JSON.stringify(reality, null, 2)}</pre>`;\n        target.appendChild(item);\n    }\n\n    removeExpected(target) {\n        const expected = target.querySelector('div.alert');\n        if (expected) {\n            expected.style.display = 'none';\n        }\n    }\n\n    debug(value) {\n        const item = document.createElement('div');\n        item.classList.add('alert');\n        item.classList.add('alert-info');\n        item.innerHTML = `<pre>${JSON.stringify(value, null, 2)}</pre>`;\n        this.target.appendChild(item);\n    }\n\n    runTests() {\n        let tests = this.getAllTests(this);\n        tests.forEach(test => {\n            // Check for data providers.\n            const providerFunction = `dataProvider${test.charAt(0).toUpperCase() + test.slice(1)}`;\n            let dataset = {singlescenario: {}};\n            if (this[providerFunction] !== undefined) {\n                dataset = this[providerFunction]();\n            }\n\n            // Execute all scenarios.\n            for (const scenario in dataset) {\n                if (!dataset.hasOwnProperty(scenario)) {\n                    continue;\n                }\n                let testitle = test;\n                if (scenario !== 'singlescenario') {\n                    testitle = `${test}[${scenario}]`;\n                }\n                this.addTitle(testitle);\n\n                // Test setup.\n                if (this.setUp !== undefined) {\n                    this.setUp();\n                }\n\n                // Execute test.\n                try {\n                    this[test](dataset[scenario]);\n                } catch (error) {\n                    log.error(`Exception raised in test ${testitle}`);\n                    log.error(error);\n                    const key = this.addTest(`Exception raised in test ${testitle}`);\n                    this.markTestException(key, error);\n                }\n\n                // Test tear down.\n                if (this.tearDown !== undefined) {\n                    this.tearDown();\n                }\n            }\n        });\n    }\n\n    getAllTests(obj) {\n        let funcs = Object.getOwnPropertyNames(Object.getPrototypeOf(obj));\n        return funcs.filter(item => {\n            return typeof this[item] === 'function' && item.match(/^test.+/);\n        });\n    }\n\n    assertTrue(shortname, value) {\n        if (value) {\n            this.markTestPass(shortname);\n        } else {\n            this.markTestFail(shortname, true, value);\n        }\n    }\n\n    assertEquals(shortname, expected, reality) {\n        if (expected === reality) {\n            this.markTestPass(shortname);\n        } else {\n            this.markTestFail(shortname, expected, reality);\n        }\n    }\n\n}\n\nexport default TestBase;\n"],"file":"testbase.min.js"}