{"version":3,"sources":["../../../src/local/tests/testbase.js"],"names":["TestBase","resultsid","target","document","getElementById","runTests","fullname","initialstate","anoncounter","shortname","item","createElement","dataset","innerHTML","currenttitle","appendChild","addBullet","assertTrue","recalcStats","bulletof","prepend","element","total","querySelectorAll","length","pass","fails","exceptions","content","fail","tooglepass","addEventListener","classList","toggle","value","bullet","querySelector","text","extraselectors","addAssert","expected","reality","itemresult","getTestItem","log","error","setBullet","parentNode","addExpected","state","removeExpected","add","JSON","stringify","style","display","setUpBeforeTests","tests","getAllTests","forEach","test","providerFunction","charAt","toUpperCase","slice","singlescenario","scenario","hasOwnProperty","testitle","addTitle","expectexception","setUp","key","markTestException","tearDown","obj","funcs","Object","getOwnPropertyNames","getPrototypeOf","filter","match","markTestPass","markTestFail"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Test base component.\n *\n * @module     format_editortest/local/tests/stateevents\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport log from 'core/log';\n\nclass TestBase {\n\n    /**\n     * Initialize the test object.\n     *\n     * @param {string} resultsid the result element id.\n     * @returns {boolean}\n     */\n    init(resultsid) {\n        this.target = document.getElementById(resultsid);\n\n        this.runTests();\n\n        return true;\n    }\n\n    addAssert(fullname, initialstate) {\n        if (this.anoncounter === undefined) {\n            this.anoncounter = 0;\n        }\n        this.anoncounter++;\n        let shortname = `Assert#${this.anoncounter}`;\n\n        const item = document.createElement('p');\n        item.dataset.shortname = shortname;\n        item.innerHTML = `<strong style=\"min-width:5em;\">Pending</strong> - ${fullname} (${this.currenttitle} ${shortname})`;\n        this.target.appendChild(item);\n        this.addBullet(shortname);\n        // Set state if necessary.\n        if (initialstate !== undefined) {\n            this.assertTrue(shortname, initialstate);\n        }\n\n        this.recalcStats();\n\n        return item.dataset.shortname;\n    }\n\n    addBullet(shortname) {\n        const item = document.createElement('span');\n        item.dataset.bulletof = shortname;\n        item.innerHTML = '?';\n        this.target.prepend(item);\n    }\n\n    recalcStats() {\n        let element = document.getElementById('assertsummary');\n\n        // Count assert totals.\n        const total = document.querySelectorAll(`p[data-shortname]`).length;\n        // Count OK.\n        const pass = document.querySelectorAll(`p[data-shortname][data-state='pass']`).length;\n        // Count errors.\n        const fails = document.querySelectorAll(`p[data-shortname][data-state='fail']`).length;\n        // Count Exceptions.\n        const exceptions = document.querySelectorAll(`p[data-shortname][data-state='exception']`).length;\n\n        let content = {\n            pass: `Test passed: ${pass}/${total} (click to display passed test)`,\n            fail: `Test failed: ${fails}/${total}`,\n            exceptions: `Uncatched exceptions: ${exceptions}/${total}`,\n        };\n\n        if (pass === total) {\n            content.pass = `<span style=\"color:green\">${content.pass}</span>`;\n        }\n        if (fails > 0) {\n            content.fail = `<span style=\"color:red\">${content.fail}</span>`;\n        }\n        if (exceptions > 0) {\n            content.exceptions = `<span style=\"color:red\">${content.exceptions}</span>`;\n        }\n\n        element.innerHTML = `<ul>\n            <li id=\"passedtests\">${content.pass}</li>\n            <li>${content.fail}</li>\n            <li>${content.exceptions}</li>\n        <ul>`;\n\n        // Small hack to toogle passed tests.\n        const tooglepass = document.getElementById('passedtests');\n        tooglepass.addEventListener('click', () => {\n            document.getElementById('region-main').classList.toggle('displaypass');\n        });\n    }\n\n    setBullet(shortname, value) {\n        const bullet = this.target.querySelector(`[data-bulletof='${shortname}']`);\n        if (bullet) {\n            bullet.innerHTML = value;\n        }\n    }\n\n    addTitle(text) {\n        this.currenttitle = text;\n        const item = document.createElement('h4');\n        item.innerHTML = text;\n        this.target.appendChild(item);\n    }\n\n    getTestItem(shortname, extraselectors) {\n        // Check if it is an anonymous test\n        if (shortname === null) {\n            shortname = this.addAssert('Anonymous assert');\n        }\n        extraselectors = extraselectors ?? '';\n        return this.target.querySelector(`[data-shortname='${shortname}'] ${extraselectors}`);\n    }\n\n    markTestFail(shortname, expected, reality) {\n        const itemresult = this.getTestItem(shortname, 'strong');\n        if (!itemresult) {\n            log.error(`Missing ${shortname} test`);\n            return;\n        }\n        itemresult.innerHTML = '<span style=\"color:red\">Failed!</span>';\n        this.setBullet(itemresult.parentNode.dataset.shortname, '<span style=\"color:red\">F</span>');\n        this.addExpected(itemresult.parentNode, expected, reality);\n\n        itemresult.parentNode.dataset.state = 'fail';\n\n        this.recalcStats();\n    }\n\n    markTestException(shortname, error) {\n        const itemresult = this.getTestItem(shortname, 'strong');\n        if (!itemresult) {\n            log.error(`Missing ${shortname} test`);\n            return;\n        }\n        itemresult.innerHTML = '<span style=\"color:red\">Exception!</span>';\n        this.setBullet(itemresult.parentNode.dataset.shortname, '<span style=\"color:red\">E</span>');\n        this.addExpected(itemresult.parentNode, 'No exceptions', error);\n\n        itemresult.parentNode.dataset.state = 'exception';\n\n        this.recalcStats();\n    }\n\n    markTestPass(shortname) {\n        const itemresult = this.getTestItem(shortname, 'strong');\n        if (!itemresult) {\n            log.error(`Missing ${shortname} test`);\n            return;\n        }\n        itemresult.innerHTML = '<span style=\"color:green\">Pass</span>';\n        this.setBullet(itemresult.parentNode.dataset.shortname, '<span style=\"color:green\">·</span>');\n        this.removeExpected(itemresult.parentNode);\n\n        itemresult.parentNode.dataset.state = 'pass';\n\n        this.recalcStats();\n    }\n\n    addExpected(target, expected, reality) {\n        const item = document.createElement('div');\n        item.classList.add('alert');\n        item.classList.add('alert-danger');\n        item.innerHTML = `<strong>Expected: </strong> <pre>${JSON.stringify(expected, null, 2)}</pre>`;\n        item.innerHTML += `<strong>Reality: </strong> <pre>${JSON.stringify(reality, null, 2)}</pre>`;\n        target.appendChild(item);\n    }\n\n    removeExpected(target) {\n        const expected = target.querySelector('div.alert');\n        if (expected) {\n            expected.style.display = 'none';\n        }\n    }\n\n    debug(value) {\n        const item = document.createElement('div');\n        item.classList.add('alert');\n        item.classList.add('alert-info');\n        item.innerHTML = `<pre>${JSON.stringify(value, null, 2)}</pre>`;\n        this.target.appendChild(item);\n    }\n\n    runTests() {\n        // Check if we have any setup before.\n        if (this.setUpBeforeTests !== undefined) {\n            this.setUpBeforeTests();\n        }\n        // Proceed to execute each test.\n        let tests = this.getAllTests(this);\n        tests.forEach(test => {\n            // Check for data providers.\n            const providerFunction = `dataProvider${test.charAt(0).toUpperCase() + test.slice(1)}`;\n            let dataset = {singlescenario: {}};\n            if (this[providerFunction] !== undefined) {\n                dataset = this[providerFunction]();\n            }\n\n            // Execute all scenarios.\n            for (const scenario in dataset) {\n                if (!dataset.hasOwnProperty(scenario)) {\n                    continue;\n                }\n                let testitle = test;\n                if (scenario !== 'singlescenario') {\n                    testitle = `${test}[${scenario}]`;\n                }\n                this.addTitle(testitle);\n\n                this.expectexception = null;\n\n                // Test setup.\n                if (this.setUp !== undefined) {\n                    this.setUp();\n                }\n\n                // Execute test.\n                try {\n                    this[test](dataset[scenario]);\n                } catch (error) {\n                    if (this.expectexception) {\n                        this.assertTrue(this.expectexception, true);\n                    } else {\n                        log.error(`Exception raised in test ${testitle}`);\n                        log.error(error);\n                        const key = this.addAssert(`Exception raised in test ${testitle}`);\n                        this.markTestException(key, error);\n                    }\n                }\n\n                // Test tear down.\n                if (this.tearDown !== undefined) {\n                    this.tearDown();\n                }\n            }\n        });\n    }\n\n    getAllTests(obj) {\n        let funcs = Object.getOwnPropertyNames(Object.getPrototypeOf(obj));\n        return funcs.filter(item => {\n            return typeof this[item] === 'function' && item.match(/^test.+/);\n        });\n    }\n\n    assertTrue(shortname, value) {\n        if (value) {\n            this.markTestPass(shortname);\n        } else {\n            this.markTestFail(shortname, true, value);\n        }\n    }\n\n    assertEquals(shortname, expected, reality) {\n        if (expected === reality) {\n            this.markTestPass(shortname);\n        } else {\n            this.markTestFail(shortname, expected, reality);\n        }\n    }\n\n    expectException() {\n        this.expectexception = this.addAssert(`Expect exception in ${this.currenttitle}`);\n        this.markTestFail(this.expectexception, 'Exception raised', 'No exception');\n    }\n\n}\n\nexport default TestBase;\n"],"file":"testbase.min.js"}