define ("format_editortest/local/tests/testbase",["exports","core/log"],function(a,b){"use strict";Object.defineProperty(a,"__esModule",{value:!0});a.default=void 0;b=function(a){return a&&a.__esModule?a:{default:a}}(b);function c(a,b){if(!(a instanceof b)){throw new TypeError("Cannot call a class as a function")}}function d(a,b){for(var c=0,d;c<b.length;c++){d=b[c];d.enumerable=d.enumerable||!1;d.configurable=!0;if("value"in d)d.writable=!0;Object.defineProperty(a,d.key,d)}}function e(a,b,c){if(b)d(a.prototype,b);if(c)d(a,c);return a}var f=function(){function a(){c(this,a)}e(a,[{key:"init",value:function init(a){this.target=document.getElementById(a);this.runTests();return!0}},{key:"addAssert",value:function addAssert(a,b){if(this.anoncounter===void 0){this.anoncounter=0}this.anoncounter++;var c="Assert#".concat(this.anoncounter),d=document.createElement("p");d.dataset.shortname=c;d.innerHTML="<strong style=\"min-width:5em;\">Pending</strong> - ".concat(a," (").concat(this.currenttitle," ").concat(c,")");this.target.appendChild(d);this.addBullet(c);if(b!==void 0){this.assertTrue(c,b)}this.recalcStats();return d.dataset.shortname}},{key:"addBullet",value:function addBullet(a){var b=document.createElement("span");b.dataset.bulletof=a;b.innerHTML="?";this.target.prepend(b)}},{key:"recalcStats",value:function recalcStats(){var a=document.getElementById("assertsummary"),b=document.querySelectorAll("p[data-shortname]").length,c=document.querySelectorAll("p[data-shortname][data-state='pass']").length,d=document.querySelectorAll("p[data-shortname][data-state='fail']").length,e=document.querySelectorAll("p[data-shortname][data-state='exception']").length,f={pass:"Test passed: ".concat(c,"/").concat(b," (click to display passed test)"),fail:"Test failed: ".concat(d,"/").concat(b),exceptions:"Uncatched exceptions: ".concat(e,"/").concat(b)};if(c===b){f.pass="<span style=\"color:green\">".concat(f.pass,"</span>")}if(0<d){f.fail="<span style=\"color:red\">".concat(f.fail,"</span>")}if(0<e){f.exceptions="<span style=\"color:red\">".concat(f.exceptions,"</span>")}a.innerHTML="<ul>\n            <li id=\"passedtests\">".concat(f.pass,"</li>\n            <li>").concat(f.fail,"</li>\n            <li>").concat(f.exceptions,"</li>\n        <ul>");var g=document.getElementById("passedtests");g.addEventListener("click",function(){document.getElementById("region-main").classList.toggle("displaypass")})}},{key:"setBullet",value:function setBullet(a,b){var c=this.target.querySelector("[data-bulletof='".concat(a,"']"));if(c){c.innerHTML=b}}},{key:"addTitle",value:function addTitle(a){this.currenttitle=a;var b=document.createElement("h4");b.innerHTML=a;this.target.appendChild(b)}},{key:"getTestItem",value:function getTestItem(a,b){var c;if(null===a){a=this.addAssert("Anonymous assert")}b=null!==(c=b)&&void 0!==c?c:"";return this.target.querySelector("[data-shortname='".concat(a,"'] ").concat(b))}},{key:"markTestFail",value:function markTestFail(a,c,d){var e=this.getTestItem(a,"strong");if(!e){b.default.error("Missing ".concat(a," test"));return}e.innerHTML="<span style=\"color:red\">Failed!</span>";this.setBullet(e.parentNode.dataset.shortname,"<span style=\"color:red\">F</span>");this.addExpected(e.parentNode,c,d);e.parentNode.dataset.state="fail";this.recalcStats()}},{key:"markTestException",value:function markTestException(a,c){var d=this.getTestItem(a,"strong");if(!d){b.default.error("Missing ".concat(a," test"));return}d.innerHTML="<span style=\"color:red\">Exception!</span>";this.setBullet(d.parentNode.dataset.shortname,"<span style=\"color:red\">E</span>");this.addExpected(d.parentNode,"No exceptions",c);d.parentNode.dataset.state="exception";this.recalcStats()}},{key:"markTestPass",value:function markTestPass(a){var c=this.getTestItem(a,"strong");if(!c){b.default.error("Missing ".concat(a," test"));return}c.innerHTML="<span style=\"color:green\">Pass</span>";this.setBullet(c.parentNode.dataset.shortname,"<span style=\"color:green\">\xB7</span>");this.removeExpected(c.parentNode);c.parentNode.dataset.state="pass";this.recalcStats()}},{key:"addExpected",value:function addExpected(a,b,c){var d=document.createElement("div");d.classList.add("alert");d.classList.add("alert-danger");d.innerHTML="<strong>Expected: </strong> <pre>".concat(JSON.stringify(b,null,2),"</pre>");d.innerHTML+="<strong>Reality: </strong> <pre>".concat(JSON.stringify(c,null,2),"</pre>");a.appendChild(d)}},{key:"removeExpected",value:function removeExpected(a){var b=a.querySelector("div.alert");if(b){b.style.display="none"}}},{key:"debug",value:function debug(a){var b=document.createElement("div");b.classList.add("alert");b.classList.add("alert-info");b.innerHTML="<pre>".concat(JSON.stringify(a,null,2),"</pre>");this.target.appendChild(b)}},{key:"runTests",value:function runTests(){var a=this;if(this.setUpBeforeTests!==void 0){this.setUpBeforeTests()}var c=this.getAllTests(this);c.forEach(function(c){var d="dataProvider".concat(c.charAt(0).toUpperCase()+c.slice(1)),e={singlescenario:{}};if(a[d]!==void 0){e=a[d]()}for(var f in e){if(!e.hasOwnProperty(f)){continue}var g=c;if("singlescenario"!=f){g="".concat(c,"[").concat(f,"]")}a.addTitle(g);a.expectexception=null;if(a.setUp!==void 0){a.setUp()}try{a[c](e[f])}catch(c){if(a.expectexception){a.assertTrue(a.expectexception,!0)}else{b.default.error("Exception raised in test ".concat(g));b.default.error(c);var h=a.addAssert("Exception raised in test ".concat(g));a.markTestException(h,c)}}if(a.tearDown!==void 0){a.tearDown()}}})}},{key:"getAllTests",value:function getAllTests(a){var b=this,c=Object.getOwnPropertyNames(Object.getPrototypeOf(a));return c.filter(function(a){return"function"==typeof b[a]&&a.match(/^test.+/)})}},{key:"assertTrue",value:function assertTrue(a,b){if(b){this.markTestPass(a)}else{this.markTestFail(a,!0,b)}}},{key:"assertEquals",value:function assertEquals(a,b,c){if(b===c){this.markTestPass(a)}else{this.markTestFail(a,b,c)}}},{key:"expectException",value:function expectException(){this.expectexception=this.addAssert("Expect exception in ".concat(this.currenttitle));this.markTestFail(this.expectexception,"Exception raised","No exception")}}]);return a}();a.default=f;return a.default});
//# sourceMappingURL=testbase.min.js.map
