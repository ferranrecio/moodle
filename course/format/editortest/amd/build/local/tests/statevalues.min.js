define ("format_editortest/local/tests/statevalues",["exports","core/reactive/statemanager","format_editortest/local/tests/testbase"],function(a,b,c){"use strict";Object.defineProperty(a,"__esModule",{value:!0});a.default=void 0;b=d(b);c=d(c);function d(a){return a&&a.__esModule?a:{default:a}}function e(a){"@babel/helpers - typeof";if("function"==typeof Symbol&&"symbol"==typeof Symbol.iterator){e=function(a){return typeof a}}else{e=function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a}}return e(a)}function f(a,b){if(!(a instanceof b)){throw new TypeError("Cannot call a class as a function")}}function g(a,b){for(var c=0,d;c<b.length;c++){d=b[c];d.enumerable=d.enumerable||!1;d.configurable=!0;if("value"in d)d.writable=!0;Object.defineProperty(a,d.key,d)}}function h(a,b,c){if(b)g(a.prototype,b);if(c)g(a,c);return a}function i(a,b){if("function"!=typeof b&&null!==b){throw new TypeError("Super expression must either be null or a function")}a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,writable:!0,configurable:!0}});if(b)j(a,b)}function j(a,b){j=Object.setPrototypeOf||function(a,b){a.__proto__=b;return a};return j(a,b)}function k(a){return function(){var b=p(a),c;if(n()){var d=p(this).constructor;c=Reflect.construct(b,arguments,d)}else{c=b.apply(this,arguments)}return l(this,c)}}function l(a,b){if(b&&("object"===e(b)||"function"==typeof b)){return b}return m(a)}function m(a){if(void 0===a){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return a}function n(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return!0}catch(a){return!1}}function p(a){p=Object.setPrototypeOf?Object.getPrototypeOf:function(a){return a.__proto__||Object.getPrototypeOf(a)};return p(a)}var q=function(a){i(c,a);var d=k(c);function c(){f(this,c);return d.apply(this,arguments)}h(c,[{key:"setUp",value:function setUp(){this.fakenode=document.createTextNode(null);this.statemanager=new b.default(function(){return!0},this.fakenode)}},{key:"testAddObject",value:function testAddObject(){this.statemanager.setInitialState({sample:{value:"OK"}});this.assertEquals(null,"OK",this.statemanager.state.sample.value)}},{key:"testAddList",value:function testAddList(){this.statemanager.setInitialState({samples:[{id:3,name:"first"},{id:4,name:"second"}]});this.assertEquals(null,void 0,this.statemanager.state.samples.get(1));this.assertEquals(null,void 0,this.statemanager.state.samples.get(2));this.assertEquals(null,3,this.statemanager.state.samples.get(3).id);this.assertEquals(null,"first",this.statemanager.state.samples.get(3).name);this.assertEquals(null,4,this.statemanager.state.samples.get(4).id);this.assertEquals(null,"second",this.statemanager.state.samples.get(4).name)}},{key:"testInvalidState",value:function testInvalidState(a){this.expectException();this.statemanager.setInitialState(a)}},{key:"dataProviderTestInvalidState",value:function dataProviderTestInvalidState(){return{plainstate:"nope",simpleattributes1:{value:"Nope"},simpleattributes2:{value:null},listwithoutid:{samples:[{id:3,name:"first"},{name:"second"}]},listofsimpleitems:{samples:["j",2,!0]}}}},{key:"testSetListValue",value:function testSetListValue(){this.statemanager.setInitialState({samples:[{id:3,name:"first"},{id:4,name:"second"}]});this.assertEquals(null,3,this.statemanager.state.samples.get(3).id);this.assertEquals(null,"first",this.statemanager.state.samples.get(3).name);this.assertEquals(null,4,this.statemanager.state.samples.get(4).id);this.assertEquals(null,"second",this.statemanager.state.samples.get(4).name);this.statemanager.setLocked(!1);this.statemanager.state.samples.set(1,{id:1,name:"new"});this.assertEquals(null,1,this.statemanager.state.samples.get(1).id);this.assertEquals(null,"new",this.statemanager.state.samples.get(1).name);this.statemanager.state.samples.set(3,{id:3,name:"newvalue"});this.assertEquals(null,3,this.statemanager.state.samples.get(3).id);this.assertEquals(null,"newvalue",this.statemanager.state.samples.get(3).name);this.assertEquals(null,4,this.statemanager.state.samples.get(4).id);this.assertEquals(null,"second",this.statemanager.state.samples.get(4).name)}},{key:"testSetInvalidListValues",value:function testSetInvalidListValues(a){var b=a.key,c=a.value;this.statemanager.setInitialState({samples:[{id:3,name:"first"},{id:4,name:"second"}]});this.statemanager.setLocked(!1);this.expectException();this.statemanager.state.samples.set(b,c)}},{key:"dataProviderTestSetInvalidListValues",value:function dataProviderTestSetInvalidListValues(){return{valuewithoutkey:{key:void 0,value:{id:1,name:"new"}},valuedifferentkey:{key:42,value:{id:25,name:"new"}},valuewithoutid:{key:43,value:{name:"new"}}}}},{key:"testAddListValue",value:function testAddListValue(){this.statemanager.setInitialState({samples:[{id:3,name:"first"},{id:4,name:"second"}]});this.assertEquals(null,3,this.statemanager.state.samples.get(3).id);this.assertEquals(null,"first",this.statemanager.state.samples.get(3).name);this.assertEquals(null,4,this.statemanager.state.samples.get(4).id);this.assertEquals(null,"second",this.statemanager.state.samples.get(4).name);this.statemanager.setLocked(!1);this.statemanager.state.samples.add({id:1,name:"new"});this.assertEquals(null,1,this.statemanager.state.samples.get(1).id);this.assertEquals(null,"new",this.statemanager.state.samples.get(1).name);this.statemanager.state.samples.add({id:3,name:"newvalue"});this.assertEquals(null,3,this.statemanager.state.samples.get(3).id);this.assertEquals(null,"newvalue",this.statemanager.state.samples.get(3).name);this.assertEquals(null,4,this.statemanager.state.samples.get(4).id);this.assertEquals(null,"second",this.statemanager.state.samples.get(4).name)}},{key:"testAddInvalidListValues",value:function testAddInvalidListValues(a){this.statemanager.setInitialState({samples:[{id:3,name:"first"},{id:4,name:"second"}]});this.statemanager.setLocked(!1);this.expectException();this.statemanager.state.samples.add(a)}},{key:"dataProviderTestAddInvalidListValues",value:function dataProviderTestAddInvalidListValues(){return{valuewithoutkey:{id:void 0,name:"new"},valuewithoutid:{name:"new"}}}}]);return c}(c.default),r=new q;a.default=r;return a.default});
//# sourceMappingURL=statevalues.min.js.map
