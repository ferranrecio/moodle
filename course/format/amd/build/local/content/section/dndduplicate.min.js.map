{"version":3,"sources":["../../../../src/local/content/section/dndduplicate.js"],"names":["descriptor","name","selectors","MODCHOOSER_TEXT","id","course","fullregion","dragdrop","DragDrop","classes","getClasses","modchooserText","getElement","defaultText","innerHTML","duplicateText","then","catch","unregister","dropdata","type","element","classList","add","DROPZONE","remove","reactive","dispatch","BaseComponent"],"mappings":"m1DA6BA,sBAAgB,MAAhB,CAAwB,CAAC,eAAD,CAAxB,E,mIASWA,C,CAAY,YAEf,KAAKC,IAAL,CAAY,wBAAZ,CAGA,KAAKC,SAAL,CAAiB,CACbC,eAAe,+BADF,CAAjB,CAKA,KAAKC,EAAL,CAAUJ,CAAU,CAACI,EAArB,CACA,KAAKC,MAAL,CAAcL,CAAU,CAACK,MAAzB,CACA,KAAKC,UAAL,CAAkBN,CAAU,CAACM,UAA7B,CAEA,KAAKC,QAAL,CAAgB,GAAIC,WAAJ,CAAa,IAAb,CAAhB,CACA,KAAKC,OAAL,CAAe,KAAKF,QAAL,CAAcG,UAAd,EAAf,CAGA,KAAKC,cAAL,CAAsB,KAAKC,UAAL,CAAgB,KAAKV,SAAL,CAAeC,eAA/B,CAAtB,CACA,KAAKU,WAAL,CAAmB,KAAKD,UAAL,CAAgB,KAAKV,SAAL,CAAeC,eAA/B,EAAgDW,SAAnE,CACA,KAAKC,aAAL,CAAqB,KAAKF,WAA1B,CACA,iBAAU,eAAV,CAA2B,MAA3B,EAAmCG,IAAnC,CAAwC,SAAAD,CAAa,CAAI,CACrD,CAAI,CAACA,aAAL,CAAqBA,CAExB,CAHD,EAGGE,KAHH,EAIH,C,yCAKS,CACN,GAAI,KAAKV,QAAL,SAAJ,CAAiC,CAC7B,KAAKA,QAAL,CAAcW,UAAd,EACH,CACJ,C,0DAUgBC,C,CAAU,CACvB,MAA0B,IAAnB,WAAAA,CAAQ,WAARA,SAAAA,CAAQ,CAAEC,IAAV,CACV,C,mDAKc,CACX,KAAKC,OAAL,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,KAAKd,OAAL,CAAae,QAAxC,EAEA,KAAKb,cAAL,CAAoBG,SAApB,CAAgC,KAAKC,aACxC,C,mDAKc,CACX,KAAKM,OAAL,CAAaC,SAAb,CAAuBG,MAAvB,CAA8B,KAAKhB,OAAL,CAAae,QAA3C,EAEA,KAAKb,cAAL,CAAoBG,SAApB,CAAgC,KAAKD,WACxC,C,kCAOIM,C,CAAU,CACX,KAAKO,QAAL,CAAcC,QAAd,CAAuB,aAAvB,CAAsC,CAACR,CAAQ,CAACf,EAAV,CAAtC,CAAqD,KAAKA,EAA1D,CACH,C,cAhFwBwB,e","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Mod chooser drag and drop module.\n *\n * @module     core_courseformat/local/courseeditor/dndduplicate\n * @class      core_courseformat/local/courseeditor/dndduplicate\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent, DragDrop} from 'core/reactive';\nimport {prefetchStrings} from 'core/prefetch';\nimport {get_string as getString} from 'core/str';\n\n// Load global strings.\nprefetchStrings('core', ['duplicatehere']);\n\nexport default class extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     *\n     * @param {Object} descriptor\n     */\n    create(descriptor) {\n        // Optional component name for debugging.\n        this.name = 'content_section_header';\n\n        // Default query selectors.\n        this.selectors = {\n            MODCHOOSER_TEXT: `[data-for='modchooser-text']`,\n        };\n\n        // Get main info from the descriptor.\n        this.id = descriptor.id;\n        this.course = descriptor.course;\n        this.fullregion = descriptor.fullregion;\n\n        this.dragdrop = new DragDrop(this);\n        this.classes = this.dragdrop.getClasses();\n\n        // Save the current contents.\n        this.modchooserText = this.getElement(this.selectors.MODCHOOSER_TEXT);\n        this.defaultText = this.getElement(this.selectors.MODCHOOSER_TEXT).innerHTML;\n        this.duplicateText = this.defaultText;\n        getString('duplicatehere', 'core').then(duplicateText => {\n            this.duplicateText = duplicateText;\n            return;\n        }).catch();\n    }\n\n    /**\n     * Remove all subcomponents dependencies.\n     */\n    destroy() {\n        if (this.dragdrop !== undefined) {\n            this.dragdrop.unregister();\n        }\n    }\n\n    // Drag and drop methods.\n\n    /**\n     * Validate if the drop data can be dropped over the component.\n     *\n     * @param {Object} dropdata the exported drop data.\n     * @returns {boolean}\n     */\n    validateDropData(dropdata) {\n        return dropdata?.type === 'cm';\n    }\n\n    /**\n     * Display the component dropzone.\n     */\n    showDropZone() {\n        this.element.classList.add(this.classes.DROPZONE);\n        // Replace content with a hint text.\n        this.modchooserText.innerHTML = this.duplicateText;\n    }\n\n    /**\n     * Hide the component dropzone.\n     */\n    hideDropZone() {\n        this.element.classList.remove(this.classes.DROPZONE);\n        // Restore content.\n        this.modchooserText.innerHTML = this.defaultText;\n    }\n\n    /**\n     * Drop event handler.\n     *\n     * @param {Object} dropdata the accepted drop data\n     */\n    drop(dropdata) {\n        this.reactive.dispatch('cmDuplicate', [dropdata.id], this.id);\n    }\n\n}\n"],"file":"dndduplicate.min.js"}