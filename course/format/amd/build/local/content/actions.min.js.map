{"version":3,"sources":["../../../src/local/content/actions.js"],"names":["name","selectors","ACTIONLINK","SECTIONLINK","CMLINK","SECTIONNODE","TOGGLER","classes","DISABLED","addEventListener","element","_dispatchClick","event","target","closest","methodName","_actionMethodName","dataset","action","requestName","charAt","toUpperCase","slice","sectionId","id","sectionInfo","reactive","get","preventDefault","exporter","getExporter","data","course","state","sectionid","sectiontitle","title","modalParams","body","Templates","render","_modalBodyRenderedPromise","modal","modalBody","getBody","currentElement","querySelector","_disableLink","generalSection","matches","for","getAttribute","dispatch","destroy","cmId","cmInfo","cmid","cmname","click","targetSectionId","targetCmId","dropData","cmDraggableData","nextcmid","section","cmlist","style","pointerEvents","userSelect","classList","add","setAttribute","Promise","resolve","reject","ModalFactory","create","then","getRoot","on","ModalEvents","bodyRendered","show","catch","BaseComponent"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course state actions dispatcher.\n *\n * This module captures all data-dispatch links in the course content and dispatch the proper\n * state mutation, including any confirmation and modal required.\n *\n * @module     core_courseformat/local/content/actions\n * @class      core_courseformat/local/content/actions\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport {prefetchStrings} from 'core/prefetch';\nimport {get_string as getString} from 'core/str';\nimport {getList} from 'core/normalise';\n\n// Load global strings.\nprefetchStrings('core', ['movecoursesection', 'movecoursemodule']);\n\nexport default class extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'content_actions';\n        // Default query selectors.\n        this.selectors = {\n            ACTIONLINK: `[data-action]`,\n            SECTIONLINK: `[data-for='section']`,\n            CMLINK: `[data-for='cm']`,\n            SECTIONNODE: `[data-for='sectionnode']`,\n            TOGGLER: `[data-toggle='collapse']`,\n        };\n        // Component css classes.\n        this.classes = {\n            DISABLED: `disabled`,\n        };\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     */\n    stateReady() {\n        // Delegate dispatch clicks.\n        this.addEventListener(\n            this.element,\n            'click',\n            this._dispatchClick\n        );\n    }\n\n    _dispatchClick(event) {\n        const target = event.target.closest(this.selectors.ACTIONLINK);\n        if (!target) {\n            return;\n        }\n\n        // Invoke proper method.\n        const methodName = this._actionMethodName(target.dataset.action);\n\n        if (this[methodName] !== undefined) {\n            this[methodName](target, event);\n        }\n    }\n\n    _actionMethodName(name) {\n        const requestName = name.charAt(0).toUpperCase() + name.slice(1);\n        return `_request${requestName}`;\n    }\n\n    /**\n     * Handle a move section request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    async _requestMoveSection(target, event) {\n        // Check we have an id.\n        const sectionId = target.dataset.id;\n        if (!sectionId) {\n            return;\n        }\n        const sectionInfo = this.reactive.get('section', sectionId);\n\n        event.preventDefault();\n\n        // Collect section information from the state.\n        const exporter = this.reactive.getExporter();\n        const data = exporter.course(this.reactive.state);\n\n        // Add the target section id and title.\n        data.sectionid = sectionInfo.id;\n        data.sectiontitle = sectionInfo.title;\n\n        // Build the modal parameters from the event data.\n        const modalParams = {\n            title: getString('movecoursesection', 'core'),\n            body: Templates.render('core_courseformat/local/content/movesection', data),\n        };\n\n        // Create the modal.\n        const modal = await this._modalBodyRenderedPromise(modalParams);\n\n        const modalBody = getList(modal.getBody())[0];\n\n        // Disable current element and section zero.\n        const currentElement = modalBody.querySelector(`${this.selectors.SECTIONLINK}[data-id='${sectionId}']`);\n        this._disableLink(currentElement);\n        const generalSection = modalBody.querySelector(`${this.selectors.SECTIONLINK}[data-number='0']`);\n        this._disableLink(generalSection);\n\n        // Capture click.\n        modalBody.addEventListener('click', (event) => {\n            const target = event.target;\n            if (!target.matches('a') || target.dataset.for != 'section' || target.dataset.id === undefined) {\n                return;\n            }\n            if (target.getAttribute('aria-disabled')) {\n                return;\n            }\n            event.preventDefault();\n            this.reactive.dispatch('sectionMove', [sectionId], target.dataset.id);\n            modal.destroy();\n        });\n    }\n\n    /**\n     * Handle a move cm request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    async _requestMoveCm(target, event) {\n        // Check we have an id.\n        const cmId = target.dataset.id;\n        if (!cmId) {\n            return;\n        }\n        const cmInfo = this.reactive.get('cm', cmId);\n\n        event.preventDefault();\n\n        // Collect section information from the state.\n        const exporter = this.reactive.getExporter();\n        const data = exporter.course(this.reactive.state);\n\n        // Add the target cm info.\n        data.cmid = cmInfo.id;\n        data.cmname = cmInfo.name;\n\n        // Build the modal parameters from the event data.\n        const modalParams = {\n            title: getString('movecoursemodule', 'core'),\n            body: Templates.render('core_courseformat/local/content/movecm', data),\n        };\n\n        // Create the modal.\n        const modal = await this._modalBodyRenderedPromise(modalParams);\n\n        const modalBody = getList(modal.getBody())[0];\n\n        // Disable current element.\n        let currentElement = modalBody.querySelector(`${this.selectors.CMLINK}[data-id='${cmId}']`);\n        this._disableLink(currentElement);\n\n        // Open the cm section node if possible.\n        currentElement.closest(this.selectors.SECTIONNODE)?.querySelector(this.selectors.TOGGLER)?.click();\n\n        // Capture click.\n        modalBody.addEventListener('click', (event) => {\n            const target = event.target;\n            if (!target.matches('a') || target.dataset.for === undefined || target.dataset.id === undefined) {\n                return;\n            }\n            if (target.getAttribute('aria-disabled')) {\n                return;\n            }\n            event.preventDefault();\n\n            // Get draggable data from cm or section to dispatch.\n            let targetSectionId;\n            let targetCmId;\n            if (target.dataset.for == 'cm') {\n                const dropData = exporter.cmDraggableData(this.reactive.state, target.dataset.id);\n                targetSectionId = dropData.sectionid;\n                targetCmId = dropData.nextcmid;\n            } else {\n                const section = this.reactive.get('section', target.dataset.id);\n                targetSectionId = target.dataset.id;\n                targetCmId = section?.cmlist[0];\n            }\n\n            this.reactive.dispatch('cmMove', [cmId], targetSectionId, targetCmId);\n            modal.destroy();\n        });\n    }\n\n    /**\n     * Replace an element with a copy with a different tag name.\n     *\n     * @param {Element} element the original element\n     */\n    _disableLink(element) {\n        if (element) {\n            element.style.pointerEvents = 'none';\n            element.style.userSelect = 'none';\n            element.classList.add(this.classes.DISABLED);\n            element.setAttribute('aria-disabled', true);\n            element.addEventListener('click', event => event.preventDefault());\n        }\n    }\n\n    /**\n     * Render a modal and return a body ready promise.\n     *\n     * @param {object} modalParams the modal params\n     * @return {Promise} the modal body ready promise\n     */\n    _modalBodyRenderedPromise(modalParams) {\n        return new Promise((resolve, reject) => {\n            ModalFactory.create(modalParams).then((modal) => {\n                // Handle body loading event.\n                modal.getRoot().on(ModalEvents.bodyRendered, () => {\n                    resolve(modal);\n                });\n                modal.show();\n                return;\n            }).catch(() => {\n                reject(`Cannot load modal content`);\n            });\n        });\n    }\n}\n"],"file":"actions.min.js"}