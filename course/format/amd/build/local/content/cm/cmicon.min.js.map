{"version":3,"file":"cmicon.min.js","sources":["../../../../src/local/content/cm/cmicon.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Activity icon component.\n *\n * @module     core_courseformat/local/content/cm/cmicon\n * @copyright  2024 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport {getCurrentCourseEditor} from 'core_courseformat/courseeditor';\n\n\nexport default class extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'cmicon';\n        this.id = this.element.dataset.id;\n\n        this.classes = {\n            CLICKABLE: 'clickable',\n        };\n    }\n\n    /**\n     * Static method to create a component instance form the mustache template.\n     *\n     * @param {string} target the DOM main element query selector\n     * @param {object} [cssSelectors] optional extra css selector overrides\n     * @return {Component}\n     */\n    static init(target, cssSelectors) {\n        return new this({\n            element: document.querySelector(target),\n            reactive: getCurrentCourseEditor(),\n            cssSelectors,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     * @param {object} state the initial state\n     */\n    stateReady(state) {\n        this.addEventListener(\n            this.element,\n            'click',\n            this._dispatchClick\n        );\n        if (state.cm.get(this.id)?.url) {\n            this.element.classList.add(this.classes.CLICKABLE);\n        }\n    }\n\n    /**\n     * Handle the activity icon click.\n     */\n    _dispatchClick() {\n        const cminfo = this.reactive.get('cm', this.id);\n        // Not all activities have a URL.\n        if (!cminfo?.url) {\n            return;\n        }\n        document.location.href = cminfo.url;\n    }\n}\n"],"names":["BaseComponent","create","name","id","this","element","dataset","classes","CLICKABLE","target","cssSelectors","document","querySelector","reactive","stateReady","state","addEventListener","_dispatchClick","cm","get","_state$cm$get","url","classList","add","cminfo","location","href"],"mappings":";;;;;;;;uBA2B6BA,wBAKzBC,cAESC,KAAO,cACPC,GAAKC,KAAKC,QAAQC,QAAQH,QAE1BI,QAAU,CACXC,UAAW,yBAWPC,OAAQC,qBACT,IAAIN,KAAK,CACZC,QAASM,SAASC,cAAcH,QAChCI,UAAU,0CACVH,aAAAA,eAQRI,WAAWC,8BACFC,iBACDZ,KAAKC,QACL,QACAD,KAAKa,sCAELF,MAAMG,GAAGC,IAAIf,KAAKD,8BAAlBiB,cAAuBC,UAClBhB,QAAQiB,UAAUC,IAAInB,KAAKG,QAAQC,WAOhDS,uBACUO,OAASpB,KAAKS,SAASM,IAAI,KAAMf,KAAKD,IAEvCqB,MAAAA,QAAAA,OAAQH,MAGbV,SAASc,SAASC,KAAOF,OAAOH"}