{"version":3,"sources":["../src/editor.js"],"names":["editor","Reactive","eventname","events","statechanged","eventdispatch","dispatchStateChangedEvent","mutations","defaultmutations","init","courseid","ajax","call","methodname","args","jsonstate","statedata","JSON","parse","setInitialState","log","error","action","state","element","document","dispatchEvent","CustomEvent","bubbles","detail"],"mappings":"mQAwBA,OACA,OACA,OACA,OACA,O,kXAGA,GAAMA,CAAAA,CAAM,CAAG,GAAIC,UAAJ,CAAa,CACxB,KAAQ,cADgB,CAExBC,SAAS,CAAEC,UAAOC,YAFM,CAGxBC,aAAa,CAAEC,CAHS,CAKxBC,SAAS,CAAEC,SALa,CAAb,CAAf,CAcAR,CAAM,CAACS,IAAP,4CAAc,WAAeC,CAAf,mHAIkBC,WAAKC,IAAL,CAAU,CAAC,CAC/BC,UAAU,CAAE,uBADmB,CAE/BC,IAAI,CAAE,CAACJ,QAAQ,CAARA,CAAD,CAFyB,CAAD,CAAV,EAGpB,CAHoB,CAJlB,QAIAK,CAJA,QAQAC,CARA,CAQYC,IAAI,CAACC,KAAL,CAAWH,CAAX,CARZ,CASN,KAAKI,eAAL,CAAqBH,CAArB,EATM,mDAWNI,UAAIC,KAAJ,CAAU,2CAAV,EACAD,UAAIC,KAAJ,OAZM,sDAAd,wDAyBA,QAASf,CAAAA,CAAT,CAAmCgB,CAAnC,CAA2CC,CAA3C,CAAkDC,CAAlD,CAA2D,CAEvDC,QAAQ,CAACC,aAAT,CAAuB,GAAIC,CAAAA,WAAJ,CAAgBxB,UAAOC,YAAvB,CAAqC,CACxDwB,OAAO,GADiD,CAExDC,MAAM,CAAE,CAACP,MAAM,CAANA,CAAD,CAASC,KAAK,CAALA,CAAT,CAAgBC,OAAO,CAAPA,CAAhB,CAFgD,CAArC,CAAvB,CAIH,C,UAEcxB,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Main course editor module\n *\n * @module     core_course/editor\n * @package    core_course\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport defaultmutations from 'core_course/local/editor/mutations';\nimport Reactive from 'core_course/local/editor/reactive';\nimport events from 'core_course/events';\nimport log from 'core/log';\nimport ajax from 'core/ajax';\n\n\nconst editor = new Reactive({\n    'name': 'CourseEditor',\n    eventname: events.statechanged,\n    eventdispatch: dispatchStateChangedEvent,\n    // Mutations can be overridden by the format plugin but we need the default one at least.\n    mutations: defaultmutations,\n});\n\n/**\n* Set up the course editor when the page is ready.\n*\n* @method init\n* @param {int} courseid course id\n*/\neditor.init = async function(courseid) {\n\n    try {\n        // Async load the initial state.\n        const jsonstate = await ajax.call([{\n            methodname: 'core_course_get_state',\n            args: {courseid}\n        }])[0];\n        const statedata = JSON.parse(jsonstate);\n        this.setInitialState(statedata);\n    } catch (error) {\n        log.error(\"EXCEPTION RAISED WHILE INIT COURSE EDITOR\");\n        log.error(error);\n    }\n};\n\n/**\n * This function will be moved to core_course/events module\n * when the file is migrated to the new JS events structure proposed in MDL-70990.\n *\n * @method dispatchStateChangedEvent\n * @param {string} action the action done\n * @param {object} state the full state\n * @param {object} element the modified element\n */\nfunction dispatchStateChangedEvent(action, state, element) {\n    // Dispatch a custom event in case any component wants to listen.\n    document.dispatchEvent(new CustomEvent(events.statechanged, {\n        bubbles: true,\n        detail: {action, state, element},\n    }));\n}\n\nexport default editor;\n"],"file":"editor.min.js"}