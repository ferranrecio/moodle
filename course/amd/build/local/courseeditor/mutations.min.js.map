{"version":3,"sources":["../../../src/local/courseeditor/mutations.js"],"names":["Mutations","action","courseid","ids","ajax","call","methodname","args","ajaxresult","JSON","parse","list","filter","id","has","get","statemanager","cmids","state","_filterIdList","cm","visible","_callEditWebservice","course","updates","processUpdates"],"mappings":"wKAwBA,uD,moBAEqBA,CAAAA,C,+HAUSC,C,CAAQC,C,CAAUC,C,wGACjBC,WAAKC,IAAL,CAAU,CAAC,CAC9BC,UAAU,CAAE,kBADkB,CAE9BC,IAAI,CAAE,CACFN,MAAM,CAANA,CADE,CAEFC,QAAQ,CAARA,CAFE,CAGFC,GAAG,CAAHA,CAHE,CAFwB,CAAD,CAAV,EAOnB,CAPmB,C,QAAnBK,C,iCAQGC,IAAI,CAACC,KAAL,CAAWF,CAAX,C,yKAaGG,C,CAAMR,C,CAAKS,C,CAAQ,CAC7B,GAAIA,CAAM,SAAV,CAA0B,CACtBA,CAAM,CAAG,oBACZ,CACD,MAAOD,CAAAA,CAAI,CAACC,MAAL,CAAY,SAACC,CAAD,CAAQ,CACvB,GAAI,CAACF,CAAI,CAACG,GAAL,CAASD,CAAT,CAAL,CAAmB,CACf,QACH,CACD,MAAOD,CAAAA,CAAM,CAACD,CAAI,CAACI,GAAL,CAASF,CAAT,CAAD,CAChB,CALM,CAMV,C,4EASYG,C,CAAcC,C,6FACnBC,C,CAAQF,CAAY,CAACE,K,CAEnBf,C,CAAM,KAAKgB,aAAL,CAAmBD,CAAK,CAACE,EAAzB,CAA6BH,CAA7B,CAAoC,SAACG,CAAD,QAAQ,CAACA,CAAE,CAACC,OAAZ,CAApC,C,gBAEQ,MAAKC,mBAAL,CAAyB,SAAzB,CAAoCJ,CAAK,CAACK,MAAN,CAAaV,EAAjD,CAAqDV,CAArD,C,QAAhBqB,C,QACJR,CAAY,CAACS,cAAb,CAA4BD,CAA5B,E,uLAUSR,C,CAAcC,C,6FACnBC,C,CAAQF,CAAY,CAACE,K,CAEnBf,C,CAAM,KAAKgB,aAAL,CAAmBD,CAAK,CAACE,EAAzB,CAA6BH,CAA7B,CAAoC,SAACG,CAAD,QAAQA,CAAAA,CAAE,CAACC,OAAX,CAApC,C,gBAEQ,MAAKC,mBAAL,CAAyB,SAAzB,CAAoCJ,CAAK,CAACK,MAAN,CAAaV,EAAjD,CAAqDV,CAArD,C,QAAhBqB,C,QACJR,CAAY,CAACS,cAAb,CAA4BD,CAA5B,E","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Default mutation manager\n *\n * @module     core_course/local/courseeditor/mutations\n * @package    core_course\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ajax from 'core/ajax';\n\nexport default class Mutations {\n\n    /**\n     * Private method to call core_course_edit webservice.\n     *\n     * @method _callEditWebservice\n     * @param {string} action\n     * @param {int} courseid\n     * @param {array} ids\n     */\n    async _callEditWebservice(action, courseid, ids) {\n        let ajaxresult = await ajax.call([{\n            methodname: 'core_course_edit',\n            args: {\n                action,\n                courseid,\n                ids,\n            }\n        }])[0];\n        return JSON.parse(ajaxresult);\n    }\n\n    /**\n     * A quick way to filter id lists.\n     *\n     * Non existent ids will be filtered authomatically before apply the filtering function.\n     *\n     * @param {Map} list the element list\n     * @param {array} ids the ids array\n     * @param {function} filter the filtering function\n     * @return {array} filtered array\n     */\n    _filterIdList(list, ids, filter) {\n        if (filter === undefined) {\n            filter = () => true;\n        }\n        return list.filter((id) => {\n            if (!list.has(id)) {\n                return false;\n            }\n            return filter(list.get(id));\n        });\n    }\n\n    /**\n    * Show an activity.\n    *\n    * @method cmShow\n    * @param {StateManager} statemanager the current state\n    * @param {array} cmids the list of cm ids to show\n    */\n    async cmShow(statemanager, cmids) {\n        let state = statemanager.state;\n        // Filter cm ids that are already visible or inexistent.\n        const ids = this._filterIdList(state.cm, cmids, (cm) => !cm.visible);\n\n        let updates = await this._callEditWebservice('cm_show', state.course.id, ids);\n        statemanager.processUpdates(updates);\n    }\n\n    /**\n    * Hide an activity.\n    *\n    * @method cmHide\n    * @param {StateManager} statemanager the current state\n    * @param {array} cmids the list of cm ids to hide\n    */\n    async cmHide(statemanager, cmids) {\n        let state = statemanager.state;\n        // Filter cm ids that are already hidden or inexistent.\n        const ids = this._filterIdList(state.cm, cmids, (cm) => cm.visible);\n\n        let updates = await this._callEditWebservice('cm_hide', state.course.id, ids);\n        statemanager.processUpdates(updates);\n    }\n\n}\n"],"file":"mutations.min.js"}