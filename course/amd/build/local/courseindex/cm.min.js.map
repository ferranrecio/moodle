{"version":3,"sources":["../../../src/local/courseindex/cm.js"],"names":["Component","name","selectors","DROPZONE","classes","HIDDEN","id","element","dataset","dropzone","getElement","reactive","isEditing","supportComponents","dragdrop","DragDrop","getClasses","watch","handler","remove","exporter","getExporter","cmDraggableData","getState","dropdata","type","nextcmid","classList","add","DROPUP","dispatch","target","document","getElementById","courseeditor","BaseComponent"],"mappings":"iMA2BA,uD,+nDAEqBA,CAAAA,C,+HAKR,CAEL,KAAKC,IAAL,CAAY,gBAAZ,CAEA,KAAKC,SAAL,CAAiB,CACbC,QAAQ,gCADK,CAAjB,CAIA,KAAKC,OAAL,CAAe,CACXC,MAAM,CAAE,QADG,CAAf,CAIA,KAAKC,EAAL,CAAU,KAAKC,OAAL,CAAaC,OAAb,CAAqBF,EAClC,C,+CAoBY,CACT,KAAKG,QAAL,CAAgB,KAAKC,UAAL,CAAgB,KAAKR,SAAL,CAAeC,QAA/B,CAAhB,CAGA,GAAI,KAAKQ,QAAL,CAAcC,SAAd,IAA6B,KAAKD,QAAL,CAAcE,iBAAd,EAAjC,CAAoE,CAEhE,KAAKC,QAAL,CAAgB,GAAIC,WAAJ,CAAa,IAAb,CAAhB,CAEA,KAAKX,OAAL,CAAe,KAAKU,QAAL,CAAcE,UAAd,EAClB,CACJ,C,iDAOa,CACV,MAAO,CACH,CAACC,KAAK,cAAQ,KAAKX,EAAb,aAAN,CAAkCY,OAAO,CAAE,KAAKC,MAAhD,CADG,CAGV,C,2DASkB,CACf,GAAMC,CAAAA,CAAQ,CAAG,KAAKT,QAAL,CAAcU,WAAd,EAAjB,CACA,MAAOD,CAAAA,CAAQ,CAACE,eAAT,CAAyB,KAAKX,QAAL,CAAcY,QAAd,EAAzB,CAAmD,KAAKjB,EAAxD,CACV,C,0DAQgBkB,C,CAAU,CACvB,MAA0B,IAAnB,WAAAA,CAAQ,WAARA,SAAAA,CAAQ,CAAEC,IAAV,CACV,C,kDAOYD,C,CAAU,CAGnB,GAAIA,CAAQ,CAACE,QAAT,EAAqB,KAAKpB,EAA9B,CAAkC,CAC9B,KAAKC,OAAL,CAAaoB,SAAb,CAAuBC,GAAvB,CAA2B,KAAKxB,OAAL,CAAayB,MAAxC,CACH,CACJ,C,mDAKc,CACX,KAAKtB,OAAL,CAAaoB,SAAb,CAAuBR,MAAvB,CAA8B,KAAKf,OAAL,CAAayB,MAA3C,CACH,C,kCAOIL,C,CAAU,CAEX,GAAIA,CAAQ,CAAClB,EAAT,EAAe,KAAKA,EAApB,EAA0BkB,CAAQ,CAACE,QAAT,EAAqB,KAAKpB,EAAxD,CAA4D,CACxD,KAAKK,QAAL,CAAcmB,QAAd,CAAuB,QAAvB,CAAiC,CAACN,CAAQ,CAAClB,EAAV,CAAjC,CAAgD,IAAhD,CAAsD,KAAKA,EAA3D,CACH,CACJ,C,oCAtFWyB,C,CAAQ7B,C,CAAW,CAC3B,MAAO,IAAIF,CAAAA,CAAJ,CAAc,CACjBO,OAAO,CAAEyB,QAAQ,CAACC,cAAT,CAAwBF,CAAxB,CADQ,CAEjBpB,QAAQ,CAAEuB,SAFO,CAGjBhC,SAAS,CAATA,CAHiB,CAAd,CAKV,C,cAjCkCiC,e","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course index cm component.\n *\n * This component is used to control specific course modules interactions like drag and drop.\n *\n * @module     core_course/local/courseindex/courseindex\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent, DragDrop} from 'core/reactive';\nimport courseeditor from 'core_course/courseeditor';\n\nexport default class Component extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'courseindex_cm';\n        // Default query selectors.\n        this.selectors = {\n            DROPZONE: `[data-for='cm_over_dropzone']`,\n        };\n        // Default classes to toggle on refresh.\n        this.classes = {\n            HIDDEN: 'd-none',\n        };\n        // We need our id to watch specific events.\n        this.id = this.element.dataset.id;\n    }\n\n    /**\n     * Static method to create a component instance form the mustahce template.\n     *\n     * @param {element|string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n    static init(target, selectors) {\n        return new Component({\n            element: document.getElementById(target),\n            reactive: courseeditor,\n            selectors,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     */\n    stateReady() {\n        this.dropzone = this.getElement(this.selectors.DROPZONE);\n\n        // Drag and drop is only available for components compatible course formats.\n        if (this.reactive.isEditing() && this.reactive.supportComponents()) {\n            // Init element drag and drop.\n            this.dragdrop = new DragDrop(this);\n            // Save dropzone classes.\n            this.classes = this.dragdrop.getClasses();\n        }\n    }\n\n    /**\n     * Component watchers.\n     *\n     * @returns {Array} of watchers\n     */\n    getWatchers() {\n        return [\n            {watch: `cm[${this.id}]:deleted`, handler: this.remove},\n        ];\n    }\n\n    // Drag and drop methods.\n\n    /**\n     * Get the draggable data of this component.\n     *\n     * @returns {Object} exported course module drop data\n     */\n    getDraggableData() {\n        const exporter = this.reactive.getExporter();\n        return exporter.cmDraggableData(this.reactive.getState(), this.id);\n    }\n\n    /**\n     * Validate if the drop data can be dropped over the component.\n     *\n     * @param {Object} dropdata the exported drop data.\n     * @returns {boolean}\n     */\n    validateDropData(dropdata) {\n        return dropdata?.type === 'cm';\n    }\n\n    /**\n     * Display the component dropzone.\n     *\n     * @param {Object} dropdata the accepted drop data\n     */\n    showDropZone(dropdata) {\n        // If we are the next cmid of the dragged element we accept the drop because otherwise it\n        // will get captured by the section. However, we won't trigger any mutation.\n        if (dropdata.nextcmid != this.id) {\n            this.element.classList.add(this.classes.DROPUP);\n        }\n    }\n\n    /**\n     * Hide the component dropzone.\n     */\n    hideDropZone() {\n        this.element.classList.remove(this.classes.DROPUP);\n    }\n\n    /**\n     * Drop event handler.\n     *\n     * @param {Object} dropdata the accepted drop data\n     */\n    drop(dropdata) {\n        // Call the move mutation if necessary.\n        if (dropdata.id != this.id && dropdata.nextcmid != this.id) {\n            this.reactive.dispatch('cmMove', [dropdata.id], null, this.id);\n        }\n    }\n}\n"],"file":"cm.min.js"}