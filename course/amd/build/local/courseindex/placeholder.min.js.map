{"version":3,"sources":["../../../src/local/courseindex/placeholder.js"],"names":["Component","state","data","sections","editmode","reactive","isEditing","sectionlist","course","forEach","sectionid","sectioninfo","section","get","cms","isactive","cmlist","cmid","cminfo","cm","push","hascms","length","hassections","Templates","renderForPromise","html","js","replaceNode","element","target","selectors","document","getElementById","courseeditor","BaseComponent"],"mappings":"6NAyBA,OACA,O,4rFAEqBA,CAAAA,C,wKAwBAC,C,mGAEPC,C,CAAO,CACTC,QAAQ,CAAE,EADD,CAETC,QAAQ,CAAE,KAAKC,QAAL,CAAcC,SAAd,EAFD,C,CAIPC,C,WAAcN,CAAK,CAACO,MAAN,CAAaD,W,gBAAe,E,CAChDA,CAAW,CAACE,OAAZ,CAAoB,SAAAC,CAAS,CAAI,SACvBC,CAAW,WAAGV,CAAK,CAACW,OAAN,CAAcC,GAAd,CAAkBH,CAAlB,CAAH,gBAAmC,EADvB,CAEvBE,CAAO,MACND,CADM,EAETG,GAAG,CAAE,EAFI,CAGTC,QAAQ,GAHC,EAFgB,CAOvBC,CAAM,WAAGL,CAAW,CAACK,MAAf,gBAAyB,EAPR,CAQ7BA,CAAM,CAACP,OAAP,CAAe,SAAAQ,CAAI,CAAI,IACbC,CAAAA,CAAM,CAAGjB,CAAK,CAACkB,EAAN,CAASN,GAAT,CAAaI,CAAb,CADI,CAEbE,CAAE,MACDD,CADC,EAEJH,QAAQ,GAFJ,EAFW,CAMnBH,CAAO,CAACE,GAAR,CAAYM,IAAZ,CAAiBD,CAAjB,CACH,CAPD,EAQAP,CAAO,CAACS,MAAR,CAAwC,CAAtB,EAAAT,CAAO,CAACE,GAAR,CAAYQ,MAA9B,CACApB,CAAI,CAACC,QAAL,CAAciB,IAAd,CAAmBR,CAAnB,CACH,CAlBD,EAmBAV,CAAI,CAACqB,WAAL,CAA4C,CAAxB,EAAArB,CAAI,CAACC,QAAL,CAAcmB,MAAlC,C,wBAI6BE,WAAUC,gBAAV,CACrB,2CADqB,CAErBvB,CAFqB,C,iBAAlBwB,C,GAAAA,I,CAAMC,C,GAAAA,E,CAIbH,UAAUI,WAAV,CAAsB,KAAKC,OAA3B,CAAoCH,CAApC,CAA0CC,CAA1C,E,6NAjDIG,C,CAAQC,C,CAAW,CAC3B,MAAO,IAAI/B,CAAAA,CAAJ,CAAc,CACjB6B,OAAO,CAAEG,QAAQ,CAACC,cAAT,CAAwBH,CAAxB,CADQ,CAEjBzB,QAAQ,CAAE6B,SAFO,CAGjBH,SAAS,CAATA,CAHiB,CAAd,CAKV,C,cAfkCI,e","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course index placeholder replacer.\n *\n * @module     core_course/local/courseindex/placeholder\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport courseeditor from 'core_course/courseeditor';\nimport Templates from 'core/templates';\n\nexport default class Component extends BaseComponent {\n\n    /**\n     * Static method to create a component instance form the mustahce template.\n     *\n     * @param {element|string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n    static init(target, selectors) {\n        return new Component({\n            element: document.getElementById(target),\n            reactive: courseeditor,\n            selectors,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * This stateReady to be async because it loads the real courseindex.\n     *\n     * @param {object} state the initial state\n     */\n    async stateReady(state) {\n        // Collect section information from the state.\n        const data = {\n            sections: [],\n            editmode: this.reactive.isEditing(),\n        };\n        const sectionlist = state.course.sectionlist ?? [];\n        sectionlist.forEach(sectionid => {\n            const sectioninfo = state.section.get(sectionid) ?? {};\n            const section = {\n                ...sectioninfo,\n                cms: [],\n                isactive: false,\n            };\n            const cmlist = sectioninfo.cmlist ?? [];\n            cmlist.forEach(cmid => {\n                const cminfo = state.cm.get(cmid);\n                const cm = {\n                    ...cminfo,\n                    isactive: false,\n                };\n                section.cms.push(cm);\n            });\n            section.hascms = (section.cms.length != 0);\n            data.sections.push(section);\n        });\n        data.hassections = (data.sections.length != 0);\n\n        try {\n            // To render an HTML into our component we just use the regular Templates module.\n            const {html, js} = await Templates.renderForPromise(\n                'core_course/local/courseindex/courseindex',\n                data,\n            );\n            Templates.replaceNode(this.element, html, js);\n        } catch (error) {\n            throw error;\n        }\n    }\n}"],"file":"placeholder.min.js"}