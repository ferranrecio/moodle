{"version":3,"sources":["../../../src/local/section_format/header.js"],"names":["Component","descriptor","name","id","section","course","number","getDraggableData","_getDraggableData","state","get","reactive","isEditing","supportComponents","dragdrop","DragDrop","classes","getClasses","exporter","getExporter","sectionDraggableData","getState","dropdata","type","firstcmid","cmlist","element","classList","add","DROPZONE","remove","dispatch","BaseComponent"],"mappings":"0yDA4BqBA,CAAAA,C,8HAOVC,C,CAAY,CAEf,KAAKC,IAAL,CAAY,uBAAZ,CAIA,KAAKC,EAAL,CAAUF,CAAU,CAACE,EAArB,CACA,KAAKC,OAAL,CAAeH,CAAU,CAACG,OAA1B,CACA,KAAKC,MAAL,CAAcJ,CAAU,CAACI,MAAzB,CAGA,GAA0B,CAAtB,MAAKD,OAAL,CAAaE,MAAjB,CAA6B,CACzB,KAAKC,gBAAL,CAAwB,KAAKC,iBAChC,CACJ,C,8CAOUC,C,CAAO,CAEd,KAAKL,OAAL,CAAeK,CAAK,CAACL,OAAN,CAAcM,GAAd,CAAkB,KAAKP,EAAvB,CAAf,CACA,KAAKE,MAAL,CAAcI,CAAK,CAACJ,MAApB,CAGA,GAAI,KAAKM,QAAL,CAAcC,SAAd,IAA6B,KAAKD,QAAL,CAAcE,iBAAd,EAAjC,CAAoE,CAEhE,KAAKC,QAAL,CAAgB,GAAIC,WAAJ,CAAa,IAAb,CAAhB,CAEA,KAAKC,OAAL,CAAe,KAAKF,QAAL,CAAcG,UAAd,EAClB,CACJ,C,6DASmB,CAChB,GAAMC,CAAAA,CAAQ,CAAG,KAAKP,QAAL,CAAcQ,WAAd,EAAjB,CACA,MAAOD,CAAAA,CAAQ,CAACE,oBAAT,CAA8B,KAAKT,QAAL,CAAcU,QAAd,EAA9B,CAAwD,KAAKlB,EAA7D,CACV,C,0DAQgBmB,C,CAAU,CAEvB,GAAuB,IAAnB,WAAAA,CAAQ,WAARA,SAAAA,CAAQ,CAAEC,IAAV,CAAJ,CAA6B,OAEnBC,CAAS,WAAG,KAAKpB,OAAR,qBAAG,EAAcqB,MAAd,CAAqB,CAArB,CAFO,CAGzB,MAAOH,CAAAA,CAAQ,CAACnB,EAAT,GAAgBqB,CAC1B,CACD,QACH,C,mDAOc,CACX,KAAKE,OAAL,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,KAAKZ,OAAL,CAAaa,QAAxC,CACH,C,mDAKc,CACX,KAAKH,OAAL,CAAaC,SAAb,CAAuBG,MAAvB,CAA8B,KAAKd,OAAL,CAAaa,QAA3C,CACH,C,kCAOIP,C,CAAU,CAEX,GAAqB,IAAjB,EAAAA,CAAQ,CAACC,IAAb,CAA2B,OACvB,KAAKZ,QAAL,CAAcoB,QAAd,CAAuB,QAAvB,CAAiC,CAACT,CAAQ,CAACnB,EAAV,CAAjC,CAAgD,KAAKA,EAArD,WAAyD,KAAKC,OAA9D,qBAAyD,EAAcqB,MAAd,CAAqB,CAArB,CAAzD,CACH,CACJ,C,cAhGkCO,e","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course section header component.\n *\n * This component is used to control specific course section interactions like drag and drop.\n *\n * @module     core_course/local/section_format/header\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent, DragDrop} from 'core/reactive';\n\nexport default class Component extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     *\n     * @param {Object} descriptor\n     */\n    create(descriptor) {\n        // Optional component name for debugging.\n        this.name = 'section_format_header';\n        // We need our id to watch specific events.\n\n        // Get main info from the descriptor.\n        this.id = descriptor.id;\n        this.section = descriptor.section;\n        this.course = descriptor.course;\n\n        // Prevent topic zero from being draggable.\n        if (this.section.number > 0) {\n            this.getDraggableData = this._getDraggableData;\n        }\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {Object} state the initial state\n     */\n    stateReady(state) {\n\n        this.section = state.section.get(this.id);\n        this.course = state.course;\n\n        // Drag and drop is only available for components compatible course formats.\n        if (this.reactive.isEditing() && this.reactive.supportComponents()) {\n            // Init the dropzone.\n            this.dragdrop = new DragDrop(this);\n            // Save dropzone classes.\n            this.classes = this.dragdrop.getClasses();\n        }\n    }\n\n    // Drag and drop methods.\n\n    /**\n     * Get the draggable data of this component.\n     *\n     * @returns {Object} exported course module drop data\n     */\n    _getDraggableData() {\n        const exporter = this.reactive.getExporter();\n        return exporter.sectionDraggableData(this.reactive.getState(), this.id);\n    }\n\n    /**\n     * Validate if the drop data can be dropped over the component.\n     *\n     * @param {Object} dropdata the exported drop data.\n     * @returns {boolean}\n     */\n    validateDropData(dropdata) {\n        // Course module validation.\n        if (dropdata?.type === 'cm') {\n            // The first section element is already there so we can ignore it.\n            const firstcmid = this.section?.cmlist[0];\n            return dropdata.id !== firstcmid;\n        }\n        return false;\n    }\n\n    /**\n     * Display the component dropzone.\n     *\n     * @param {Object} dropdata the accepted drop data\n     */\n    showDropZone() {\n        this.element.classList.add(this.classes.DROPZONE);\n    }\n\n    /**\n     * Hide the component dropzone.\n     */\n    hideDropZone() {\n        this.element.classList.remove(this.classes.DROPZONE);\n    }\n\n    /**\n     * Drop event handler.\n     *\n     * @param {Object} dropdata the accepted drop data\n     */\n    drop(dropdata) {\n        // Call the move mutation.\n        if (dropdata.type == 'cm') {\n            this.reactive.dispatch('cmMove', [dropdata.id], this.id, this.section?.cmlist[0]);\n        }\n    }\n}\n"],"file":"header.min.js"}