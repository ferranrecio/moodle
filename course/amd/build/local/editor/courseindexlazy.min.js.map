{"version":3,"sources":["../../../src/local/editor/courseindexlazy.js"],"names":["CourseIndexLazy","name","selectors","courseindex","newselectors","document","querySelector","innerHTML","editor","registerComponent","state","data","sections","editmode","course","sectionlist","forEach","sectionid","sectioninfo","section","get","title","visible","id","cms","cmid","cminfo","cm","push","hascms","length","hassections","Templates","render","then","html","js","appendNodeContents","fail","ex","log","error"],"mappings":"iNAwBA,OACA,OACA,O,uXAGMA,CAAAA,C,YAKF,YAAc,WAEV,KAAKC,IAAL,CAAY,sBAAZ,CAEA,KAAKC,SAAL,CAAiB,CACbC,WAAW,CAAE,cADA,CAGpB,C,qCAQIC,C,CAAc,OAGfC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,SAAtC,CAAkD,yBAAlD,CAGA,KAAKL,SAAL,CAAeC,WAAf,WAA6BC,CAAY,CAACD,WAA1C,gBAAyD,KAAKD,SAAL,CAAeC,WAAxE,CAGAK,UAAOC,iBAAP,CAAyB,IAAzB,EAIA,QACH,C,8CAOUC,C,CAAO,YAGRC,CAAI,CAAG,CACTC,QAAQ,CAAE,EADD,CAETC,QAAQ,CAAEH,CAAK,CAACI,MAAN,CAAaD,QAFd,CAHC,CAOdH,CAAK,CAACI,MAAN,CAAaC,WAAb,CAAyBC,OAAzB,CAAiC,SAAAC,CAAS,CAAI,IACpCC,CAAAA,CAAW,CAAGR,CAAK,CAACS,OAAN,CAAcC,GAAd,CAAkBH,CAAlB,CADsB,CAEpCE,CAAO,CAAG,CACZE,KAAK,CAAEH,CAAW,CAACG,KADP,CAEZC,OAAO,CAAEJ,CAAW,CAACI,OAFT,CAGZC,EAAE,CAAEN,CAHQ,CAIZO,GAAG,CAAE,EAJO,CAF0B,CAQ1CN,CAAW,CAACM,GAAZ,CAAgBR,OAAhB,CAAwB,SAAAS,CAAI,CAAI,CAC5B,GAAMC,CAAAA,CAAM,CAAGhB,CAAK,CAACiB,EAAN,CAASP,GAAT,CAAaK,CAAb,CAAf,CACAN,CAAO,CAACK,GAAR,CAAYI,IAAZ,CAAiB,CACb3B,IAAI,CAAEyB,CAAM,CAACzB,IADA,CAEbqB,OAAO,CAAEI,CAAM,CAACJ,OAFH,CAGbC,EAAE,CAAEE,CAHS,CAAjB,CAKH,CAPD,EAQAN,CAAO,CAACU,MAAR,CAAwC,CAAtB,EAAAV,CAAO,CAACK,GAAR,CAAYM,MAA9B,CACAnB,CAAI,CAACC,QAAL,CAAcgB,IAAd,CAAmBT,CAAnB,CACH,CAlBD,EAmBAR,CAAI,CAACoB,WAAL,CAA4C,CAAxB,EAAApB,CAAI,CAACC,QAAL,CAAckB,MAAlC,CAEAE,UAAUC,MAAV,CAAiB,+BAAjB,CAAkDtB,CAAlD,EACKuB,IADL,CACU,SAACC,CAAD,CAAOC,CAAP,CAAc,CAChB/B,QAAQ,CAACC,aAAT,CAAuB,CAAI,CAACJ,SAAL,CAAeC,WAAtC,EAAmDI,SAAnD,CAA+D,EAA/D,CACAyB,UAAUK,kBAAV,CAA6B,CAAI,CAACnC,SAAL,CAAeC,WAA5C,CAAyDgC,CAAzD,CAA+DC,CAA/D,EACA,QACH,CALL,EAKOE,IALP,CAKY,SAACC,CAAD,CAAQ,CACZC,UAAIC,KAAJ,CAAU,mCAAV,EACAD,UAAIC,KAAJ,CAAUF,CAAV,CACH,CARL,CASH,C,kBAGU,GAAIvC,CAAAA,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course index lazy load initialize module.\n *\n * @module     core_course/courseindexlazy\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport editor from 'core_course/editor';\nimport log from 'core/log';\nimport Templates from 'core/templates';\n\n\nclass CourseIndexLazy {\n\n    /**\n     * The class constructor.\n     */\n    constructor() {\n        // Optional component name.\n        this.name = 'courseindex_lazyload';\n        // Default component css selectors.\n        this.selectors = {\n            courseindex: '#courseindex',\n        };\n    }\n\n    /**\n     * Initialize the component.\n     *\n     * @param {object} newselectors optional selectors override\n     * @returns {boolean}\n     */\n    init(newselectors) {\n        // TODO: for now we replace the default drawer. Dele this when we have a proper\n        // course index component.\n        document.querySelector('#nav-drawer').innerHTML = 'Loading course index...';\n\n        // Overwrite the components selectors if necessary.\n        this.selectors.courseindex = newselectors.courseindex ?? this.selectors.courseindex;\n\n        // Register the component.\n        editor.registerComponent(this);\n\n        // Bind actions if necessary.\n\n        return true;\n    }\n\n    /**\n     * Render the real course index using the course state.\n     *\n     * @param {object} state the initial state\n     */\n    stateReady(state) {\n        // We are ready to replace the lazy load element with the real course index.\n        // Generate mustache data from the current state.\n        const data = {\n            sections: [],\n            editmode: state.course.editmode,\n        };\n        state.course.sectionlist.forEach(sectionid => {\n            const sectioninfo = state.section.get(sectionid);\n            const section = {\n                title: sectioninfo.title,\n                visible: sectioninfo.visible,\n                id: sectionid,\n                cms: [],\n            };\n            sectioninfo.cms.forEach(cmid => {\n                const cminfo = state.cm.get(cmid);\n                section.cms.push({\n                    name: cminfo.name,\n                    visible: cminfo.visible,\n                    id: cmid,\n                });\n            });\n            section.hascms = (section.cms.length != 0);\n            data.sections.push(section);\n        });\n        data.hassections = (data.sections.length != 0);\n\n        Templates.render('core_course/local/courseindex', data)\n            .then((html, js) => {\n                document.querySelector(this.selectors.courseindex).innerHTML = '';\n                Templates.appendNodeContents(this.selectors.courseindex, html, js);\n                return true;\n            }).fail((ex) => {\n                log.error('Cannot load course index template');\n                log.error(ex);\n            });\n    }\n}\n\nexport default new CourseIndexLazy();\n"],"file":"courseindexlazy.min.js"}