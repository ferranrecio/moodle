{"version":3,"sources":["../../../src/local/editor/reactive.js"],"names":["Reactive","description","name","Error","eventname","eventdispatch","statemanager","StateManager","watchers","Map","components","Set","mutations","document","addEventListener","callWatchersHandler","bind","event","action","detail","has","get","forEach","watcher","log","debug","handler","error","statedata","setInitialState","manager","mutation","hasOwnProperty","state","component","handlers","getEventHandlers","watch","componentname","actionwathers","push","set","add","actionname","params","args","mutationfunction","apply"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Generic reactive module used in the course editor.\n *\n * TODO: This module will be mover to core\\reactive once the new editor dev starts.\n *\n * @module     core_course/editor\n * @package    core_course\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport log from 'core/log';\nimport StateManager from 'core_course/local/editor/statemanager';\n\n/**\n* Set up general reactive class.\n*\n* The reactive class is responsible for contining the main store,\n* the complete components list that can be used and initialize the main\n* component.\n*\n* @return {void}\n*/\nconst Reactive = class {\n\n    /**\n     * Create a basic reactive manager.\n     *\n     * @param {object} description reactive manager description.\n     */\n    constructor(description) {\n\n        if (description.name === undefined) {\n            throw new Error(`Reactivity name required`);\n        }\n\n        if (description.eventname === undefined || description.eventdispatch === undefined) {\n            throw new Error(`Reactivity event required`);\n        }\n\n        this.name = description.name;\n        this.eventname = description.eventname;\n        this.eventdispatch = description.eventdispatch;\n\n        this.statemanager = new StateManager(this.eventdispatch);\n        this.watchers = new Map([]);\n        this.components = new Set([]);\n\n        // Mutations can be overridden using setMutations method.\n        this.mutations = description.mutations ?? {};\n\n        document.addEventListener(this.eventname, this.callWatchersHandler.bind(this));\n    }\n\n    /**\n     * State changed listener.\n     *\n     * This function take any change in the course state and send it to the proper\n     * watchers. Each component is free to register as state change listener,\n     * but we use a regular loop to avoid redundant code in all components\n     * and prevent unnecessary browser memory usage.\n     *\n     * @param {CustomEvent} event\n     */\n    callWatchersHandler(event) {\n        const action = event.detail.action;\n        // Execute any registered component watchers.\n        if (this.watchers.has(action)) {\n            this.watchers.get(action).forEach((watcher) => {\n                try {\n                    log.debug(`Executing \"${watcher.name}\" ${action} watcher`);\n                    watcher.handler(event.detail);\n                } catch (error) {\n                    log.error(`Component \"${watcher.name}\" error while watching ${action}`);\n                    log.error(error);\n                }\n            });\n        }\n    }\n\n    /**\n    * Create the state manager and set the initial state.\n    *\n    * @param {object} statedata the initial state data.\n    */\n    setInitialState(statedata) {\n        this.statemanager.setInitialState(statedata);\n    }\n\n    /**\n    * Set up the mutation manager.\n    *\n    * Note new mutations will be added to the existing ones.\n    *\n    * @method addMutations\n    * @param {Object} manager the new mutation manager\n    */\n    addMutations(manager) {\n        for (const mutation in manager) {\n            if (manager.hasOwnProperty(mutation)) {\n                this.mutations[mutation] = manager[mutation];\n            }\n        }\n    }\n\n    /**\n    * Return the current state\n    *\n    * @method getState\n    * @return {object}\n    */\n    getState() {\n        return this.statemanager.state;\n    }\n\n    /**\n    * Register a new component.\n    *\n    * @method registerComponent\n    * @param {Object} component the new component\n    */\n    registerComponent(component) {\n        // Register watchers.\n        const handlers = component.getEventHandlers();\n        handlers.forEach(({watch, handler}) => {\n\n            const componentname = component.name ?? 'Unkown component';\n\n            if (watch === undefined) {\n                throw new Error(`Empty watcher in ${componentname}`);\n            }\n            if (handler === undefined) {\n                throw new Error(`Empty handler for watcher ${watch} in ${componentname}`);\n            }\n\n            let actionwathers = this.watchers.get(watch) ?? [];\n            actionwathers.push({\n                name: componentname,\n                handler: handler,\n            });\n            this.watchers.set(watch, actionwathers);\n\n            // There's the possibility a component is registered after the initial state\n            // is loaded. For those cases the subcription to state_loaded\n            // will not work so we execute this state manually.\n            if (watch == 'state:loaded' && this.statemanager !== undefined && this.statemanager.state !== undefined) {\n                handler({state: this.statemanager.state});\n            }\n        });\n        this.components.add(component);\n    }\n\n    /**\n    * Dispatch a change in the state.\n    *\n    * @method dispatch\n    * @param {string} actionname the action name (usually the mutation name)\n    * @param {Object} data the mutation data\n    */\n    dispatch(...args) {\n        let actionname, params;\n        [actionname, ...params] = args;\n        if (this.mutations[actionname] === undefined) {\n            throw new Error(`Unkown ${actionname} mutation`);\n        }\n        try {\n            const mutationfunction = this.mutations[actionname];\n            mutationfunction.apply(this.mutations, [this.statemanager, ...params]);\n        } catch (error) {\n            log.error(error);\n            throw new Error(`Exception dispatching ${actionname}`);\n        }\n    }\n};\n\nexport default Reactive;\n"],"file":"reactive.min.js"}