{"version":3,"sources":["../../../src/local/editor/courseindex.js"],"names":["cssselectors","section","cm","cicontent","initialized","init","newselectors","editor","registerComponent","name","getEventHandlers","state_loaded","readyState","cm_updated","cmUpdate","section_updated","sectionUpdate","state","course","editmode","document","querySelector","addEventListener","toogleVisibility","element","domelement","id","visible","classList","remove","add","locked","event","actionbutton","target","closest","log","debug","dataset","action","dispatch"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course index editor component.\n *\n * @module     core_course/courseindex\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport editor from 'core_course/editor';\nimport log from 'core/log';\n\n// Those are the default selector for this component.\nlet cssselectors = {\n    section: '.ci-sectionitem',\n    cm: '.ci-cmitem',\n    cicontent: '#courseindex-content',\n};\n\n// Prevent multiple initialize.\nlet initialized = false;\n\n/**\n * Initialize the component.\n *\n * @param {object} newselectors optional selectors override\n * @returns {bool}\n */\nexport const init = (newselectors) => {\n\n    if (initialized) {\n        return true;\n    }\n    initialized = true;\n\n    // Overwrite the components selectors if necessary.\n    cssselectors.section = newselectors.section ?? cssselectors.section;\n    cssselectors.cm = newselectors.cm ?? cssselectors.cm;\n    cssselectors.cicontent = newselectors.cicontent ?? cssselectors.cicontent;\n\n    // Register the component.\n    editor.registerComponent({\n        name: 'courseindex',\n        getEventHandlers,\n    });\n\n    // Bind any necessary actions.\n\n    return true;\n};\n\n/**\n * Return a list of state watchers.\n *\n * @returns {array} an array of state watchers functions.\n */\nexport const getEventHandlers = () => {\n    // This is an example on how to capture any change in both cm and sections.\n    // To see how to capture specific element attributes such as visible or title\n    // look at core_course/local/cm_format module.\n    return {\n        state_loaded: readyState,\n        cm_updated: cmUpdate,\n        section_updated: sectionUpdate,\n    };\n};\n\n/**\n * This function is called when the course state is ready.\n *\n * Using this watcher the component can add elements to the interface\n * like edition buttons or bind events.\n *\n * @param {object} arg\n */\nexport const readyState = ({state}) => {\n    // Create or bind the editor elements.\n    if (state.course.editmode) {\n        // Bind events. In this case we bind a click listener.\n        const cicontent = document.querySelector(cssselectors.cicontent);\n        cicontent.addEventListener(\"click\", toogleVisibility);\n    }\n};\n\n/**\n * Update an entry in the course index with the state information.\n *\n * @param {object} arg\n */\nfunction cmUpdate({element}) {\n    // Get DOM element.\n    let domelement = document.querySelector(`${cssselectors.cm}[data-id='${element.id}']`);\n    if (element.visible) {\n        domelement.classList.remove(\"dimmed\");\n        domelement.classList.remove(\"bg-light\");\n    } else {\n        domelement.classList.add(\"dimmed\");\n        domelement.classList.add(\"bg-light\");\n    }\n    if (element.locked) {\n        domelement.classList.add(\"locked\");\n    } else {\n        domelement.classList.remove(\"locked\");\n    }\n}\n\n/**\n *\n * Update the section information with the current course state.\n *\n * @param {object} arg\n */\nfunction sectionUpdate({element}) {\n    // Get DOM element.\n    let domelement = document.querySelector(`${cssselectors.section} [data-id='${element.id}']`);\n    if (element.visible) {\n        domelement.classList.remove(\"dimmed\");\n    } else {\n        domelement.classList.add(\"dimmed\");\n    }\n}\n\n/**\n * Execute a mutation from a click event.\n *\n * This method is just an example on how to delegate evenets handling. In this case,\n * this function should be located in the main editor to capture all possible\n * actions.\n *\n * @param {*} event\n */\nfunction toogleVisibility(event) {\n    const actionbutton = event.target.closest('[data-action]');\n    if (actionbutton) {\n        log.debug(`ACTION ${actionbutton.dataset.action}`);\n        editor.dispatch(actionbutton.dataset.action, [actionbutton.dataset.id]);\n    }\n}\n"],"file":"courseindex.min.js"}