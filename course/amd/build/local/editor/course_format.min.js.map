{"version":3,"sources":["../../../src/local/editor/course_format.js"],"names":["Component","name","selectors","cmitem","watch","handler","cmVisibility","element","target","querySelector","id","visible","classList","remove","add","log","debug","document","getElementById","reactive","editor","ComponentBase"],"mappings":"wNAwBA,OACA,OACA,O,krDAGMA,CAAAA,C,+HAKO,CAEL,KAAKC,IAAL,CAAY,eAAZ,CAEA,KAAKC,SAAL,CAAiB,CACbC,MAAM,yBADO,CAGpB,C,iDAoBa,CACV,MAAO,CACH,CAACC,KAAK,qBAAN,CAA8BC,OAAO,CAAE,KAAKC,YAA5C,CADG,CAGV,C,oDAMuB,IAAVC,CAAAA,CAAU,GAAVA,OAAU,CAEdC,CAAM,CAAG,KAAKD,OAAL,CAAaE,aAAb,WAA8B,KAAKP,SAAL,CAAeC,MAA7C,sBAAgEI,CAAO,CAACG,EAAxE,OAFK,CAGpB,GAAIF,CAAJ,CAAY,CACR,GAAID,CAAO,CAACI,OAAZ,CAAqB,CACjBH,CAAM,CAACI,SAAP,CAAiBC,MAAjB,CAAwB,aAAxB,CACH,CAFD,IAEO,CACHL,CAAM,CAACI,SAAP,CAAiBE,GAAjB,CAAqB,aAArB,CACH,CACJ,CAND,IAMO,CACHC,UAAIC,KAAJ,iCAAmCT,CAAO,CAACG,EAA3C,uBACH,CACJ,C,oCA9BWF,C,CAAQN,C,CAAW,CAC3B,MAAO,IAAIF,CAAAA,CAAJ,CAAc,CACjBO,OAAO,CAAEU,QAAQ,CAACC,cAAT,CAAwBV,CAAxB,CADQ,CAEjBW,QAAQ,CAAEC,SAFO,CAGjBlB,SAAS,CAATA,CAHiB,CAAd,CAKV,C,cA9BmBmB,S,YAyDTrB,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Editor component for the course_format template.\n *\n * @module     core_course/course_format\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ComponentBase from 'core/reactive/component';\nimport editor from 'core_course/editor';\nimport log from 'core/log';\n\n\nclass Component extends ComponentBase {\n\n    /**\n     * Create hook method.\n     */\n    create() {\n        // Optional component name.\n        this.name = 'course_format';\n        // Default component css selectors.\n        this.selectors = {\n            cmitem: `[data-editor='cmitem']`,\n        };\n    }\n\n    /**\n     * Static method to create a component instance form the mustahce template.\n     *\n     * We use a static method to prevent mustache templates to know which\n     * reactive instance is used.\n     *\n     * @param {element|string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n    static init(target, selectors) {\n        return new Component({\n            element: document.getElementById(target),\n            reactive: editor,\n            selectors,\n        });\n    }\n\n    getWatchers() {\n        return [\n            {watch: `cm.visible:updated`, handler: this.cmVisibility},\n        ];\n    }\n\n    /**\n     *\n     * @param {*} arg\n     */\n    cmVisibility({element}) {\n        // Find the right element to apply the change.\n        const target = this.element.querySelector(`${this.selectors.cmitem}[data-id='${element.id}']`);\n        if (target) {\n            if (element.visible) {\n                target.classList.remove(\"dimmed_text\");\n            } else {\n                target.classList.add(\"dimmed_text\");\n            }\n        } else {\n            log.debug(`Course module with id ${element.id} not found in page`);\n        }\n    }\n}\n\nexport default Component;\n"],"file":"course_format.min.js"}