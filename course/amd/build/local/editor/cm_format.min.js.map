{"version":3,"sources":["../../../src/local/editor/cm_format.js"],"names":["cssselectors","cm","initialized","init","newselectors","editor","registerComponent","name","getEventHandlers","watch","handler","cmVisibility","cmLocked","element","domelement","document","querySelector","id","visible","classList","remove","add","locked"],"mappings":"2LAwBA,uD,GAGIA,CAAAA,CAAY,CAAG,CACfC,EAAE,CAAE,YADW,C,CAKfC,CAAW,G,CAUFC,CAAI,CAAG,SAACC,CAAD,CAAkB,OAElC,GAAIF,CAAJ,CAAiB,CACb,QACH,CACDA,CAAW,GAAX,CAGAF,CAAY,CAACC,EAAb,WAAkBG,CAAY,CAACH,EAA/B,gBAAqCD,CAAY,CAACC,EAAlD,CAGAI,UAAOC,iBAAP,CAAyB,CACrBC,IAAI,CAAE,WADe,CAErBC,gBAAgB,CAAhBA,CAFqB,CAAzB,EAOA,QACH,C,UAOM,GAAMA,CAAAA,CAAgB,CAAG,UAAM,CAKlC,MAAO,CACH,CAACC,KAAK,CAAE,oBAAR,CAA8BC,OAAO,CAAEC,CAAvC,CADG,CAEH,CAACF,KAAK,CAAE,mBAAR,CAA6BC,OAAO,CAAEE,CAAtC,CAFG,CAIV,CATM,C,qBAeP,QAASD,CAAAA,CAAT,GAAiC,IAAVE,CAAAA,CAAU,GAAVA,OAAU,CAEzBC,CAAU,CAAGC,QAAQ,CAACC,aAAT,WAA0BhB,CAAY,CAACC,EAAvC,sBAAsDY,CAAO,CAACI,EAA9D,OAFY,CAG7B,GAAIJ,CAAO,CAACK,OAAZ,CAAqB,CACjBJ,CAAU,CAACK,SAAX,CAAqBC,MAArB,CAA4B,aAA5B,CACH,CAFD,IAEO,CACHN,CAAU,CAACK,SAAX,CAAqBE,GAArB,CAAyB,aAAzB,CACH,CACJ,CAMD,QAAST,CAAAA,CAAT,GAA6B,IAAVC,CAAAA,CAAU,GAAVA,OAAU,CAErBC,CAAU,CAAGC,QAAQ,CAACC,aAAT,WAA0BhB,CAAY,CAACC,EAAvC,sBAAsDY,CAAO,CAACI,EAA9D,OAFQ,CAGzB,GAAIJ,CAAO,CAACS,MAAZ,CAAoB,CAChBR,CAAU,CAACK,SAAX,CAAqBE,GAArB,CAAyB,QAAzB,CACH,CAFD,IAEO,CACHP,CAAU,CAACK,SAAX,CAAqBC,MAArB,CAA4B,QAA5B,CACH,CACJ,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Editor component for the cm_format template.\n *\n * @module     core_course/cm_format\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport editor from 'core_course/editor';\n\n// Those are the default selector for this component.\nlet cssselectors = {\n    cm: '.cm_format',\n};\n\n// Prevent multiple initialize.\nlet initialized = false;\n\n/**\n * Initialize the component.\n *\n * @method init\n * @param {object} newselectors optional selectors override\n * ean}\n * @return {boolean}\n */\nexport const init = (newselectors) => {\n\n    if (initialized) {\n        return true;\n    }\n    initialized = true;\n\n    // Overwrite the components selectors if necessary.\n    cssselectors.cm = newselectors.cm ?? cssselectors.cm;\n\n    // Register the component.\n    editor.registerComponent({\n        name: 'cm_format',\n        getEventHandlers,\n    });\n\n    // Bind actions if necessary.\n\n    return true;\n};\n\n/**\n * Return a list of state watchers.\n *\n * @returns {array} an array of state watchers functions.\n */\nexport const getEventHandlers = () => {\n    // This is just an example of how a component could watch only\n    // some attributes of an element. For an example on how to capture\n    // any change in an element see core_coure/local/editor/courseindex module.\n\n    return [\n        {watch: 'cm.visible:updated', handler: cmVisibility},\n        {watch: 'cm.locked:updated', handler: cmLocked},\n    ];\n};\n\n/**\n *\n * @param {*} arg\n */\nfunction cmVisibility({element}) {\n    // Get DOM element.\n    let domelement = document.querySelector(`${cssselectors.cm}[data-id='${element.id}']`);\n    if (element.visible) {\n        domelement.classList.remove(\"dimmed_text\");\n    } else {\n        domelement.classList.add(\"dimmed_text\");\n    }\n}\n\n/**\n *\n * @param {*} arg\n */\nfunction cmLocked({element}) {\n    // Get DOM element.\n    let domelement = document.querySelector(`${cssselectors.cm}[data-id='${element.id}']`);\n    if (element.locked) {\n        domelement.classList.add(\"locked\");\n    } else {\n        domelement.classList.remove(\"locked\");\n    }\n}\n"],"file":"cm_format.min.js"}