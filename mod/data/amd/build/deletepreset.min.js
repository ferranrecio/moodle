define("mod_data/deletepreset",["exports","core/notification","core/prefetch","core/str","core/ajax","core/url"],(function(_exports,_notification,_prefetch,_str,_ajax,_url){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Javascript module for deleting a database as a preset.
   *
   * @module      mod_data/deletepreset
   * @copyright   2022 Amaia Anabitarte <amaia@moodle.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_notification=_interopRequireDefault(_notification),_ajax=_interopRequireDefault(_ajax),_url=_interopRequireDefault(_url);const selectors_deletePresetButton='[data-action="deletepreset"]';_exports.init=()=>{(0,_prefetch.prefetchStrings)("mod_data",["deleteconfirm","deletewarning","presetdeleted","failedpresetdelete"]),(0,_prefetch.prefetchStrings)("core",["delete"]),registerEventListeners()};const registerEventListeners=()=>{document.addEventListener("click",(event=>{const deleteOption=event.target.closest(selectors_deletePresetButton);deleteOption&&(event.preventDefault(),deletePresetConfirm(deleteOption))}))},deletePresetConfirm=deleteOption=>{const presetName=deleteOption.getAttribute("data-presetname"),dataId=deleteOption.getAttribute("data-dataid");_notification.default.saveCancelPromise((0,_str.get_string)("deleteconfirm","mod_data",presetName),(0,_str.get_string)("deletewarning","mod_data"),(0,_str.get_string)("delete","core")).then((()=>{return(dataid=dataId,presetname=presetName,request={methodname:"mod_data_delete_saved_preset",args:{dataid:dataid,presetnames:{presetname:presetname}}},_ajax.default.call([request])[0]).then((function(){var params={d:dataId};window.location.href=_url.default.relativeUrl("mod/data/preset.php",params,!1)})).catch(_notification.default.exception);var dataid,presetname,request})).catch((()=>{}))}}));

//# sourceMappingURL=deletepreset.min.js.map