{"version":3,"file":"carousel.min.js","sources":["../../src/bootstrap/carousel.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  defineJQueryPlugin,\n  getElementFromSelector,\n  isRTL,\n  isVisible,\n  getNextActiveElement,\n  reflow,\n  triggerTransitionEnd,\n  typeCheckConfig\n} from './util/index'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\nimport BaseComponent from './base-component'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'carousel'\nconst DATA_KEY = 'bs.carousel'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst ARROW_LEFT_KEY = 'ArrowLeft'\nconst ARROW_RIGHT_KEY = 'ArrowRight'\nconst TOUCHEVENT_COMPAT_WAIT = 500 // Time for mouse compat events to fire after touch\nconst SWIPE_THRESHOLD = 40\n\nconst Default = {\n  interval: 5000,\n  keyboard: true,\n  slide: false,\n  pause: 'hover',\n  wrap: true,\n  touch: true\n}\n\nconst DefaultType = {\n  interval: '(number|boolean)',\n  keyboard: 'boolean',\n  slide: '(boolean|string)',\n  pause: '(string|boolean)',\n  wrap: 'boolean',\n  touch: 'boolean'\n}\n\nconst ORDER_NEXT = 'next'\nconst ORDER_PREV = 'prev'\nconst DIRECTION_LEFT = 'left'\nconst DIRECTION_RIGHT = 'right'\n\nconst KEY_TO_DIRECTION = {\n  [ARROW_LEFT_KEY]: DIRECTION_RIGHT,\n  [ARROW_RIGHT_KEY]: DIRECTION_LEFT\n}\n\nconst EVENT_SLIDE = `slide${EVENT_KEY}`\nconst EVENT_SLID = `slid${EVENT_KEY}`\nconst EVENT_KEYDOWN = `keydown${EVENT_KEY}`\nconst EVENT_MOUSEENTER = `mouseenter${EVENT_KEY}`\nconst EVENT_MOUSELEAVE = `mouseleave${EVENT_KEY}`\nconst EVENT_TOUCHSTART = `touchstart${EVENT_KEY}`\nconst EVENT_TOUCHMOVE = `touchmove${EVENT_KEY}`\nconst EVENT_TOUCHEND = `touchend${EVENT_KEY}`\nconst EVENT_POINTERDOWN = `pointerdown${EVENT_KEY}`\nconst EVENT_POINTERUP = `pointerup${EVENT_KEY}`\nconst EVENT_DRAG_START = `dragstart${EVENT_KEY}`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_CAROUSEL = 'carousel'\nconst CLASS_NAME_ACTIVE = 'active'\nconst CLASS_NAME_SLIDE = 'slide'\nconst CLASS_NAME_END = 'carousel-item-end'\nconst CLASS_NAME_START = 'carousel-item-start'\nconst CLASS_NAME_NEXT = 'carousel-item-next'\nconst CLASS_NAME_PREV = 'carousel-item-prev'\nconst CLASS_NAME_POINTER_EVENT = 'pointer-event'\n\nconst SELECTOR_ACTIVE = '.active'\nconst SELECTOR_ACTIVE_ITEM = '.active.carousel-item'\nconst SELECTOR_ITEM = '.carousel-item'\nconst SELECTOR_ITEM_IMG = '.carousel-item img'\nconst SELECTOR_NEXT_PREV = '.carousel-item-next, .carousel-item-prev'\nconst SELECTOR_INDICATORS = '.carousel-indicators'\nconst SELECTOR_INDICATOR = '[data-bs-target]'\nconst SELECTOR_DATA_SLIDE = '[data-bs-slide], [data-bs-slide-to]'\nconst SELECTOR_DATA_RIDE = '[data-bs-ride=\"carousel\"]'\n\nconst POINTER_TYPE_TOUCH = 'touch'\nconst POINTER_TYPE_PEN = 'pen'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nclass Carousel extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n\n    this._items = null\n    this._interval = null\n    this._activeElement = null\n    this._isPaused = false\n    this._isSliding = false\n    this.touchTimeout = null\n    this.touchStartX = 0\n    this.touchDeltaX = 0\n\n    this._config = this._getConfig(config)\n    this._indicatorsElement = SelectorEngine.findOne(SELECTOR_INDICATORS, this._element)\n    this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0\n    this._pointerEvent = Boolean(window.PointerEvent)\n\n    this._addEventListeners()\n  }\n\n  // Getters\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  next() {\n    this._slide(ORDER_NEXT)\n  }\n\n  nextWhenVisible() {\n    // Don't call next when the page isn't visible\n    // or the carousel or its parent isn't visible\n    if (!document.hidden && isVisible(this._element)) {\n      this.next()\n    }\n  }\n\n  prev() {\n    this._slide(ORDER_PREV)\n  }\n\n  pause(event) {\n    if (!event) {\n      this._isPaused = true\n    }\n\n    if (SelectorEngine.findOne(SELECTOR_NEXT_PREV, this._element)) {\n      triggerTransitionEnd(this._element)\n      this.cycle(true)\n    }\n\n    clearInterval(this._interval)\n    this._interval = null\n  }\n\n  cycle(event) {\n    if (!event) {\n      this._isPaused = false\n    }\n\n    if (this._interval) {\n      clearInterval(this._interval)\n      this._interval = null\n    }\n\n    if (this._config && this._config.interval && !this._isPaused) {\n      this._updateInterval()\n\n      this._interval = setInterval(\n        (document.visibilityState ? this.nextWhenVisible : this.next).bind(this),\n        this._config.interval\n      )\n    }\n  }\n\n  to(index) {\n    this._activeElement = SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element)\n    const activeIndex = this._getItemIndex(this._activeElement)\n\n    if (index > this._items.length - 1 || index < 0) {\n      return\n    }\n\n    if (this._isSliding) {\n      EventHandler.one(this._element, EVENT_SLID, () => this.to(index))\n      return\n    }\n\n    if (activeIndex === index) {\n      this.pause()\n      this.cycle()\n      return\n    }\n\n    const order = index > activeIndex ?\n      ORDER_NEXT :\n      ORDER_PREV\n\n    this._slide(order, this._items[index])\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...Manipulator.getDataAttributes(this._element),\n      ...(typeof config === 'object' ? config : {})\n    }\n    typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _handleSwipe() {\n    const absDeltax = Math.abs(this.touchDeltaX)\n\n    if (absDeltax <= SWIPE_THRESHOLD) {\n      return\n    }\n\n    const direction = absDeltax / this.touchDeltaX\n\n    this.touchDeltaX = 0\n\n    if (!direction) {\n      return\n    }\n\n    this._slide(direction > 0 ? DIRECTION_RIGHT : DIRECTION_LEFT)\n  }\n\n  _addEventListeners() {\n    if (this._config.keyboard) {\n      EventHandler.on(this._element, EVENT_KEYDOWN, event => this._keydown(event))\n    }\n\n    if (this._config.pause === 'hover') {\n      EventHandler.on(this._element, EVENT_MOUSEENTER, event => this.pause(event))\n      EventHandler.on(this._element, EVENT_MOUSELEAVE, event => this.cycle(event))\n    }\n\n    if (this._config.touch && this._touchSupported) {\n      this._addTouchEventListeners()\n    }\n  }\n\n  _addTouchEventListeners() {\n    const start = event => {\n      if (this._pointerEvent && (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH)) {\n        this.touchStartX = event.clientX\n      } else if (!this._pointerEvent) {\n        this.touchStartX = event.touches[0].clientX\n      }\n    }\n\n    const move = event => {\n      // ensure swiping with one touch and not pinching\n      this.touchDeltaX = event.touches && event.touches.length > 1 ?\n        0 :\n        event.touches[0].clientX - this.touchStartX\n    }\n\n    const end = event => {\n      if (this._pointerEvent && (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH)) {\n        this.touchDeltaX = event.clientX - this.touchStartX\n      }\n\n      this._handleSwipe()\n      if (this._config.pause === 'hover') {\n        // If it's a touch-enabled device, mouseenter/leave are fired as\n        // part of the mouse compatibility events on first tap - the carousel\n        // would stop cycling until user tapped out of it;\n        // here, we listen for touchend, explicitly pause the carousel\n        // (as if it's the second time we tap on it, mouseenter compat event\n        // is NOT fired) and after a timeout (to allow for mouse compatibility\n        // events to fire) we explicitly restart cycling\n\n        this.pause()\n        if (this.touchTimeout) {\n          clearTimeout(this.touchTimeout)\n        }\n\n        this.touchTimeout = setTimeout(event => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval)\n      }\n    }\n\n    SelectorEngine.find(SELECTOR_ITEM_IMG, this._element).forEach(itemImg => {\n      EventHandler.on(itemImg, EVENT_DRAG_START, e => e.preventDefault())\n    })\n\n    if (this._pointerEvent) {\n      EventHandler.on(this._element, EVENT_POINTERDOWN, event => start(event))\n      EventHandler.on(this._element, EVENT_POINTERUP, event => end(event))\n\n      this._element.classList.add(CLASS_NAME_POINTER_EVENT)\n    } else {\n      EventHandler.on(this._element, EVENT_TOUCHSTART, event => start(event))\n      EventHandler.on(this._element, EVENT_TOUCHMOVE, event => move(event))\n      EventHandler.on(this._element, EVENT_TOUCHEND, event => end(event))\n    }\n  }\n\n  _keydown(event) {\n    if (/input|textarea/i.test(event.target.tagName)) {\n      return\n    }\n\n    const direction = KEY_TO_DIRECTION[event.key]\n    if (direction) {\n      event.preventDefault()\n      this._slide(direction)\n    }\n  }\n\n  _getItemIndex(element) {\n    this._items = element && element.parentNode ?\n      SelectorEngine.find(SELECTOR_ITEM, element.parentNode) :\n      []\n\n    return this._items.indexOf(element)\n  }\n\n  _getItemByOrder(order, activeElement) {\n    const isNext = order === ORDER_NEXT\n    return getNextActiveElement(this._items, activeElement, isNext, this._config.wrap)\n  }\n\n  _triggerSlideEvent(relatedTarget, eventDirectionName) {\n    const targetIndex = this._getItemIndex(relatedTarget)\n    const fromIndex = this._getItemIndex(SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element))\n\n    return EventHandler.trigger(this._element, EVENT_SLIDE, {\n      relatedTarget,\n      direction: eventDirectionName,\n      from: fromIndex,\n      to: targetIndex\n    })\n  }\n\n  _setActiveIndicatorElement(element) {\n    if (this._indicatorsElement) {\n      const activeIndicator = SelectorEngine.findOne(SELECTOR_ACTIVE, this._indicatorsElement)\n\n      activeIndicator.classList.remove(CLASS_NAME_ACTIVE)\n      activeIndicator.removeAttribute('aria-current')\n\n      const indicators = SelectorEngine.find(SELECTOR_INDICATOR, this._indicatorsElement)\n\n      for (let i = 0; i < indicators.length; i++) {\n        if (Number.parseInt(indicators[i].getAttribute('data-bs-slide-to'), 10) === this._getItemIndex(element)) {\n          indicators[i].classList.add(CLASS_NAME_ACTIVE)\n          indicators[i].setAttribute('aria-current', 'true')\n          break\n        }\n      }\n    }\n  }\n\n  _updateInterval() {\n    const element = this._activeElement || SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element)\n\n    if (!element) {\n      return\n    }\n\n    const elementInterval = Number.parseInt(element.getAttribute('data-bs-interval'), 10)\n\n    if (elementInterval) {\n      this._config.defaultInterval = this._config.defaultInterval || this._config.interval\n      this._config.interval = elementInterval\n    } else {\n      this._config.interval = this._config.defaultInterval || this._config.interval\n    }\n  }\n\n  _slide(directionOrOrder, element) {\n    const order = this._directionToOrder(directionOrOrder)\n    const activeElement = SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element)\n    const activeElementIndex = this._getItemIndex(activeElement)\n    const nextElement = element || this._getItemByOrder(order, activeElement)\n\n    const nextElementIndex = this._getItemIndex(nextElement)\n    const isCycling = Boolean(this._interval)\n\n    const isNext = order === ORDER_NEXT\n    const directionalClassName = isNext ? CLASS_NAME_START : CLASS_NAME_END\n    const orderClassName = isNext ? CLASS_NAME_NEXT : CLASS_NAME_PREV\n    const eventDirectionName = this._orderToDirection(order)\n\n    if (nextElement && nextElement.classList.contains(CLASS_NAME_ACTIVE)) {\n      this._isSliding = false\n      return\n    }\n\n    if (this._isSliding) {\n      return\n    }\n\n    const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName)\n    if (slideEvent.defaultPrevented) {\n      return\n    }\n\n    if (!activeElement || !nextElement) {\n      // Some weirdness is happening, so we bail\n      return\n    }\n\n    this._isSliding = true\n\n    if (isCycling) {\n      this.pause()\n    }\n\n    this._setActiveIndicatorElement(nextElement)\n    this._activeElement = nextElement\n\n    const triggerSlidEvent = () => {\n      EventHandler.trigger(this._element, EVENT_SLID, {\n        relatedTarget: nextElement,\n        direction: eventDirectionName,\n        from: activeElementIndex,\n        to: nextElementIndex\n      })\n    }\n\n    if (this._element.classList.contains(CLASS_NAME_SLIDE)) {\n      nextElement.classList.add(orderClassName)\n\n      reflow(nextElement)\n\n      activeElement.classList.add(directionalClassName)\n      nextElement.classList.add(directionalClassName)\n\n      const completeCallBack = () => {\n        nextElement.classList.remove(directionalClassName, orderClassName)\n        nextElement.classList.add(CLASS_NAME_ACTIVE)\n\n        activeElement.classList.remove(CLASS_NAME_ACTIVE, orderClassName, directionalClassName)\n\n        this._isSliding = false\n\n        setTimeout(triggerSlidEvent, 0)\n      }\n\n      this._queueCallback(completeCallBack, activeElement, true)\n    } else {\n      activeElement.classList.remove(CLASS_NAME_ACTIVE)\n      nextElement.classList.add(CLASS_NAME_ACTIVE)\n\n      this._isSliding = false\n      triggerSlidEvent()\n    }\n\n    if (isCycling) {\n      this.cycle()\n    }\n  }\n\n  _directionToOrder(direction) {\n    if (![DIRECTION_RIGHT, DIRECTION_LEFT].includes(direction)) {\n      return direction\n    }\n\n    if (isRTL()) {\n      return direction === DIRECTION_LEFT ? ORDER_PREV : ORDER_NEXT\n    }\n\n    return direction === DIRECTION_LEFT ? ORDER_NEXT : ORDER_PREV\n  }\n\n  _orderToDirection(order) {\n    if (![ORDER_NEXT, ORDER_PREV].includes(order)) {\n      return order\n    }\n\n    if (isRTL()) {\n      return order === ORDER_PREV ? DIRECTION_LEFT : DIRECTION_RIGHT\n    }\n\n    return order === ORDER_PREV ? DIRECTION_RIGHT : DIRECTION_LEFT\n  }\n\n  // Static\n\n  static carouselInterface(element, config) {\n    const data = Carousel.getOrCreateInstance(element, config)\n\n    let { _config } = data\n    if (typeof config === 'object') {\n      _config = {\n        ..._config,\n        ...config\n      }\n    }\n\n    const action = typeof config === 'string' ? config : _config.slide\n\n    if (typeof config === 'number') {\n      data.to(config)\n    } else if (typeof action === 'string') {\n      if (typeof data[action] === 'undefined') {\n        throw new TypeError(`No method named \"${action}\"`)\n      }\n\n      data[action]()\n    } else if (_config.interval && _config.ride) {\n      data.pause()\n      data.cycle()\n    }\n  }\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      Carousel.carouselInterface(this, config)\n    })\n  }\n\n  static dataApiClickHandler(event) {\n    const target = getElementFromSelector(this)\n\n    if (!target || !target.classList.contains(CLASS_NAME_CAROUSEL)) {\n      return\n    }\n\n    const config = {\n      ...Manipulator.getDataAttributes(target),\n      ...Manipulator.getDataAttributes(this)\n    }\n    const slideIndex = this.getAttribute('data-bs-slide-to')\n\n    if (slideIndex) {\n      config.interval = false\n    }\n\n    Carousel.carouselInterface(target, config)\n\n    if (slideIndex) {\n      Carousel.getInstance(target).to(slideIndex)\n    }\n\n    event.preventDefault()\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_SLIDE, Carousel.dataApiClickHandler)\n\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  const carousels = SelectorEngine.find(SELECTOR_DATA_RIDE)\n\n  for (let i = 0, len = carousels.length; i < len; i++) {\n    Carousel.carouselInterface(carousels[i], Carousel.getInstance(carousels[i]))\n  }\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Carousel to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Carousel)\n\nexport default Carousel\n"],"names":["EVENT_KEY","Default","interval","keyboard","slide","pause","wrap","touch","DefaultType","ORDER_NEXT","ORDER_PREV","DIRECTION_LEFT","DIRECTION_RIGHT","KEY_TO_DIRECTION","EVENT_SLIDE","EVENT_SLID","EVENT_KEYDOWN","EVENT_MOUSEENTER","EVENT_MOUSELEAVE","EVENT_TOUCHSTART","EVENT_TOUCHMOVE","EVENT_TOUCHEND","EVENT_POINTERDOWN","EVENT_POINTERUP","EVENT_DRAG_START","EVENT_LOAD_DATA_API","EVENT_CLICK_DATA_API","Carousel","BaseComponent","constructor","element","config","_items","_interval","_activeElement","_isPaused","_isSliding","touchTimeout","touchStartX","touchDeltaX","_config","this","_getConfig","_indicatorsElement","SelectorEngine","findOne","_element","_touchSupported","document","documentElement","navigator","maxTouchPoints","_pointerEvent","Boolean","window","PointerEvent","_addEventListeners","NAME","next","_slide","nextWhenVisible","hidden","prev","event","cycle","clearInterval","_updateInterval","setInterval","visibilityState","bind","to","index","activeIndex","_getItemIndex","length","one","order","Manipulator","getDataAttributes","_handleSwipe","absDeltax","Math","abs","direction","on","_keydown","_addTouchEventListeners","start","pointerType","touches","clientX","move","end","clearTimeout","setTimeout","find","forEach","itemImg","e","preventDefault","classList","add","test","target","tagName","key","parentNode","indexOf","_getItemByOrder","activeElement","isNext","_triggerSlideEvent","relatedTarget","eventDirectionName","targetIndex","fromIndex","EventHandler","trigger","from","_setActiveIndicatorElement","activeIndicator","remove","removeAttribute","indicators","i","Number","parseInt","getAttribute","setAttribute","elementInterval","defaultInterval","directionOrOrder","_directionToOrder","activeElementIndex","nextElement","nextElementIndex","isCycling","directionalClassName","orderClassName","_orderToDirection","contains","defaultPrevented","triggerSlidEvent","completeCallBack","_queueCallback","includes","data","getOrCreateInstance","action","TypeError","ride","each","carouselInterface","slideIndex","getInstance","dataApiClickHandler","carousels","len"],"mappings":"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"}