{"version":3,"file":"manipulator.min.js","sources":["../../../src/bootstrap/dom/manipulator.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): dom/manipulator.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nfunction normalizeData(val) {\n  if (val === 'true') {\n    return true\n  }\n\n  if (val === 'false') {\n    return false\n  }\n\n  if (val === Number(val).toString()) {\n    return Number(val)\n  }\n\n  if (val === '' || val === 'null') {\n    return null\n  }\n\n  return val\n}\n\nfunction normalizeDataKey(key) {\n  return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`)\n}\n\nconst Manipulator = {\n  setDataAttribute(element, key, value) {\n    element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value)\n  },\n\n  removeDataAttribute(element, key) {\n    element.removeAttribute(`data-bs-${normalizeDataKey(key)}`)\n  },\n\n  getDataAttributes(element) {\n    if (!element) {\n      return {}\n    }\n\n    const attributes = {}\n\n    Object.keys(element.dataset)\n      .filter(key => key.startsWith('bs'))\n      .forEach(key => {\n        let pureKey = key.replace(/^bs/, '')\n        pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length)\n        attributes[pureKey] = normalizeData(element.dataset[key])\n      })\n\n    return attributes\n  },\n\n  getDataAttribute(element, key) {\n    return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`))\n  },\n\n  offset(element) {\n    const rect = element.getBoundingClientRect()\n\n    return {\n      top: rect.top + document.body.scrollTop,\n      left: rect.left + document.body.scrollLeft\n    }\n  },\n\n  position(element) {\n    return {\n      top: element.offsetTop,\n      left: element.offsetLeft\n    }\n  }\n}\n\nexport default Manipulator\n"],"names":["normalizeData","val","Number","toString","normalizeDataKey","key","replace","chr","toLowerCase","setDataAttribute","element","value","setAttribute","removeDataAttribute","removeAttribute","getDataAttributes","attributes","Object","keys","dataset","filter","startsWith","forEach","pureKey","charAt","slice","length","getDataAttribute","getAttribute","offset","rect","getBoundingClientRect","top","document","body","scrollTop","left","scrollLeft","position","offsetTop","offsetLeft"],"mappings":"wFAOSA,cAAcC,WACT,SAARA,KAIQ,UAARA,MAIAA,MAAQC,OAAOD,KAAKE,WACfD,OAAOD,KAGJ,KAARA,KAAsB,SAARA,IACT,KAGFA,cAGAG,iBAAiBC,YACjBA,IAAIC,QAAQ,UAAUC,gBAAWA,IAAIC,8GAG1B,CAClBC,iBAAiBC,QAASL,IAAKM,OAC7BD,QAAQE,+BAAwBR,iBAAiBC,MAAQM,QAG3DE,oBAAoBH,QAASL,KAC3BK,QAAQI,kCAA2BV,iBAAiBC,QAGtDU,kBAAkBL,aACXA,cACI,SAGHM,WAAa,UAEnBC,OAAOC,KAAKR,QAAQS,SACjBC,QAAOf,KAAOA,IAAIgB,WAAW,QAC7BC,SAAQjB,UACHkB,QAAUlB,IAAIC,QAAQ,MAAO,IACjCiB,QAAUA,QAAQC,OAAO,GAAGhB,cAAgBe,QAAQE,MAAM,EAAGF,QAAQG,QACrEV,WAAWO,SAAWvB,cAAcU,QAAQS,QAAQd,SAGjDW,YAGTW,iBAAgB,CAACjB,QAASL,MACjBL,cAAcU,QAAQkB,+BAAwBxB,iBAAiBC,QAGxEwB,OAAOnB,eACCoB,KAAOpB,QAAQqB,8BAEd,CACLC,IAAKF,KAAKE,IAAMC,SAASC,KAAKC,UAC9BC,KAAMN,KAAKM,KAAOH,SAASC,KAAKG,aAIpCC,SAAS5B,UACA,CACLsB,IAAKtB,QAAQ6B,UACbH,KAAM1B,QAAQ8B"}