{"version":3,"file":"collapse.min.js","sources":["../../src/bootstrap/collapse.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  defineJQueryPlugin,\n  getElement,\n  getSelectorFromElement,\n  getElementFromSelector,\n  reflow,\n  typeCheckConfig\n} from './util/index'\nimport Data from './dom/data'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\nimport BaseComponent from './base-component'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'collapse'\nconst DATA_KEY = 'bs.collapse'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst Default = {\n  toggle: true,\n  parent: ''\n}\n\nconst DefaultType = {\n  toggle: 'boolean',\n  parent: '(string|element)'\n}\n\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_COLLAPSE = 'collapse'\nconst CLASS_NAME_COLLAPSING = 'collapsing'\nconst CLASS_NAME_COLLAPSED = 'collapsed'\n\nconst WIDTH = 'width'\nconst HEIGHT = 'height'\n\nconst SELECTOR_ACTIVES = '.show, .collapsing'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"collapse\"]'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Collapse extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n\n    this._isTransitioning = false\n    this._config = this._getConfig(config)\n    this._triggerArray = SelectorEngine.find(\n      `${SELECTOR_DATA_TOGGLE}[href=\"#${this._element.id}\"],` +\n      `${SELECTOR_DATA_TOGGLE}[data-bs-target=\"#${this._element.id}\"]`\n    )\n\n    const toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE)\n\n    for (let i = 0, len = toggleList.length; i < len; i++) {\n      const elem = toggleList[i]\n      const selector = getSelectorFromElement(elem)\n      const filterElement = SelectorEngine.find(selector)\n        .filter(foundElem => foundElem === this._element)\n\n      if (selector !== null && filterElement.length) {\n        this._selector = selector\n        this._triggerArray.push(elem)\n      }\n    }\n\n    this._parent = this._config.parent ? this._getParent() : null\n\n    if (!this._config.parent) {\n      this._addAriaAndCollapsedClass(this._element, this._triggerArray)\n    }\n\n    if (this._config.toggle) {\n      this.toggle()\n    }\n  }\n\n  // Getters\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  toggle() {\n    if (this._element.classList.contains(CLASS_NAME_SHOW)) {\n      this.hide()\n    } else {\n      this.show()\n    }\n  }\n\n  show() {\n    if (this._isTransitioning || this._element.classList.contains(CLASS_NAME_SHOW)) {\n      return\n    }\n\n    let actives\n    let activesData\n\n    if (this._parent) {\n      actives = SelectorEngine.find(SELECTOR_ACTIVES, this._parent)\n        .filter(elem => {\n          if (typeof this._config.parent === 'string') {\n            return elem.getAttribute('data-bs-parent') === this._config.parent\n          }\n\n          return elem.classList.contains(CLASS_NAME_COLLAPSE)\n        })\n\n      if (actives.length === 0) {\n        actives = null\n      }\n    }\n\n    const container = SelectorEngine.findOne(this._selector)\n    if (actives) {\n      const tempActiveData = actives.find(elem => container !== elem)\n      activesData = tempActiveData ? Collapse.getInstance(tempActiveData) : null\n\n      if (activesData && activesData._isTransitioning) {\n        return\n      }\n    }\n\n    const startEvent = EventHandler.trigger(this._element, EVENT_SHOW)\n    if (startEvent.defaultPrevented) {\n      return\n    }\n\n    if (actives) {\n      actives.forEach(elemActive => {\n        if (container !== elemActive) {\n          Collapse.collapseInterface(elemActive, 'hide')\n        }\n\n        if (!activesData) {\n          Data.set(elemActive, DATA_KEY, null)\n        }\n      })\n    }\n\n    const dimension = this._getDimension()\n\n    this._element.classList.remove(CLASS_NAME_COLLAPSE)\n    this._element.classList.add(CLASS_NAME_COLLAPSING)\n\n    this._element.style[dimension] = 0\n\n    if (this._triggerArray.length) {\n      this._triggerArray.forEach(element => {\n        element.classList.remove(CLASS_NAME_COLLAPSED)\n        element.setAttribute('aria-expanded', true)\n      })\n    }\n\n    this.setTransitioning(true)\n\n    const complete = () => {\n      this._element.classList.remove(CLASS_NAME_COLLAPSING)\n      this._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW)\n\n      this._element.style[dimension] = ''\n\n      this.setTransitioning(false)\n\n      EventHandler.trigger(this._element, EVENT_SHOWN)\n    }\n\n    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1)\n    const scrollSize = `scroll${capitalizedDimension}`\n\n    this._queueCallback(complete, this._element, true)\n    this._element.style[dimension] = `${this._element[scrollSize]}px`\n  }\n\n  hide() {\n    if (this._isTransitioning || !this._element.classList.contains(CLASS_NAME_SHOW)) {\n      return\n    }\n\n    const startEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n    if (startEvent.defaultPrevented) {\n      return\n    }\n\n    const dimension = this._getDimension()\n\n    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`\n\n    reflow(this._element)\n\n    this._element.classList.add(CLASS_NAME_COLLAPSING)\n    this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW)\n\n    const triggerArrayLength = this._triggerArray.length\n    if (triggerArrayLength > 0) {\n      for (let i = 0; i < triggerArrayLength; i++) {\n        const trigger = this._triggerArray[i]\n        const elem = getElementFromSelector(trigger)\n\n        if (elem && !elem.classList.contains(CLASS_NAME_SHOW)) {\n          trigger.classList.add(CLASS_NAME_COLLAPSED)\n          trigger.setAttribute('aria-expanded', false)\n        }\n      }\n    }\n\n    this.setTransitioning(true)\n\n    const complete = () => {\n      this.setTransitioning(false)\n      this._element.classList.remove(CLASS_NAME_COLLAPSING)\n      this._element.classList.add(CLASS_NAME_COLLAPSE)\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    }\n\n    this._element.style[dimension] = ''\n\n    this._queueCallback(complete, this._element, true)\n  }\n\n  setTransitioning(isTransitioning) {\n    this._isTransitioning = isTransitioning\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...config\n    }\n    config.toggle = Boolean(config.toggle) // Coerce string values\n    typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _getDimension() {\n    return this._element.classList.contains(WIDTH) ? WIDTH : HEIGHT\n  }\n\n  _getParent() {\n    let { parent } = this._config\n\n    parent = getElement(parent)\n\n    const selector = `${SELECTOR_DATA_TOGGLE}[data-bs-parent=\"${parent}\"]`\n\n    SelectorEngine.find(selector, parent)\n      .forEach(element => {\n        const selected = getElementFromSelector(element)\n\n        this._addAriaAndCollapsedClass(\n          selected,\n          [element]\n        )\n      })\n\n    return parent\n  }\n\n  _addAriaAndCollapsedClass(element, triggerArray) {\n    if (!element || !triggerArray.length) {\n      return\n    }\n\n    const isOpen = element.classList.contains(CLASS_NAME_SHOW)\n\n    triggerArray.forEach(elem => {\n      if (isOpen) {\n        elem.classList.remove(CLASS_NAME_COLLAPSED)\n      } else {\n        elem.classList.add(CLASS_NAME_COLLAPSED)\n      }\n\n      elem.setAttribute('aria-expanded', isOpen)\n    })\n  }\n\n  // Static\n\n  static collapseInterface(element, config) {\n    let data = Collapse.getInstance(element)\n    const _config = {\n      ...Default,\n      ...Manipulator.getDataAttributes(element),\n      ...(typeof config === 'object' && config ? config : {})\n    }\n\n    if (!data && _config.toggle && typeof config === 'string' && /show|hide/.test(config)) {\n      _config.toggle = false\n    }\n\n    if (!data) {\n      data = new Collapse(element, _config)\n    }\n\n    if (typeof config === 'string') {\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    }\n  }\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      Collapse.collapseInterface(this, config)\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n  if (event.target.tagName === 'A' || (event.delegateTarget && event.delegateTarget.tagName === 'A')) {\n    event.preventDefault()\n  }\n\n  const triggerData = Manipulator.getDataAttributes(this)\n  const selector = getSelectorFromElement(this)\n  const selectorElements = SelectorEngine.find(selector)\n\n  selectorElements.forEach(element => {\n    const data = Collapse.getInstance(element)\n    let config\n    if (data) {\n      // update parent attribute\n      if (data._parent === null && typeof triggerData.parent === 'string') {\n        data._config.parent = triggerData.parent\n        data._parent = data._getParent()\n      }\n\n      config = 'toggle'\n    } else {\n      config = triggerData\n    }\n\n    Collapse.collapseInterface(element, config)\n  })\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Collapse to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Collapse)\n\nexport default Collapse\n"],"names":["EVENT_KEY","Default","toggle","parent","DefaultType","EVENT_SHOW","EVENT_SHOWN","EVENT_HIDE","EVENT_HIDDEN","EVENT_CLICK_DATA_API","Collapse","BaseComponent","constructor","element","config","_isTransitioning","_config","this","_getConfig","_triggerArray","SelectorEngine","find","_element","id","toggleList","i","len","length","elem","selector","filterElement","filter","foundElem","_selector","push","_parent","_getParent","_addAriaAndCollapsedClass","NAME","classList","contains","hide","show","actives","activesData","getAttribute","container","findOne","tempActiveData","getInstance","EventHandler","trigger","defaultPrevented","forEach","elemActive","collapseInterface","set","dimension","_getDimension","remove","add","style","setAttribute","setTransitioning","capitalizedDimension","toUpperCase","slice","scrollSize","_queueCallback","getBoundingClientRect","triggerArrayLength","isTransitioning","Boolean","selected","triggerArray","isOpen","data","Manipulator","getDataAttributes","test","TypeError","each","on","document","event","target","tagName","delegateTarget","preventDefault","triggerData"],"mappings":"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"}