{"version":3,"file":"modal.min.js","sources":["../../src/bootstrap/modal.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): modal.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  defineJQueryPlugin,\n  getElementFromSelector,\n  isRTL,\n  isVisible,\n  reflow,\n  typeCheckConfig\n} from './util/index'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\nimport ScrollBarHelper from './util/scrollbar'\nimport BaseComponent from './base-component'\nimport Backdrop from './util/backdrop'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'modal'\nconst DATA_KEY = 'bs.modal'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst ESCAPE_KEY = 'Escape'\n\nconst Default = {\n  backdrop: true,\n  keyboard: true,\n  focus: true\n}\n\nconst DefaultType = {\n  backdrop: '(boolean|string)',\n  keyboard: 'boolean',\n  focus: 'boolean'\n}\n\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`\nconst EVENT_RESIZE = `resize${EVENT_KEY}`\nconst EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY}`\nconst EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY}`\nconst EVENT_MOUSEUP_DISMISS = `mouseup.dismiss${EVENT_KEY}`\nconst EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_OPEN = 'modal-open'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_STATIC = 'modal-static'\n\nconst SELECTOR_DIALOG = '.modal-dialog'\nconst SELECTOR_MODAL_BODY = '.modal-body'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"modal\"]'\nconst SELECTOR_DATA_DISMISS = '[data-bs-dismiss=\"modal\"]'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Modal extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n\n    this._config = this._getConfig(config)\n    this._dialog = SelectorEngine.findOne(SELECTOR_DIALOG, this._element)\n    this._backdrop = this._initializeBackDrop()\n    this._isShown = false\n    this._ignoreBackdropClick = false\n    this._isTransitioning = false\n    this._scrollBar = new ScrollBarHelper()\n  }\n\n  // Getters\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget)\n  }\n\n  show(relatedTarget) {\n    if (this._isShown || this._isTransitioning) {\n      return\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, {\n      relatedTarget\n    })\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = true\n\n    if (this._isAnimated()) {\n      this._isTransitioning = true\n    }\n\n    this._scrollBar.hide()\n\n    document.body.classList.add(CLASS_NAME_OPEN)\n\n    this._adjustDialog()\n\n    this._setEscapeEvent()\n    this._setResizeEvent()\n\n    EventHandler.on(this._element, EVENT_CLICK_DISMISS, SELECTOR_DATA_DISMISS, event => this.hide(event))\n\n    EventHandler.on(this._dialog, EVENT_MOUSEDOWN_DISMISS, () => {\n      EventHandler.one(this._element, EVENT_MOUSEUP_DISMISS, event => {\n        if (event.target === this._element) {\n          this._ignoreBackdropClick = true\n        }\n      })\n    })\n\n    this._showBackdrop(() => this._showElement(relatedTarget))\n  }\n\n  hide(event) {\n    if (event && ['A', 'AREA'].includes(event.target.tagName)) {\n      event.preventDefault()\n    }\n\n    if (!this._isShown || this._isTransitioning) {\n      return\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = false\n    const isAnimated = this._isAnimated()\n\n    if (isAnimated) {\n      this._isTransitioning = true\n    }\n\n    this._setEscapeEvent()\n    this._setResizeEvent()\n\n    EventHandler.off(document, EVENT_FOCUSIN)\n\n    this._element.classList.remove(CLASS_NAME_SHOW)\n\n    EventHandler.off(this._element, EVENT_CLICK_DISMISS)\n    EventHandler.off(this._dialog, EVENT_MOUSEDOWN_DISMISS)\n\n    this._queueCallback(() => this._hideModal(), this._element, isAnimated)\n  }\n\n  dispose() {\n    [window, this._dialog]\n      .forEach(htmlElement => EventHandler.off(htmlElement, EVENT_KEY))\n\n    this._backdrop.dispose()\n    super.dispose()\n\n    /**\n     * `document` has 2 events `EVENT_FOCUSIN` and `EVENT_CLICK_DATA_API`\n     * Do not move `document` in `htmlElements` array\n     * It will remove `EVENT_CLICK_DATA_API` event that should remain\n     */\n    EventHandler.off(document, EVENT_FOCUSIN)\n  }\n\n  handleUpdate() {\n    this._adjustDialog()\n  }\n\n  // Private\n\n  _initializeBackDrop() {\n    return new Backdrop({\n      isVisible: Boolean(this._config.backdrop), // 'static' option will be translated to true, and booleans will keep their value\n      isAnimated: this._isAnimated()\n    })\n  }\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...Manipulator.getDataAttributes(this._element),\n      ...(typeof config === 'object' ? config : {})\n    }\n    typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _showElement(relatedTarget) {\n    const isAnimated = this._isAnimated()\n    const modalBody = SelectorEngine.findOne(SELECTOR_MODAL_BODY, this._dialog)\n\n    if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\n      // Don't move modal's DOM position\n      document.body.appendChild(this._element)\n    }\n\n    this._element.style.display = 'block'\n    this._element.removeAttribute('aria-hidden')\n    this._element.setAttribute('aria-modal', true)\n    this._element.setAttribute('role', 'dialog')\n    this._element.scrollTop = 0\n\n    if (modalBody) {\n      modalBody.scrollTop = 0\n    }\n\n    if (isAnimated) {\n      reflow(this._element)\n    }\n\n    this._element.classList.add(CLASS_NAME_SHOW)\n\n    if (this._config.focus) {\n      this._enforceFocus()\n    }\n\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._element.focus()\n      }\n\n      this._isTransitioning = false\n      EventHandler.trigger(this._element, EVENT_SHOWN, {\n        relatedTarget\n      })\n    }\n\n    this._queueCallback(transitionComplete, this._dialog, isAnimated)\n  }\n\n  _enforceFocus() {\n    EventHandler.off(document, EVENT_FOCUSIN) // guard against infinite focus loop\n    EventHandler.on(document, EVENT_FOCUSIN, event => {\n      if (document !== event.target &&\n          this._element !== event.target &&\n          !this._element.contains(event.target)) {\n        this._element.focus()\n      }\n    })\n  }\n\n  _setEscapeEvent() {\n    if (this._isShown) {\n      EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n        if (this._config.keyboard && event.key === ESCAPE_KEY) {\n          event.preventDefault()\n          this.hide()\n        } else if (!this._config.keyboard && event.key === ESCAPE_KEY) {\n          this._triggerBackdropTransition()\n        }\n      })\n    } else {\n      EventHandler.off(this._element, EVENT_KEYDOWN_DISMISS)\n    }\n  }\n\n  _setResizeEvent() {\n    if (this._isShown) {\n      EventHandler.on(window, EVENT_RESIZE, () => this._adjustDialog())\n    } else {\n      EventHandler.off(window, EVENT_RESIZE)\n    }\n  }\n\n  _hideModal() {\n    this._element.style.display = 'none'\n    this._element.setAttribute('aria-hidden', true)\n    this._element.removeAttribute('aria-modal')\n    this._element.removeAttribute('role')\n    this._isTransitioning = false\n    this._backdrop.hide(() => {\n      document.body.classList.remove(CLASS_NAME_OPEN)\n      this._resetAdjustments()\n      this._scrollBar.reset()\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    })\n  }\n\n  _showBackdrop(callback) {\n    EventHandler.on(this._element, EVENT_CLICK_DISMISS, event => {\n      if (this._ignoreBackdropClick) {\n        this._ignoreBackdropClick = false\n        return\n      }\n\n      if (event.target !== event.currentTarget) {\n        return\n      }\n\n      if (this._config.backdrop === true) {\n        this.hide()\n      } else if (this._config.backdrop === 'static') {\n        this._triggerBackdropTransition()\n      }\n    })\n\n    this._backdrop.show(callback)\n  }\n\n  _isAnimated() {\n    return this._element.classList.contains(CLASS_NAME_FADE)\n  }\n\n  _triggerBackdropTransition() {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED)\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    const { classList, scrollHeight, style } = this._element\n    const isModalOverflowing = scrollHeight > document.documentElement.clientHeight\n\n    // return if the following background transition hasn't yet completed\n    if ((!isModalOverflowing && style.overflowY === 'hidden') || classList.contains(CLASS_NAME_STATIC)) {\n      return\n    }\n\n    if (!isModalOverflowing) {\n      style.overflowY = 'hidden'\n    }\n\n    classList.add(CLASS_NAME_STATIC)\n    this._queueCallback(() => {\n      classList.remove(CLASS_NAME_STATIC)\n      if (!isModalOverflowing) {\n        this._queueCallback(() => {\n          style.overflowY = ''\n        }, this._dialog)\n      }\n    }, this._dialog)\n\n    this._element.focus()\n  }\n\n  // ----------------------------------------------------------------------\n  // the following methods are used to handle overflowing modals\n  // ----------------------------------------------------------------------\n\n  _adjustDialog() {\n    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight\n    const scrollbarWidth = this._scrollBar.getWidth()\n    const isBodyOverflowing = scrollbarWidth > 0\n\n    if ((!isBodyOverflowing && isModalOverflowing && !isRTL()) || (isBodyOverflowing && !isModalOverflowing && isRTL())) {\n      this._element.style.paddingLeft = `${scrollbarWidth}px`\n    }\n\n    if ((isBodyOverflowing && !isModalOverflowing && !isRTL()) || (!isBodyOverflowing && isModalOverflowing && isRTL())) {\n      this._element.style.paddingRight = `${scrollbarWidth}px`\n    }\n  }\n\n  _resetAdjustments() {\n    this._element.style.paddingLeft = ''\n    this._element.style.paddingRight = ''\n  }\n\n  // Static\n\n  static jQueryInterface(config, relatedTarget) {\n    return this.each(function () {\n      const data = Modal.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config](relatedTarget)\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  const target = getElementFromSelector(this)\n\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault()\n  }\n\n  EventHandler.one(target, EVENT_SHOW, showEvent => {\n    if (showEvent.defaultPrevented) {\n      // only register focus restorer if modal will actually get shown\n      return\n    }\n\n    EventHandler.one(target, EVENT_HIDDEN, () => {\n      if (isVisible(this)) {\n        this.focus()\n      }\n    })\n  })\n\n  const data = Modal.getOrCreateInstance(target)\n\n  data.toggle(this)\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Modal to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Modal)\n\nexport default Modal\n"],"names":["EVENT_KEY","Default","backdrop","keyboard","focus","DefaultType","EVENT_HIDE","EVENT_HIDE_PREVENTED","EVENT_HIDDEN","EVENT_SHOW","EVENT_SHOWN","EVENT_FOCUSIN","EVENT_RESIZE","EVENT_CLICK_DISMISS","EVENT_KEYDOWN_DISMISS","EVENT_MOUSEUP_DISMISS","EVENT_MOUSEDOWN_DISMISS","EVENT_CLICK_DATA_API","Modal","BaseComponent","constructor","element","config","_config","this","_getConfig","_dialog","SelectorEngine","findOne","_element","_backdrop","_initializeBackDrop","_isShown","_ignoreBackdropClick","_isTransitioning","_scrollBar","ScrollBarHelper","NAME","toggle","relatedTarget","hide","show","EventHandler","trigger","defaultPrevented","_isAnimated","document","body","classList","add","_adjustDialog","_setEscapeEvent","_setResizeEvent","on","event","one","target","_showBackdrop","_showElement","includes","tagName","preventDefault","isAnimated","off","remove","_queueCallback","_hideModal","dispose","window","forEach","htmlElement","handleUpdate","Backdrop","isVisible","Boolean","Manipulator","getDataAttributes","modalBody","parentNode","nodeType","Node","ELEMENT_NODE","appendChild","style","display","removeAttribute","setAttribute","scrollTop","_enforceFocus","contains","key","_triggerBackdropTransition","_resetAdjustments","reset","callback","currentTarget","scrollHeight","isModalOverflowing","documentElement","clientHeight","overflowY","scrollbarWidth","getWidth","isBodyOverflowing","paddingLeft","paddingRight","each","data","getOrCreateInstance","TypeError","showEvent"],"mappings":"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"}