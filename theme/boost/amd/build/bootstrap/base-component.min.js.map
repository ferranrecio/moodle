{"version":3,"file":"base-component.min.js","sources":["../../src/bootstrap/base-component.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Data from './dom/data'\nimport {\n  executeAfterTransition,\n  getElement\n} from './util/index'\nimport EventHandler from './dom/event-handler'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst VERSION = '5.0.2'\n\nclass BaseComponent {\n  constructor(element) {\n    element = getElement(element)\n\n    if (!element) {\n      return\n    }\n\n    this._element = element\n    Data.set(this._element, this.constructor.DATA_KEY, this)\n  }\n\n  dispose() {\n    Data.remove(this._element, this.constructor.DATA_KEY)\n    EventHandler.off(this._element, this.constructor.EVENT_KEY)\n\n    Object.getOwnPropertyNames(this).forEach(propertyName => {\n      this[propertyName] = null\n    })\n  }\n\n  _queueCallback(callback, element, isAnimated = true) {\n    executeAfterTransition(callback, element, isAnimated)\n  }\n\n  /** Static */\n\n  static getInstance(element) {\n    return Data.get(element, this.DATA_KEY)\n  }\n\n  static getOrCreateInstance(element, config = {}) {\n    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null)\n  }\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get NAME() {\n    throw new Error('You have to implement the static method \"NAME\", for each component!')\n  }\n\n  static get DATA_KEY() {\n    return `bs.${this.NAME}`\n  }\n\n  static get EVENT_KEY() {\n    return `.${this.DATA_KEY}`\n  }\n}\n\nexport default BaseComponent\n"],"names":["constructor","element","_element","set","this","DATA_KEY","dispose","remove","off","EVENT_KEY","Object","getOwnPropertyNames","forEach","propertyName","_queueCallback","callback","isAnimated","Data","get","config","getInstance","VERSION","NAME","Error"],"mappings":"waAuBEA,YAAYC,UACVA,SAAU,qBAAWA,iBAMhBC,SAAWD,sBACXE,IAAIC,KAAKF,SAAUE,KAAKJ,YAAYK,SAAUD,OAGrDE,wBACOC,OAAOH,KAAKF,SAAUE,KAAKJ,YAAYK,gCAC/BG,IAAIJ,KAAKF,SAAUE,KAAKJ,YAAYS,WAEjDC,OAAOC,oBAAoBP,MAAMQ,SAAQC,oBAClCA,cAAgB,QAIzBC,eAAeC,SAAUd,aAASe,wGACTD,SAAUd,QAASe,+BAKzBf,gBACVgB,cAAKC,IAAIjB,QAASG,KAAKC,qCAGLJ,aAASkB,8DAAS,UACpCf,KAAKgB,YAAYnB,UAAY,IAAIG,KAAKH,QAA2B,iBAAXkB,OAAsBA,OAAS,MAGnFE,2BArCG,QAyCHC,wBACH,IAAIC,MAAM,uEAGPlB,yCACID,KAAKkB,MAGTb,wCACEL,KAAKC"}