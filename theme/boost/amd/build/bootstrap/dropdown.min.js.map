{"version":3,"file":"dropdown.min.js","sources":["../../src/bootstrap/dropdown.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): dropdown.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport * as Popper from 'theme_boost/popper'\n\nimport {\n  defineJQueryPlugin,\n  getElement,\n  getElementFromSelector,\n  isDisabled,\n  isElement,\n  isVisible,\n  isRTL,\n  noop,\n  getNextActiveElement,\n  typeCheckConfig\n} from './util/index'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\nimport BaseComponent from './base-component'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'dropdown'\nconst DATA_KEY = 'bs.dropdown'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst ESCAPE_KEY = 'Escape'\nconst SPACE_KEY = 'Space'\nconst TAB_KEY = 'Tab'\nconst ARROW_UP_KEY = 'ArrowUp'\nconst ARROW_DOWN_KEY = 'ArrowDown'\nconst RIGHT_MOUSE_BUTTON = 2 // MouseEvent.button value for the secondary button, usually the right button\n\nconst REGEXP_KEYDOWN = new RegExp(`${ARROW_UP_KEY}|${ARROW_DOWN_KEY}|${ESCAPE_KEY}`)\n\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_CLICK = `click${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_KEYDOWN_DATA_API = `keydown${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_KEYUP_DATA_API = `keyup${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_DROPUP = 'dropup'\nconst CLASS_NAME_DROPEND = 'dropend'\nconst CLASS_NAME_DROPSTART = 'dropstart'\nconst CLASS_NAME_NAVBAR = 'navbar'\n\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"dropdown\"]'\nconst SELECTOR_MENU = '.dropdown-menu'\nconst SELECTOR_NAVBAR_NAV = '.navbar-nav'\nconst SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'\n\nconst PLACEMENT_TOP = isRTL() ? 'top-end' : 'top-start'\nconst PLACEMENT_TOPEND = isRTL() ? 'top-start' : 'top-end'\nconst PLACEMENT_BOTTOM = isRTL() ? 'bottom-end' : 'bottom-start'\nconst PLACEMENT_BOTTOMEND = isRTL() ? 'bottom-start' : 'bottom-end'\nconst PLACEMENT_RIGHT = isRTL() ? 'left-start' : 'right-start'\nconst PLACEMENT_LEFT = isRTL() ? 'right-start' : 'left-start'\n\nconst Default = {\n  offset: [0, 2],\n  boundary: 'clippingParents',\n  reference: 'toggle',\n  display: 'dynamic',\n  popperConfig: null,\n  autoClose: true\n}\n\nconst DefaultType = {\n  offset: '(array|string|function)',\n  boundary: '(string|element)',\n  reference: '(string|element|object)',\n  display: 'string',\n  popperConfig: '(null|object|function)',\n  autoClose: '(boolean|string)'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Dropdown extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n\n    this._popper = null\n    this._config = this._getConfig(config)\n    this._menu = this._getMenuElement()\n    this._inNavbar = this._detectNavbar()\n\n    this._addEventListeners()\n  }\n\n  // Getters\n\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  toggle() {\n    if (isDisabled(this._element)) {\n      return\n    }\n\n    const isActive = this._element.classList.contains(CLASS_NAME_SHOW)\n\n    if (isActive) {\n      this.hide()\n      return\n    }\n\n    this.show()\n  }\n\n  show() {\n    if (isDisabled(this._element) || this._menu.classList.contains(CLASS_NAME_SHOW)) {\n      return\n    }\n\n    const parent = Dropdown.getParentFromElement(this._element)\n    const relatedTarget = {\n      relatedTarget: this._element\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, relatedTarget)\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    // Totally disable Popper for Dropdowns in Navbar\n    if (this._inNavbar) {\n      Manipulator.setDataAttribute(this._menu, 'popper', 'none')\n    } else {\n      if (typeof Popper === 'undefined') {\n        throw new TypeError('Bootstrap\\'s dropdowns require Popper (https://popper.js.org)')\n      }\n\n      let referenceElement = this._element\n\n      if (this._config.reference === 'parent') {\n        referenceElement = parent\n      } else if (isElement(this._config.reference)) {\n        referenceElement = getElement(this._config.reference)\n      } else if (typeof this._config.reference === 'object') {\n        referenceElement = this._config.reference\n      }\n\n      const popperConfig = this._getPopperConfig()\n      const isDisplayStatic = popperConfig.modifiers.find(modifier => modifier.name === 'applyStyles' && modifier.enabled === false)\n\n      this._popper = Popper.createPopper(referenceElement, this._menu, popperConfig)\n\n      if (isDisplayStatic) {\n        Manipulator.setDataAttribute(this._menu, 'popper', 'static')\n      }\n    }\n\n    // If this is a touch-enabled device we add extra\n    // empty mouseover listeners to the body's immediate children;\n    // only needed because of broken event delegation on iOS\n    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n    if ('ontouchstart' in document.documentElement &&\n      !parent.closest(SELECTOR_NAVBAR_NAV)) {\n      [].concat(...document.body.children)\n        .forEach(elem => EventHandler.on(elem, 'mouseover', noop))\n    }\n\n    this._element.focus()\n    this._element.setAttribute('aria-expanded', true)\n\n    this._menu.classList.toggle(CLASS_NAME_SHOW)\n    this._element.classList.toggle(CLASS_NAME_SHOW)\n    EventHandler.trigger(this._element, EVENT_SHOWN, relatedTarget)\n  }\n\n  hide() {\n    if (isDisabled(this._element) || !this._menu.classList.contains(CLASS_NAME_SHOW)) {\n      return\n    }\n\n    const relatedTarget = {\n      relatedTarget: this._element\n    }\n\n    this._completeHide(relatedTarget)\n  }\n\n  dispose() {\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    super.dispose()\n  }\n\n  update() {\n    this._inNavbar = this._detectNavbar()\n    if (this._popper) {\n      this._popper.update()\n    }\n  }\n\n  // Private\n\n  _addEventListeners() {\n    EventHandler.on(this._element, EVENT_CLICK, event => {\n      event.preventDefault()\n      this.toggle()\n    })\n  }\n\n  _completeHide(relatedTarget) {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE, relatedTarget)\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    // If this is a touch-enabled device we remove the extra\n    // empty mouseover listeners we added for iOS support\n    if ('ontouchstart' in document.documentElement) {\n      [].concat(...document.body.children)\n        .forEach(elem => EventHandler.off(elem, 'mouseover', noop))\n    }\n\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    this._menu.classList.remove(CLASS_NAME_SHOW)\n    this._element.classList.remove(CLASS_NAME_SHOW)\n    this._element.setAttribute('aria-expanded', 'false')\n    Manipulator.removeDataAttribute(this._menu, 'popper')\n    EventHandler.trigger(this._element, EVENT_HIDDEN, relatedTarget)\n  }\n\n  _getConfig(config) {\n    config = {\n      ...this.constructor.Default,\n      ...Manipulator.getDataAttributes(this._element),\n      ...config\n    }\n\n    typeCheckConfig(NAME, config, this.constructor.DefaultType)\n\n    if (typeof config.reference === 'object' && !isElement(config.reference) &&\n      typeof config.reference.getBoundingClientRect !== 'function'\n    ) {\n      // Popper virtual elements require a getBoundingClientRect method\n      throw new TypeError(`${NAME.toUpperCase()}: Option \"reference\" provided type \"object\" without a required \"getBoundingClientRect\" method.`)\n    }\n\n    return config\n  }\n\n  _getMenuElement() {\n    return SelectorEngine.next(this._element, SELECTOR_MENU)[0]\n  }\n\n  _getPlacement() {\n    const parentDropdown = this._element.parentNode\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPEND)) {\n      return PLACEMENT_RIGHT\n    }\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPSTART)) {\n      return PLACEMENT_LEFT\n    }\n\n    // We need to trim the value because custom properties can also include spaces\n    const isEnd = getComputedStyle(this._menu).getPropertyValue('--bs-position').trim() === 'end'\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPUP)) {\n      return isEnd ? PLACEMENT_TOPEND : PLACEMENT_TOP\n    }\n\n    return isEnd ? PLACEMENT_BOTTOMEND : PLACEMENT_BOTTOM\n  }\n\n  _detectNavbar() {\n    return this._element.closest(`.${CLASS_NAME_NAVBAR}`) !== null\n  }\n\n  _getOffset() {\n    const { offset } = this._config\n\n    if (typeof offset === 'string') {\n      return offset.split(',').map(val => Number.parseInt(val, 10))\n    }\n\n    if (typeof offset === 'function') {\n      return popperData => offset(popperData, this._element)\n    }\n\n    return offset\n  }\n\n  _getPopperConfig() {\n    const defaultBsPopperConfig = {\n      placement: this._getPlacement(),\n      modifiers: [{\n        name: 'preventOverflow',\n        options: {\n          boundary: this._config.boundary\n        }\n      },\n      {\n        name: 'offset',\n        options: {\n          offset: this._getOffset()\n        }\n      }]\n    }\n\n    // Disable Popper if we have a static display\n    if (this._config.display === 'static') {\n      defaultBsPopperConfig.modifiers = [{\n        name: 'applyStyles',\n        enabled: false\n      }]\n    }\n\n    return {\n      ...defaultBsPopperConfig,\n      ...(typeof this._config.popperConfig === 'function' ? this._config.popperConfig(defaultBsPopperConfig) : this._config.popperConfig)\n    }\n  }\n\n  _selectMenuItem({ key, target }) {\n    const items = SelectorEngine.find(SELECTOR_VISIBLE_ITEMS, this._menu).filter(isVisible)\n\n    if (!items.length) {\n      return\n    }\n\n    // if target isn't included in items (e.g. when expanding the dropdown)\n    // allow cycling to get the last item in case key equals ARROW_UP_KEY\n    getNextActiveElement(items, target, key === ARROW_DOWN_KEY, !items.includes(target)).focus()\n  }\n\n  // Static\n\n  static dropdownInterface(element, config) {\n    const data = Dropdown.getOrCreateInstance(element, config)\n\n    if (typeof config === 'string') {\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    }\n  }\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      Dropdown.dropdownInterface(this, config)\n    })\n  }\n\n  static clearMenus(event) {\n    if (event && (event.button === RIGHT_MOUSE_BUTTON || (event.type === 'keyup' && event.key !== TAB_KEY))) {\n      return\n    }\n\n    const toggles = SelectorEngine.find(SELECTOR_DATA_TOGGLE)\n\n    for (let i = 0, len = toggles.length; i < len; i++) {\n      const context = Dropdown.getInstance(toggles[i])\n      if (!context || context._config.autoClose === false) {\n        continue\n      }\n\n      if (!context._element.classList.contains(CLASS_NAME_SHOW)) {\n        continue\n      }\n\n      const relatedTarget = {\n        relatedTarget: context._element\n      }\n\n      if (event) {\n        const composedPath = event.composedPath()\n        const isMenuTarget = composedPath.includes(context._menu)\n        if (\n          composedPath.includes(context._element) ||\n          (context._config.autoClose === 'inside' && !isMenuTarget) ||\n          (context._config.autoClose === 'outside' && isMenuTarget)\n        ) {\n          continue\n        }\n\n        // Tab navigation through the dropdown menu or events from contained inputs shouldn't close the menu\n        if (context._menu.contains(event.target) && ((event.type === 'keyup' && event.key === TAB_KEY) || /input|select|option|textarea|form/i.test(event.target.tagName))) {\n          continue\n        }\n\n        if (event.type === 'click') {\n          relatedTarget.clickEvent = event\n        }\n      }\n\n      context._completeHide(relatedTarget)\n    }\n  }\n\n  static getParentFromElement(element) {\n    return getElementFromSelector(element) || element.parentNode\n  }\n\n  static dataApiKeydownHandler(event) {\n    // If not input/textarea:\n    //  - And not a key in REGEXP_KEYDOWN => not a dropdown command\n    // If input/textarea:\n    //  - If space key => not a dropdown command\n    //  - If key is other than escape\n    //    - If key is not up or down => not a dropdown command\n    //    - If trigger inside the menu => not a dropdown command\n    if (/input|textarea/i.test(event.target.tagName) ?\n      event.key === SPACE_KEY || (event.key !== ESCAPE_KEY &&\n      ((event.key !== ARROW_DOWN_KEY && event.key !== ARROW_UP_KEY) ||\n        event.target.closest(SELECTOR_MENU))) :\n      !REGEXP_KEYDOWN.test(event.key)) {\n      return\n    }\n\n    const isActive = this.classList.contains(CLASS_NAME_SHOW)\n\n    if (!isActive && event.key === ESCAPE_KEY) {\n      return\n    }\n\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (isDisabled(this)) {\n      return\n    }\n\n    const getToggleButton = () => this.matches(SELECTOR_DATA_TOGGLE) ? this : SelectorEngine.prev(this, SELECTOR_DATA_TOGGLE)[0]\n\n    if (event.key === ESCAPE_KEY) {\n      getToggleButton().focus()\n      Dropdown.clearMenus()\n      return\n    }\n\n    if (event.key === ARROW_UP_KEY || event.key === ARROW_DOWN_KEY) {\n      if (!isActive) {\n        getToggleButton().click()\n      }\n\n      Dropdown.getInstance(getToggleButton())._selectMenuItem(event)\n      return\n    }\n\n    if (!isActive || event.key === SPACE_KEY) {\n      Dropdown.clearMenus()\n    }\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE, Dropdown.dataApiKeydownHandler)\nEventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown.dataApiKeydownHandler)\nEventHandler.on(document, EVENT_CLICK_DATA_API, Dropdown.clearMenus)\nEventHandler.on(document, EVENT_KEYUP_DATA_API, Dropdown.clearMenus)\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  event.preventDefault()\n  Dropdown.dropdownInterface(this)\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Dropdown to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Dropdown)\n\nexport default Dropdown\n"],"names":["NAME","EVENT_KEY","REGEXP_KEYDOWN","RegExp","EVENT_HIDE","EVENT_HIDDEN","EVENT_SHOW","EVENT_SHOWN","EVENT_CLICK","EVENT_CLICK_DATA_API","EVENT_KEYDOWN_DATA_API","EVENT_KEYUP_DATA_API","PLACEMENT_TOP","PLACEMENT_TOPEND","PLACEMENT_BOTTOM","PLACEMENT_BOTTOMEND","PLACEMENT_RIGHT","PLACEMENT_LEFT","Default","offset","boundary","reference","display","popperConfig","autoClose","DefaultType","Dropdown","BaseComponent","constructor","element","config","_popper","_config","this","_getConfig","_menu","_getMenuElement","_inNavbar","_detectNavbar","_addEventListeners","toggle","_element","classList","contains","hide","show","parent","getParentFromElement","relatedTarget","EventHandler","trigger","defaultPrevented","setDataAttribute","Popper","TypeError","referenceElement","_getPopperConfig","isDisplayStatic","modifiers","find","modifier","name","enabled","createPopper","document","documentElement","closest","concat","body","children","forEach","elem","on","noop","focus","setAttribute","_completeHide","dispose","destroy","update","event","preventDefault","off","remove","removeDataAttribute","Manipulator","getDataAttributes","getBoundingClientRect","toUpperCase","SelectorEngine","next","_getPlacement","parentDropdown","parentNode","isEnd","getComputedStyle","getPropertyValue","trim","_getOffset","split","map","val","Number","parseInt","popperData","defaultBsPopperConfig","placement","options","_selectMenuItem","key","target","items","filter","isVisible","length","includes","data","getOrCreateInstance","each","dropdownInterface","button","type","toggles","i","len","context","getInstance","composedPath","isMenuTarget","test","tagName","clickEvent","isActive","stopPropagation","getToggleButton","matches","prev","clearMenus","click","dataApiKeydownHandler"],"mappings":"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"}