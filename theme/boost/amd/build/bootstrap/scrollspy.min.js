define("theme_boost/bootstrap/scrollspy",["exports","./util/index","./dom/event-handler","./dom/manipulator","./dom/selector-engine","./base-component"],(function(_exports,_index,_eventHandler,_manipulator,_selectorEngine,_baseComponent){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_eventHandler=_interopRequireDefault(_eventHandler),_manipulator=_interopRequireDefault(_manipulator),_selectorEngine=_interopRequireDefault(_selectorEngine),_baseComponent=_interopRequireDefault(_baseComponent);const NAME="scrollspy",EVENT_KEY=".".concat("bs.scrollspy"),Default={offset:10,method:"auto",target:""},DefaultType={offset:"number",method:"string",target:"(string|element)"},EVENT_ACTIVATE="activate".concat(EVENT_KEY),EVENT_SCROLL="scroll".concat(EVENT_KEY),EVENT_LOAD_DATA_API="load".concat(EVENT_KEY).concat(".data-api");class ScrollSpy extends _baseComponent.default{constructor(element,config){super(element),this._scrollElement="BODY"===this._element.tagName?window:this._element,this._config=this._getConfig(config),this._selector="".concat(this._config.target," ").concat(".nav-link",", ").concat(this._config.target," ").concat(".list-group-item",", ").concat(this._config.target," .").concat("dropdown-item"),this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,_eventHandler.default.on(this._scrollElement,EVENT_SCROLL,(()=>this._process())),this.refresh(),this._process()}static get Default(){return Default}static get NAME(){return NAME}refresh(){const autoMethod=this._scrollElement===this._scrollElement.window?"offset":"position",offsetMethod="auto"===this._config.method?autoMethod:this._config.method,offsetBase="position"===offsetMethod?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight();_selectorEngine.default.find(this._selector).map((element=>{const targetSelector=(0,_index.getSelectorFromElement)(element),target=targetSelector?_selectorEngine.default.findOne(targetSelector):null;if(target){const targetBCR=target.getBoundingClientRect();if(targetBCR.width||targetBCR.height)return[_manipulator.default[offsetMethod](target).top+offsetBase,targetSelector]}return null})).filter((item=>item)).sort(((a,b)=>a[0]-b[0])).forEach((item=>{this._offsets.push(item[0]),this._targets.push(item[1])}))}dispose(){_eventHandler.default.off(this._scrollElement,EVENT_KEY),super.dispose()}_getConfig(config){if("string"!=typeof(config={...Default,..._manipulator.default.getDataAttributes(this._element),..."object"==typeof config&&config?config:{}}).target&&(0,_index.isElement)(config.target)){let{id:id}=config.target;id||(id=(0,_index.getUID)(NAME),config.target.id=id),config.target="#".concat(id)}return(0,_index.typeCheckConfig)(NAME,config,DefaultType),config}_getScrollTop(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop}_getScrollHeight(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)}_getOffsetHeight(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height}_process(){const scrollTop=this._getScrollTop()+this._config.offset,scrollHeight=this._getScrollHeight(),maxScroll=this._config.offset+scrollHeight-this._getOffsetHeight();if(this._scrollHeight!==scrollHeight&&this.refresh(),scrollTop>=maxScroll){const target=this._targets[this._targets.length-1];this._activeTarget!==target&&this._activate(target)}else{if(this._activeTarget&&scrollTop<this._offsets[0]&&this._offsets[0]>0)return this._activeTarget=null,void this._clear();for(let i=this._offsets.length;i--;){this._activeTarget!==this._targets[i]&&scrollTop>=this._offsets[i]&&(void 0===this._offsets[i+1]||scrollTop<this._offsets[i+1])&&this._activate(this._targets[i])}}}_activate(target){this._activeTarget=target,this._clear();const queries=this._selector.split(",").map((selector=>"".concat(selector,'[data-bs-target="').concat(target,'"],').concat(selector,'[href="').concat(target,'"]'))),link=_selectorEngine.default.findOne(queries.join(","));link.classList.contains("dropdown-item")?(_selectorEngine.default.findOne(".dropdown-toggle",link.closest(".dropdown")).classList.add("active"),link.classList.add("active")):(link.classList.add("active"),_selectorEngine.default.parents(link,".nav, .list-group").forEach((listGroup=>{_selectorEngine.default.prev(listGroup,"".concat(".nav-link",", ").concat(".list-group-item")).forEach((item=>item.classList.add("active"))),_selectorEngine.default.prev(listGroup,".nav-item").forEach((navItem=>{_selectorEngine.default.children(navItem,".nav-link").forEach((item=>item.classList.add("active")))}))}))),_eventHandler.default.trigger(this._scrollElement,EVENT_ACTIVATE,{relatedTarget:target})}_clear(){_selectorEngine.default.find(this._selector).filter((node=>node.classList.contains("active"))).forEach((node=>node.classList.remove("active")))}static jQueryInterface(config){return this.each((function(){const data=ScrollSpy.getOrCreateInstance(this,config);if("string"==typeof config){if(void 0===data[config])throw new TypeError('No method named "'.concat(config,'"'));data[config]()}}))}}_eventHandler.default.on(window,EVENT_LOAD_DATA_API,(()=>{_selectorEngine.default.find('[data-bs-spy="scroll"]').forEach((spy=>new ScrollSpy(spy)))})),(0,_index.defineJQueryPlugin)(ScrollSpy);var _default=ScrollSpy;return _exports.default=_default,_exports.default}));

//# sourceMappingURL=scrollspy.min.js.map