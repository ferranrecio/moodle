{"version":3,"file":"scrollbar.min.js","sources":["../../../src/bootstrap/util/scrollbar.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): util/scrollBar.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport SelectorEngine from '../dom/selector-engine'\nimport Manipulator from '../dom/manipulator'\nimport { isElement } from './index'\n\nconst SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'\nconst SELECTOR_STICKY_CONTENT = '.sticky-top'\n\nclass ScrollBarHelper {\n  constructor() {\n    this._element = document.body\n  }\n\n  getWidth() {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n    const documentWidth = document.documentElement.clientWidth\n    return Math.abs(window.innerWidth - documentWidth)\n  }\n\n  hide() {\n    const width = this.getWidth()\n    this._disableOverFlow()\n    // give padding to element to balance the hidden scrollbar width\n    this._setElementAttributes(this._element, 'paddingRight', calculatedValue => calculatedValue + width)\n    // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth\n    this._setElementAttributes(SELECTOR_FIXED_CONTENT, 'paddingRight', calculatedValue => calculatedValue + width)\n    this._setElementAttributes(SELECTOR_STICKY_CONTENT, 'marginRight', calculatedValue => calculatedValue - width)\n  }\n\n  _disableOverFlow() {\n    this._saveInitialAttribute(this._element, 'overflow')\n    this._element.style.overflow = 'hidden'\n  }\n\n  _setElementAttributes(selector, styleProp, callback) {\n    const scrollbarWidth = this.getWidth()\n    const manipulationCallBack = element => {\n      if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {\n        return\n      }\n\n      this._saveInitialAttribute(element, styleProp)\n      const calculatedValue = window.getComputedStyle(element)[styleProp]\n      element.style[styleProp] = `${callback(Number.parseFloat(calculatedValue))}px`\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  reset() {\n    this._resetElementAttributes(this._element, 'overflow')\n    this._resetElementAttributes(this._element, 'paddingRight')\n    this._resetElementAttributes(SELECTOR_FIXED_CONTENT, 'paddingRight')\n    this._resetElementAttributes(SELECTOR_STICKY_CONTENT, 'marginRight')\n  }\n\n  _saveInitialAttribute(element, styleProp) {\n    const actualValue = element.style[styleProp]\n    if (actualValue) {\n      Manipulator.setDataAttribute(element, styleProp, actualValue)\n    }\n  }\n\n  _resetElementAttributes(selector, styleProp) {\n    const manipulationCallBack = element => {\n      const value = Manipulator.getDataAttribute(element, styleProp)\n      if (typeof value === 'undefined') {\n        element.style.removeProperty(styleProp)\n      } else {\n        Manipulator.removeDataAttribute(element, styleProp)\n        element.style[styleProp] = value\n      }\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  _applyManipulationCallback(selector, callBack) {\n    if (isElement(selector)) {\n      callBack(selector)\n    } else {\n      SelectorEngine.find(selector, this._element).forEach(callBack)\n    }\n  }\n\n  isOverflowing() {\n    return this.getWidth() > 0\n  }\n}\n\nexport default ScrollBarHelper\n"],"names":["constructor","_element","document","body","getWidth","documentWidth","documentElement","clientWidth","Math","abs","window","innerWidth","hide","width","this","_disableOverFlow","_setElementAttributes","calculatedValue","_saveInitialAttribute","style","overflow","selector","styleProp","callback","scrollbarWidth","_applyManipulationCallback","element","getComputedStyle","Number","parseFloat","reset","_resetElementAttributes","actualValue","setDataAttribute","value","Manipulator","getDataAttribute","removeProperty","removeDataAttribute","callBack","find","forEach","isOverflowing"],"mappings":"ycAeEA,mBACOC,SAAWC,SAASC,KAG3BC,iBAEQC,cAAgBH,SAASI,gBAAgBC,mBACxCC,KAAKC,IAAIC,OAAOC,WAAaN,eAGtCO,aACQC,MAAQC,KAAKV,gBACdW,wBAEAC,sBAAsBF,KAAKb,SAAU,gBAAgBgB,iBAAmBA,gBAAkBJ,aAE1FG,sBApBsB,oDAoBwB,gBAAgBC,iBAAmBA,gBAAkBJ,aACnGG,sBApBuB,cAoBwB,eAAeC,iBAAmBA,gBAAkBJ,QAG1GE,wBACOG,sBAAsBJ,KAAKb,SAAU,iBACrCA,SAASkB,MAAMC,SAAW,SAGjCJ,sBAAsBK,SAAUC,UAAWC,gBACnCC,eAAiBV,KAAKV,gBAWvBqB,2BAA2BJ,UAVHK,aACvBA,UAAYZ,KAAKb,UAAYS,OAAOC,WAAae,QAAQnB,YAAciB,2BAItEN,sBAAsBQ,QAASJ,iBAC9BL,gBAAkBP,OAAOiB,iBAAiBD,SAASJ,WACzDI,QAAQP,MAAMG,qBAAgBC,SAASK,OAAOC,WAAWZ,2BAM7Da,aACOC,wBAAwBjB,KAAKb,SAAU,iBACvC8B,wBAAwBjB,KAAKb,SAAU,qBACvC8B,wBA/CsB,oDA+C0B,qBAChDA,wBA/CuB,cA+C0B,eAGxDb,sBAAsBQ,QAASJ,iBACvBU,YAAcN,QAAQP,MAAMG,WAC9BU,kCACUC,iBAAiBP,QAASJ,UAAWU,aAIrDD,wBAAwBV,SAAUC,gBAW3BG,2BAA2BJ,UAVHK,gBACrBQ,MAAQC,qBAAYC,iBAAiBV,QAASJ,gBAC/B,IAAVY,MACTR,QAAQP,MAAMkB,eAAef,iCAEjBgB,oBAAoBZ,QAASJ,WACzCI,QAAQP,MAAMG,WAAaY,UAOjCT,2BAA2BJ,SAAUkB,WAC/B,oBAAUlB,UACZkB,SAASlB,kCAEMmB,KAAKnB,SAAUP,KAAKb,UAAUwC,QAAQF,UAIzDG,uBACS5B,KAAKV,WAAa"}