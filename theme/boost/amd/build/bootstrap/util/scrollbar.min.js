define("theme_boost/bootstrap/util/scrollbar",["exports","../dom/selector-engine","../dom/manipulator","./index"],(function(_exports,_selectorEngine,_manipulator,_index){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_selectorEngine=_interopRequireDefault(_selectorEngine),_manipulator=_interopRequireDefault(_manipulator);var _default=class{constructor(){this._element=document.body}getWidth(){const documentWidth=document.documentElement.clientWidth;return Math.abs(window.innerWidth-documentWidth)}hide(){const width=this.getWidth();this._disableOverFlow(),this._setElementAttributes(this._element,"paddingRight",(calculatedValue=>calculatedValue+width)),this._setElementAttributes(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top","paddingRight",(calculatedValue=>calculatedValue+width)),this._setElementAttributes(".sticky-top","marginRight",(calculatedValue=>calculatedValue-width))}_disableOverFlow(){this._saveInitialAttribute(this._element,"overflow"),this._element.style.overflow="hidden"}_setElementAttributes(selector,styleProp,callback){const scrollbarWidth=this.getWidth();this._applyManipulationCallback(selector,(element=>{if(element!==this._element&&window.innerWidth>element.clientWidth+scrollbarWidth)return;this._saveInitialAttribute(element,styleProp);const calculatedValue=window.getComputedStyle(element)[styleProp];element.style[styleProp]="".concat(callback(Number.parseFloat(calculatedValue)),"px")}))}reset(){this._resetElementAttributes(this._element,"overflow"),this._resetElementAttributes(this._element,"paddingRight"),this._resetElementAttributes(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top","paddingRight"),this._resetElementAttributes(".sticky-top","marginRight")}_saveInitialAttribute(element,styleProp){const actualValue=element.style[styleProp];actualValue&&_manipulator.default.setDataAttribute(element,styleProp,actualValue)}_resetElementAttributes(selector,styleProp){this._applyManipulationCallback(selector,(element=>{const value=_manipulator.default.getDataAttribute(element,styleProp);void 0===value?element.style.removeProperty(styleProp):(_manipulator.default.removeDataAttribute(element,styleProp),element.style[styleProp]=value)}))}_applyManipulationCallback(selector,callBack){(0,_index.isElement)(selector)?callBack(selector):_selectorEngine.default.find(selector,this._element).forEach(callBack)}isOverflowing(){return this.getWidth()>0}};return _exports.default=_default,_exports.default}));

//# sourceMappingURL=scrollbar.min.js.map