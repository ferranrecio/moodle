{"version":3,"file":"radioselect.min.js","sources":["../../../src/local/modal/radioselect.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A radio buttons selector modal.\n *\n * @module     core/local/modal/radioselect\n * @copyright  2023 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Modal from 'core/modal';\nimport Notification from 'core/notification';\nimport {getFirst} from 'core/normalise';\n\n/**\n * The Radio select modal.\n *\n * @class\n * @extends module:core/modal\n */\nexport default class extends Modal {\n    constructor(root) {\n        // Modal is still using jQuery internally.\n        super(root);\n\n        const footer = getFirst(this.getFooter());\n        if (footer.querySelector(this.getActionSelector('save'))) {\n            Notification.exception({message: 'No save button found'});\n        }\n        if (footer.querySelector(this.getActionSelector('cancel'))) {\n            Notification.exception({message: 'No cancel button found'});\n        }\n    }\n\n    /**\n     * Register all event listeners.\n     */\n    registerEventListeners() {\n        // Call the parent registration.\n        super.registerEventListeners();\n\n        // Register to close on save/cancel.\n        this.registerCloseOnSave();\n        this.registerCloseOnCancel();\n    }\n\n    /**\n     * Override parent implementation to prevent changing the footer content.\n     */\n    setFooter() {\n        Notification.exception({message: 'Can not change the footer of a radio select modal'});\n        return;\n    }\n\n    /**\n     * Set the title of the save button.\n     *\n     * @param {String|Promise} value The button text, or a Promise which will resolve it\n     * @returns{Promise}\n     */\n    setSaveButtonText(value) {\n        return this.setButtonText('save', value);\n    }\n}\n"],"names":["Modal","constructor","root","footer","this","getFooter","querySelector","getActionSelector","exception","message","registerEventListeners","registerCloseOnSave","registerCloseOnCancel","setFooter","setSaveButtonText","value","setButtonText"],"mappings":";;;;;;;sMAiC6BA,eACzBC,YAAYC,YAEFA,YAEAC,QAAS,uBAASC,KAAKC,aACzBF,OAAOG,cAAcF,KAAKG,kBAAkB,gCAC/BC,UAAU,CAACC,QAAS,yBAEjCN,OAAOG,cAAcF,KAAKG,kBAAkB,kCAC/BC,UAAU,CAACC,QAAS,2BAOzCC,+BAEUA,8BAGDC,2BACAC,wBAMTC,kCACiBL,UAAU,CAACC,QAAS,sDAUrCK,kBAAkBC,cACPX,KAAKY,cAAc,OAAQD"}