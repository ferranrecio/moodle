{"version":3,"file":"weightedqueue.min.js","sources":["../../../src/local/reactive/weightedqueue.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {debounce} from 'core/utils';\n\n/**\n * A priority weighted execution queue.\n *\n * This class is used to sort the template components by weight\n * and prevent unnecessary template rendering.\n *\n * @module     core/local/reactive/weightedqueue\n * @copyright  2024 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nexport default class {\n\n    /**\n     * The class constructor.\n     */\n    constructor() {\n        this.queue = [];\n\n        /**\n         * Debounced version of the execute method.\n         *\n         * @type {Function}\n         * @public\n         */\n        this.executeDebounce = debounce(\n            this.execute.bind(this),\n            100\n        );\n    }\n\n    /**\n     * Add a function to the queue.\n     *\n     * The weight is used to sort the functions by priority, zero will execute first.\n     *\n     * @param {Function} functionToExecute\n     * @param {Number} [weight] The weight of the function (zero by default).\n     */\n    add(functionToExecute, weight = 0) {\n        this.queue.push({\n            functionToExecute,\n            weight: weight,\n        });\n    }\n\n    /**\n     * Get the queue by weight.\n     *\n     * The method is used to generate the execution order. The first\n     * array is the weight level, the second array is the functions to\n     * execute on that level.\n     *\n     * @private\n     * @returns {Array<Array<Function>>}\n     */\n    _getWeightedQueue() {\n        const result = this.queue.reduce(\n            (acc, item) => {\n                if (!acc[item.weight]) {\n                    acc[item.weight] = [];\n                }\n                acc[item.weight].push(item.functionToExecute);\n                return acc;\n            },\n            {}\n        );\n        const keys = Object.keys(result).sort((a, b) => a - b);\n        return keys.map(key => result[key]);\n    }\n\n    /**\n     * Execute the queue.\n     *\n     * This method will execute all the functions by weight, however,\n     * it won't allow to execute the next level until the previous one\n     * has finished.\n     */\n    execute() {\n        const queue = this._getWeightedQueue();\n        this.clear();\n\n        const executeTopLevel = async(pendingQueue) => {\n            if (pendingQueue.length === 0) {\n                return;\n            }\n\n            const functions = pendingQueue.shift();\n            const pendingPromises = [];\n\n            for (const func of functions) {\n                const funcResult = func();\n                if (funcResult instanceof Promise) {\n                    pendingPromises.push(funcResult);\n                }\n            }\n\n            await Promise.all(pendingPromises);\n            executeTopLevel(pendingQueue);\n        };\n\n        executeTopLevel(queue);\n    }\n\n    /**\n     * Clear the queue.\n     */\n    clear() {\n        this.queue = [];\n    }\n}\n"],"names":["constructor","queue","executeDebounce","this","execute","bind","add","functionToExecute","weight","push","_getWeightedQueue","result","reduce","acc","item","Object","keys","sort","a","b","map","key","clear","executeTopLevel","async","pendingQueue","length","functions","shift","pendingPromises","func","funcResult","Promise","all"],"mappings":";;;;;;;;;;;MAgCIA,mBACSC,MAAQ,QAQRC,iBAAkB,mBACnBC,KAAKC,QAAQC,KAAKF,MAClB,KAYRG,IAAIC,uBAAmBC,8DAAS,OACvBP,MAAMQ,KAAK,CACZF,kBAAAA,kBACAC,OAAQA,SAchBE,0BACUC,OAASR,KAAKF,MAAMW,QACtB,CAACC,IAAKC,QACGD,IAAIC,KAAKN,UACVK,IAAIC,KAAKN,QAAU,IAEvBK,IAAIC,KAAKN,QAAQC,KAAKK,KAAKP,mBACpBM,MAEX,WAESE,OAAOC,KAAKL,QAAQM,MAAK,CAACC,EAAGC,IAAMD,EAAIC,IACxCC,KAAIC,KAAOV,OAAOU,OAUlCjB,gBACUH,MAAQE,KAAKO,yBACdY,cAECC,gBAAkBC,MAAAA,kBACQ,IAAxBC,aAAaC,oBAIXC,UAAYF,aAAaG,QACzBC,gBAAkB,OAEnB,MAAMC,QAAQH,UAAW,OACpBI,WAAaD,OACfC,sBAAsBC,SACtBH,gBAAgBpB,KAAKsB,kBAIvBC,QAAQC,IAAIJ,iBAClBN,gBAAgBE,eAGpBF,gBAAgBtB,OAMpBqB,aACSrB,MAAQ"}