{"version":3,"sources":["../../../src/local/reactive/dragdrop.js"],"names":["activedropdata","Map","DragDrop","parent","name","classes","BODYDRAGGING","DRAGGABLEREADY","DROPREADY","DRAGOVER","DRAGGING","DROPUP","DROPDOWN","DROPZONE","entercount","dropzonevisible","validateDropData","element","classList","add","addEventListener","_dragEnter","_dragLeave","_dragOver","_drop","getDraggableData","setAttribute","_dragStart","_dragEnd","event","dropdata","stopPropagation","set","reactive","document","body","dataTransfer","setDragImage","_callParentMethod","get","delete","remove","_processEvent","_getDropData","preventDefault","methodname","_containsFiles","types","i","length","BaseComponent"],"mappings":"oLA0BA,uD,+nDAMIA,CAAAA,CAAc,CAAG,GAAIC,CAAAA,G,CAEJC,C,8HAOVC,C,CAAQ,mCAEX,KAAKC,IAAL,qBAAeD,CAAM,CAACC,IAAtB,gBAA8B,QAA9B,cAEA,KAAKC,OAAL,CAAe,CAEXC,YAAY,CAAE,UAFH,CAKXC,cAAc,kBAAEJ,CAAF,WAAEA,CAAF,kBAAEA,CAAM,CAAEE,OAAV,qBAAE,EAAiBE,cAAnB,gBAAqC,WALxC,CAMXC,SAAS,kBAAEL,CAAF,WAAEA,CAAF,kBAAEA,CAAM,CAAEE,OAAV,qBAAE,EAAiBG,SAAnB,gBAAgC,WAN9B,CASXC,QAAQ,kBAAEN,CAAF,WAAEA,CAAF,kBAAEA,CAAM,CAAEE,OAAV,qBAAE,EAAiBI,QAAnB,gBAA+B,UAT5B,CAWXC,QAAQ,kBAAEP,CAAF,WAAEA,CAAF,kBAAEA,CAAM,CAAEE,OAAV,qBAAE,EAAiBK,QAAnB,gBAA+B,UAX5B,CAcXC,MAAM,kBAAER,CAAF,WAAEA,CAAF,kBAAEA,CAAM,CAAEE,OAAV,qBAAE,EAAiBM,MAAnB,gBAA6B,SAdxB,CAeXC,QAAQ,kBAAET,CAAF,WAAEA,CAAF,kBAAEA,CAAM,CAAEE,OAAV,qBAAE,EAAiBO,QAAnB,gBAA+B,WAf5B,CAgBXC,QAAQ,kBAAEV,CAAF,WAAEA,CAAF,kBAAEA,CAAM,CAAEE,OAAV,qBAAE,EAAiBQ,QAAnB,gBAA+B,WAhB5B,CAAf,CAoBA,KAAKV,MAAL,CAAcA,CAAd,CAIA,KAAKW,UAAL,CAAkB,CAAlB,CAGA,KAAKC,eAAL,GAEH,C,+CAOY,CACT,MAAO,MAAKV,OACf,C,+CAUY,CAET,GAA4C,UAAxC,QAAO,MAAKF,MAAL,CAAYa,gBAAvB,CAAwD,CACpD,KAAKC,OAAL,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,KAAKd,OAAL,CAAaG,SAAxC,EACA,KAAKY,gBAAL,CAAsB,KAAKH,OAA3B,CAAoC,WAApC,CAAiD,KAAKI,UAAtD,EACA,KAAKD,gBAAL,CAAsB,KAAKH,OAA3B,CAAoC,WAApC,CAAiD,KAAKK,UAAtD,EACA,KAAKF,gBAAL,CAAsB,KAAKH,OAA3B,CAAoC,UAApC,CAAgD,KAAKM,SAArD,EACA,KAAKH,gBAAL,CAAsB,KAAKH,OAA3B,CAAoC,MAApC,CAA4C,KAAKO,KAAjD,CACH,CAGD,GAA4C,UAAxC,QAAO,MAAKrB,MAAL,CAAYsB,gBAAvB,CAAwD,CACpD,KAAKR,OAAL,CAAaS,YAAb,CAA0B,WAA1B,KACA,KAAKN,gBAAL,CAAsB,KAAKH,OAA3B,CAAoC,WAApC,CAAiD,KAAKU,UAAtD,EACA,KAAKP,gBAAL,CAAsB,KAAKH,OAA3B,CAAoC,SAApC,CAA+C,KAAKW,QAApD,EACA,KAAKX,OAAL,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,KAAKd,OAAL,CAAaE,cAAxC,CACH,CACJ,C,8CAUUsB,C,CAAO,CACd,GAAMC,CAAAA,CAAQ,CAAG,KAAK3B,MAAL,CAAYsB,gBAAZ,EAAjB,CACA,GAAI,CAACK,CAAL,CAAe,CACX,MACH,CAGDD,CAAK,CAACE,eAAN,GAGA/B,CAAc,CAACgC,GAAf,CAAmB,KAAKC,QAAxB,CAAkCH,CAAlC,EAGAI,QAAQ,CAACC,IAAT,CAAcjB,SAAd,CAAwBC,GAAxB,CAA4B,KAAKd,OAAL,CAAaC,YAAzC,EACA,KAAKW,OAAL,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,KAAKd,OAAL,CAAaK,QAAxC,EAIAmB,CAAK,CAACO,YAAN,CAAmBC,YAAnB,CAAgC,KAAKpB,OAArC,CAA8C,CAA9C,CAAiD,CAAjD,EAEA,KAAKqB,iBAAL,CAAuB,WAAvB,CAAoCR,CAApC,CACH,C,2CAOU,CACP,GAAMA,CAAAA,CAAQ,CAAG9B,CAAc,CAACuC,GAAf,CAAmB,KAAKN,QAAxB,CAAjB,CACA,GAAI,CAACH,CAAL,CAAe,CACX,MACH,CAGD9B,CAAc,CAACwC,MAAf,CAAsB,KAAKP,QAA3B,EAGAC,QAAQ,CAACC,IAAT,CAAcjB,SAAd,CAAwBuB,MAAxB,CAA+B,KAAKpC,OAAL,CAAaC,YAA5C,EACA,KAAKW,OAAL,CAAaC,SAAb,CAAuBuB,MAAvB,CAA8B,KAAKpC,OAAL,CAAaK,QAA3C,EAEA,KAAK4B,iBAAL,CAAuB,SAAvB,CAAkCR,CAAlC,CACH,C,8CAWUD,C,CAAO,CACd,GAAMC,CAAAA,CAAQ,CAAG,KAAKY,aAAL,CAAmBb,CAAnB,CAAjB,CACA,GAAIC,CAAJ,CAAc,CACV,KAAKhB,UAAL,GACA,KAAKG,OAAL,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,KAAKd,OAAL,CAAaI,QAAxC,EACA,GAAuB,CAAnB,OAAKK,UAAL,EAAwB,CAAC,KAAKC,eAAlC,CAAmD,CAC/C,KAAKA,eAAL,IACA,KAAKE,OAAL,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,KAAKd,OAAL,CAAaI,QAAxC,EACA,KAAK6B,iBAAL,CAAuB,cAAvB,CAAuCR,CAAvC,CACH,CACJ,CACJ,C,4CAWSD,C,CAAO,CACb,GAAMC,CAAAA,CAAQ,CAAG,KAAKY,aAAL,CAAmBb,CAAnB,CAAjB,CACA,GAAIC,CAAQ,EAAI,CAAC,KAAKf,eAAtB,CAAuC,CACnC,KAAKA,eAAL,IACA,KAAKE,OAAL,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,KAAKd,OAAL,CAAaI,QAAxC,EACA,KAAK6B,iBAAL,CAAuB,cAAvB,CAAuCR,CAAvC,CACH,CACJ,C,8CAWUD,C,CAAO,CACd,GAAMC,CAAAA,CAAQ,CAAG,KAAKY,aAAL,CAAmBb,CAAnB,CAAjB,CACA,GAAIC,CAAJ,CAAc,CACV,KAAKhB,UAAL,GACA,GAAuB,CAAnB,OAAKA,UAAL,EAAwB,KAAKC,eAAjC,CAAkD,CAC9C,KAAKA,eAAL,IACA,KAAKE,OAAL,CAAaC,SAAb,CAAuBuB,MAAvB,CAA8B,KAAKpC,OAAL,CAAaI,QAA3C,EACA,KAAK6B,iBAAL,CAAuB,cAAvB,CAAuCR,CAAvC,CACH,CACJ,CACJ,C,oCASKD,C,CAAO,CACT,GAAMC,CAAAA,CAAQ,CAAG,KAAKY,aAAL,CAAmBb,CAAnB,CAAjB,CACA,GAAIC,CAAJ,CAAc,CACV,KAAKhB,UAAL,CAAkB,CAAlB,CACA,GAAI,KAAKC,eAAT,CAA0B,CACtB,KAAKA,eAAL,IACA,KAAKuB,iBAAL,CAAuB,cAAvB,CAAuCR,CAAvC,CACH,CACD,KAAKb,OAAL,CAAaC,SAAb,CAAuBuB,MAAvB,CAA8B,KAAKpC,OAAL,CAAaI,QAA3C,EACA,KAAK6B,iBAAL,CAAuB,MAAvB,CAA+BR,CAA/B,CACH,CACJ,C,oDAQaD,C,CAAO,CACjB,GAAMC,CAAAA,CAAQ,CAAG,KAAKa,YAAL,CAAkBd,CAAlB,CAAjB,CACA,GAAI,CAACC,CAAL,CAAe,CACX,MAAO,KACV,CACD,GAAI,KAAK3B,MAAL,CAAYa,gBAAZ,CAA6Bc,CAA7B,CAAJ,CAA4C,CAGxCD,CAAK,CAACe,cAAN,GACAf,CAAK,CAACE,eAAN,GACA,MAAOD,CAAAA,CACV,CACD,MAAO,KACV,C,4DAQiBe,C,CAAYf,C,CAAU,CACpC,GAAuC,UAAnC,QAAO,MAAK3B,MAAL,CAAY0C,CAAZ,CAAX,CAAmD,CAC/C,KAAK1C,MAAL,CAAY0C,CAAZ,EAAwBf,CAAxB,CACH,CACJ,C,kDAaYD,C,CAAO,CAChB,GAAI,KAAKiB,cAAL,CAAoBjB,CAApB,CAAJ,CAAgC,CAC5B,MACH,CACD,MAAO7B,CAAAA,CAAc,CAACuC,GAAf,CAAmB,KAAKN,QAAxB,CACV,C,sDAWcJ,C,CAAO,CAClB,GAAIA,CAAK,CAACO,YAAN,CAAmBW,KAAvB,CAA8B,CAC1B,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGnB,CAAK,CAACO,YAAN,CAAmBW,KAAnB,CAAyBE,MAA7C,CAAqDD,CAAC,EAAtD,CAA0D,CACtD,GAAmC,OAA/B,EAAAnB,CAAK,CAACO,YAAN,CAAmBW,KAAnB,CAAyBC,CAAzB,CAAJ,CAA4C,CACxC,QACH,CACJ,CACJ,CACD,QACH,C,cAxRiCE,S","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course editor drag and drop components.\n *\n * This component is used to delegate generic grag and drop handling in the course pages.\n *\n * @module     core/local/reactive/dragdrop\n * @package    core_course\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport BaseComponent from 'core/local/reactive/basecomponent';\n\n// Map with the dragged element generate by an specific reactive applications.\n// Potentially, any component can generate a draggable element to interact with other\n// page elements. However, the dragged data is specific and could only interact with\n// components of the same reactive instance.\nlet activedropdata = new Map();\n\nexport default class DragDrop extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     *\n     * @param {BaseComponent} parent the parent component.\n     */\n    create(parent) {\n        // Optional component name for debugging.\n        this.name = `${parent.name ?? 'unkown'}_dragdrop`;\n        // Default drag and drop classes.\n        this.classes = {\n            // This class indicate a dragging action is active at a page level.\n            BODYDRAGGING: 'dragging',\n\n            // Added when draggable and drop are ready.\n            DRAGGABLEREADY: parent?.classes?.DRAGGABLEREADY ?? 'draggable',\n            DROPREADY: parent?.classes?.DROPREADY ?? 'dropready',\n\n            // When a valid drag element is over the element.\n            DRAGOVER: parent?.classes?.DRAGOVER ?? 'dragover',\n            // When a the component is dragged.\n            DRAGGING: parent?.classes?.DRAGGING ?? 'dragging',\n\n            // Dropzones classes names.\n            DROPUP: parent?.classes?.DROPUP ?? 'drop-up',\n            DROPDOWN: parent?.classes?.DROPDOWN ?? 'drop-down',\n            DROPZONE: parent?.classes?.DROPZONE ?? 'drop-zone',\n        };\n\n        // Keep parent to execute drap and drop handlers.\n        this.parent = parent;\n\n        // Sub HTML elements will trigger extra dragEnter and dragOver all the time.\n        // To prevent that from affecting dropzones, we need to count the enters and leaves.\n        this.entercount = 0;\n\n        // Stores if the droparea is shown or not.\n        this.dropzonevisible = false;\n\n    }\n\n    /**\n     * Return the component drag and drop CSS classes.\n     *\n     * @returns {Object} the dragdrop css classes\n     */\n    getClasses() {\n        return this.classes;\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * This method will add all the necessary event listeners to the component depending on the\n     * parent methods.\n     *  - Add drop events to the element if the parent component has validateDropData method.\n     *  - Configure the elements draggable if the parent component has getDraggableData method.\n     */\n    stateReady() {\n        // Add drop events to the element if the parent component has dropable types.\n        if (typeof this.parent.validateDropData === 'function') {\n            this.element.classList.add(this.classes.DROPREADY);\n            this.addEventListener(this.element, 'dragenter', this._dragEnter);\n            this.addEventListener(this.element, 'dragleave', this._dragLeave);\n            this.addEventListener(this.element, 'dragover', this._dragOver);\n            this.addEventListener(this.element, 'drop', this._drop);\n        }\n\n        // Configure the elements draggable if the parent component has dragable data.\n        if (typeof this.parent.getDraggableData === 'function') {\n            this.element.setAttribute('draggable', true);\n            this.addEventListener(this.element, 'dragstart', this._dragStart);\n            this.addEventListener(this.element, 'dragend', this._dragEnd);\n            this.element.classList.add(this.classes.DRAGGABLEREADY);\n        }\n    }\n\n    /**\n     * Drag start event handler.\n     *\n     * This method will generate the current dropable data. This data is the one used to determine\n     * if a droparea accepts the dropping or not.\n     *\n     * @param {Event} event the event.\n     */\n    _dragStart(event) {\n        const dropdata = this.parent.getDraggableData();\n        if (!dropdata) {\n            return;\n        }\n\n        // If the drag event is accepted we prevent any other draggable element from interfiere.\n        event.stopPropagation();\n\n        // Save the drop data of the current reactive intance.\n        activedropdata.set(this.reactive, dropdata);\n\n        // Add some CSS classes to indicate the state.\n        document.body.classList.add(this.classes.BODYDRAGGING);\n        this.element.classList.add(this.classes.DRAGGING);\n\n        // Force the drag image to the current element. This makes the UX more consistent in case the\n        // user dragged an internal element like a link or some other element.\n        event.dataTransfer.setDragImage(this.element, 0, 0);\n\n        this._callParentMethod('dragStart', dropdata);\n    }\n\n    /**\n     * Drag end event handler.\n     *\n     * @param {Event} event the event.\n     */\n    _dragEnd() {\n        const dropdata = activedropdata.get(this.reactive);\n        if (!dropdata) {\n            return;\n        }\n\n        // Remove the current dropdata.\n        activedropdata.delete(this.reactive);\n\n        // Remove the dragging classes.\n        document.body.classList.remove(this.classes.BODYDRAGGING);\n        this.element.classList.remove(this.classes.DRAGGING);\n\n        this._callParentMethod('dragEnd', dropdata);\n    }\n\n    /**\n     * Drag enter event handler.\n     *\n     * The JS drag&drop API triggers several dragenter events on the same element because it bubbles the\n     * child events as well. To prevent this form affecting the dropzones display, this methods use\n     * \"entercount\" to determine if it's one extra child event or a valid one.\n     *\n     * @param {Event} event the event.\n     */\n    _dragEnter(event) {\n        const dropdata = this._processEvent(event);\n        if (dropdata) {\n            this.entercount++;\n            this.element.classList.add(this.classes.DRAGOVER);\n            if (this.entercount == 1 && !this.dropzonevisible) {\n                this.dropzonevisible = true;\n                this.element.classList.add(this.classes.DRAGOVER);\n                this._callParentMethod('showDropZone', dropdata);\n            }\n        }\n    }\n\n    /**\n     * Drag over event handler.\n     *\n     * We only use dragover event when a draggable action starts inside a valid dropzone. In those cases\n     * the API won't trigger any dragEnter because the dragged alement was already there. We use the\n     * dropzonevisible to determine if the component needs to display the dropzones or not.\n     *\n     * @param {Event} event the event.\n     */\n    _dragOver(event) {\n        const dropdata = this._processEvent(event);\n        if (dropdata && !this.dropzonevisible) {\n            this.dropzonevisible = true;\n            this.element.classList.add(this.classes.DRAGOVER);\n            this._callParentMethod('showDropZone', dropdata);\n        }\n    }\n\n    /**\n     * Drag over leave handler.\n     *\n     * The JS drag&drop API triggers several dragleave events on the same element because it bubbles the\n     * child events as well. To prevent this form affecting the dropzones display, this methods use\n     * \"entercount\" to determine if it's one extra child event or a valid one.\n     *\n     * @param {Event} event the event.\n     */\n    _dragLeave(event) {\n        const dropdata = this._processEvent(event);\n        if (dropdata) {\n            this.entercount--;\n            if (this.entercount == 0 && this.dropzonevisible) {\n                this.dropzonevisible = false;\n                this.element.classList.remove(this.classes.DRAGOVER);\n                this._callParentMethod('hideDropZone', dropdata);\n            }\n        }\n    }\n\n    /**\n     * Drop event handler.\n     *\n     * This method will call both hideDropZones and drop methods on the parent component.\n     *\n     * @param {Event} event the event.\n     */\n    _drop(event) {\n        const dropdata = this._processEvent(event);\n        if (dropdata) {\n            this.entercount = 0;\n            if (this.dropzonevisible) {\n                this.dropzonevisible = false;\n                this._callParentMethod('hideDropZone', dropdata);\n            }\n            this.element.classList.remove(this.classes.DRAGOVER);\n            this._callParentMethod('drop', dropdata);\n        }\n    }\n\n    /**\n     * Process a drag and drop event and delegate logic to the parent component.\n     *\n     * @param {Event} event the drag and drop event\n     * @return {Object|false} the dropdata or null if the event should not be processed\n     */\n    _processEvent(event) {\n        const dropdata = this._getDropData(event);\n        if (!dropdata) {\n            return null;\n        }\n        if (this.parent.validateDropData(dropdata)) {\n            // All accepted drag&drop event must prevent bubbling and defaults, otherwise\n            // parent dragdrop instances could capture it by mistake.\n            event.preventDefault();\n            event.stopPropagation();\n            return dropdata;\n        }\n        return null;\n    }\n\n    /**\n     * Convenient method for calling parent component functions if present.\n     *\n     * @param {string} methodname the name of the method\n     * @param {Object} dropdata the current drop data object\n     */\n    _callParentMethod(methodname, dropdata) {\n        if (typeof this.parent[methodname] === 'function') {\n            this.parent[methodname](dropdata);\n        }\n    }\n\n    /**\n     * Get the current dropdata for a specific event.\n     *\n     * The browser can generate drag&drop events related to several user interactions:\n     *  - Drag a page elements: this case is registered in the activedropdata map\n     *  - Drag some HTML selections: ignored for now\n     *  - Drag a file over the browser: file drag may appear in the future but for now they are ignored.\n     *\n     * @param {Event} event the original event.\n     * @returns {Object|undefined} with the dragged data (or undefined if none)\n     */\n    _getDropData(event) {\n        if (this._containsFiles(event)) {\n            return undefined;\n        }\n        return activedropdata.get(this.reactive);\n    }\n\n    /**\n     * Check if the dragged event contains files.\n     *\n     * Files dragging does not generate drop data because they came from outsite the page and the component\n     * must check it before validating the event.\n     *\n     * @param {Event} event the original event.\n     * @returns {boolean} if the drag dataTransfers contains files.\n     */\n    _containsFiles(event) {\n        if (event.dataTransfer.types) {\n            for (var i = 0; i < event.dataTransfer.types.length; i++) {\n                if (event.dataTransfer.types[i] == \"Files\") {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n"],"file":"dragdrop.min.js"}