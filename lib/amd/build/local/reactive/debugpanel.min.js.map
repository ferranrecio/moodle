{"version":3,"sources":["../../../src/local/reactive/debugpanel.js"],"names":["init","target","selectors","element","document","getElementById","debug","remove","GlobalDebugPanel","reactive","initsubpanel","DebugInstanceSubpanel","name","LOADERS","SUBPANEL","LOG","state","reactives","forEach","instance","_createLoader","getElement","innerHTML","loaders","btn","createElement","id","dataset","appendChild","addEventListener","_openPanel","data","renderComponent","log","error","BaseComponent","NAME","CLOSE","READMODE","HIGHLIGHT","STATE","CLEAN","PIN","controller","M","draggable","relativeDrag","dragdrop","DragDrop","highlight","_toggleButtonText","_toggleEditMode","_cleanAreas","_refreshState","_togglePin","unregister","watch","handler","_refreshLog","_refreshReadOnly","list","lastChanges","logContent","join","value","scrollTop","scrollHeight","JSON","stringify","readonly","readOnly","alt","dropdata","event","style","top","newTop","left","newLeft","setDraggable","_unpin","_pin","window","pageYOffset","documentElement","pageCenter","innerWidth","position","resize","overflow","height","width","Object","assign","prop","removeProperty"],"mappings":"2LAwBA,uD,6oFAQoB,QAAPA,CAAAA,IAAO,CAACC,CAAD,CAASC,CAAT,CAAuB,CACvC,GAAMC,CAAAA,CAAO,CAAGC,QAAQ,CAACC,cAAT,CAAwBJ,CAAxB,CAAhB,CAEA,GAAIK,gBAAJ,CAAyB,CACrBH,CAAO,CAACI,MAAR,GACA,MACH,CAED,GAAIC,CAAAA,CAAJ,CAAqB,CACjBL,OAAO,CAAPA,CADiB,CAEjBM,QAAQ,CAAEH,OAFO,CAGjBJ,SAAS,CAATA,CAHiB,CAArB,CAKH,C,gBAQ2B,QAAfQ,CAAAA,YAAe,CAACT,CAAD,CAASC,CAAT,CAAuB,CAC/C,GAAMC,CAAAA,CAAO,CAAGC,QAAQ,CAACC,cAAT,CAAwBJ,CAAxB,CAAhB,CAEA,GAAIK,gBAAJ,CAAyB,CACrBH,CAAO,CAACI,MAAR,GACA,MACH,CAED,GAAII,CAAAA,CAAJ,CAA0B,CACtBR,OAAO,CAAPA,CADsB,CAEtBM,QAAQ,CAAEH,OAFY,CAGtBJ,SAAS,CAATA,CAHsB,CAA1B,CAKH,C,IAQKM,CAAAA,C,+HAKO,CAEL,KAAKI,IAAL,CAAY,kBAAZ,CAEA,KAAKV,SAAL,CAAiB,CACbW,OAAO,uBADM,CAEbC,QAAQ,wBAFK,CAGbC,GAAG,mBAHU,CAKpB,C,8CAOUC,C,CAAO,YAEdA,CAAK,CAACC,SAAN,CAAgBC,OAAhB,CACI,SAAAC,CAAQ,CAAI,CACR,CAAI,CAACC,aAAL,CAAmBD,CAAnB,CACH,CAHL,EAMA,KAAKE,UAAL,CAAgB,KAAKnB,SAAL,CAAeY,QAA/B,EAAyCQ,SAAzC,CAAqD,EACxD,C,oDAEaH,C,CAAU,YACdI,CAAO,CAAG,KAAKF,UAAL,CAAgB,KAAKnB,SAAL,CAAeW,OAA/B,CADI,CAEdW,CAAG,CAAGpB,QAAQ,CAACqB,aAAT,CAAuB,QAAvB,CAFQ,CAGpBD,CAAG,CAACF,SAAJ,CAAgBH,CAAQ,CAACO,EAAzB,CACAF,CAAG,CAACG,OAAJ,CAAYD,EAAZ,CAAiBP,CAAQ,CAACO,EAA1B,CACAH,CAAO,CAACK,WAAR,CAAoBJ,CAApB,EAEA,KAAKK,gBAAL,CAAsBL,CAAtB,CAA2B,OAA3B,CAAoC,iBAAM,CAAA,CAAI,CAACM,UAAL,CAAgBN,CAAhB,CAAqBL,CAArB,CAAN,CAApC,CACH,C,gFAEgBK,C,CAAKL,C,oGAERlB,C,CAAS,KAAKoB,UAAL,CAAgB,KAAKnB,SAAL,CAAeY,QAA/B,C,CACTiB,C,MAAWZ,C,iBACX,MAAKa,eAAL,CAAqB/B,CAArB,CAA6B,wCAA7B,CAAuE8B,CAAvE,C,2DAENE,UAAIC,KAAJ,CAAU,qCAAV,E,iJAhDmBC,e,EA4DzBxB,C,+HAKO,CAEL,KAAKC,IAAL,CAAY,uBAAZ,CAEA,KAAKV,SAAL,CAAiB,CACbkC,IAAI,oBADS,CAEbC,KAAK,qBAFQ,CAGbC,QAAQ,wBAHK,CAIbC,SAAS,yBAJI,CAKbxB,GAAG,mBALU,CAMbyB,KAAK,qBANQ,CAObC,KAAK,qBAPQ,CAQbC,GAAG,mBARU,CAAjB,CAUA,KAAKhB,EAAL,CAAU,KAAKvB,OAAL,CAAawB,OAAb,CAAqBD,EAA/B,CACA,KAAKiB,UAAL,CAAkBC,CAAC,CAACnC,QAAF,CAAW,KAAKiB,EAAhB,CAAlB,CAGA,KAAKmB,SAAL,IAEA,KAAKC,YAAL,GACH,C,+CAMY,YAET,KAAKC,QAAL,CAAgB,GAAIC,WAAJ,CAAa,IAAb,CAAhB,CAGA,KAAKnB,gBAAL,CACI,KAAKR,UAAL,CAAgB,KAAKnB,SAAL,CAAemC,KAA/B,CADJ,CAEI,OAFJ,CAGI,KAAK9B,MAHT,EAMA,GAAI,KAAKoC,UAAL,CAAgBM,SAApB,CAA+B,CAC3B,KAAKC,iBAAL,CAAuB,KAAK7B,UAAL,CAAgB,KAAKnB,SAAL,CAAeqC,SAA/B,CAAvB,CACH,CACD,KAAKV,gBAAL,CACI,KAAKR,UAAL,CAAgB,KAAKnB,SAAL,CAAeqC,SAA/B,CADJ,CAEI,OAFJ,CAGI,UAAM,CACF,CAAI,CAACI,UAAL,CAAgBM,SAAhB,CAA4B,CAAC,CAAI,CAACN,UAAL,CAAgBM,SAA7C,CACA,CAAI,CAACC,iBAAL,CAAuB,CAAI,CAAC7B,UAAL,CAAgB,CAAI,CAACnB,SAAL,CAAeqC,SAA/B,CAAvB,CACH,CANL,EASA,KAAKV,gBAAL,CACI,KAAKR,UAAL,CAAgB,KAAKnB,SAAL,CAAeoC,QAA/B,CADJ,CAEI,OAFJ,CAGI,KAAKa,eAHT,EAMA,KAAKtB,gBAAL,CACI,KAAKR,UAAL,CAAgB,KAAKnB,SAAL,CAAeuC,KAA/B,CADJ,CAEI,OAFJ,CAGI,KAAKW,WAHT,EAMA,KAAKC,aAAL,GAEA,KAAKxB,gBAAL,CACI,KAAKR,UAAL,CAAgB,KAAKnB,SAAL,CAAewC,GAA/B,CADJ,CAEI,OAFJ,CAGI,KAAKY,UAHT,CAKH,C,yCAKS,CACN,GAAI,KAAKP,QAAL,SAAJ,CAAiC,CAC7B,KAAKA,QAAL,CAAcQ,UAAd,EACH,CACJ,C,iDAOa,CACV,MAAO,CACH,CAACC,KAAK,qBAAe,KAAK9B,EAApB,yBAAN,CAAqD+B,OAAO,CAAE,KAAKC,WAAnE,CADG,CAEH,CAACF,KAAK,qBAAe,KAAK9B,EAApB,sBAAN,CAAkD+B,OAAO,CAAE,KAAKJ,aAAhE,CAFG,CAGH,CAACG,KAAK,qBAAe,KAAK9B,EAApB,sBAAN,CAAkD+B,OAAO,CAAE,KAAKE,gBAAhE,CAHG,CAKV,C,kDAEsB,OAAVxD,CAAU,GAAVA,OAAU,CACbyD,CAAI,kBAAGzD,CAAH,WAAGA,CAAH,QAAGA,CAAO,CAAE0D,WAAZ,gBAA2B,EADlB,CAGbC,CAAU,CAAGF,CAAI,CAACG,IAAL,CAAU,IAAV,CAHA,CAKb9D,CAAM,CAAG,KAAKoB,UAAL,CAAgB,KAAKnB,SAAL,CAAea,GAA/B,CALI,CAMnBd,CAAM,CAAC+D,KAAP,kCAAyCF,CAAzC,EACA7D,CAAM,CAACgE,SAAP,CAAmBhE,CAAM,CAACiE,YAC7B,C,iDAEa,CACV,GAAIjE,CAAAA,CAAM,CAAG,KAAKoB,UAAL,CAAgB,KAAKnB,SAAL,CAAea,GAA/B,CAAb,CACAd,CAAM,CAAC+D,KAAP,CAAe,EAAf,CAEA,KAAKX,aAAL,EACH,C,qDAEe,CACZ,GAAMpD,CAAAA,CAAM,CAAG,KAAKoB,UAAL,CAAgB,KAAKnB,SAAL,CAAesC,KAA/B,CAAf,CACAvC,CAAM,CAAC+D,KAAP,CAAeG,IAAI,CAACC,SAAL,CAAe,KAAKzB,UAAL,CAAgB3B,KAA/B,CAAsC,IAAtC,CAA4C,CAA5C,CAClB,C,2DAEkB,CAEf,GAAMf,CAAAA,CAAM,CAAG,KAAKoB,UAAL,CAAgB,KAAKnB,SAAL,CAAeoC,QAA/B,CAAf,CACA,GAAIrC,CAAM,CAAC0B,OAAP,CAAe0C,QAAf,SAAJ,CAA2C,CACvCpE,CAAM,CAAC0B,OAAP,CAAe0C,QAAf,CAA0BpE,CAAM,CAACqB,SACpC,CACD,GAAI,KAAKqB,UAAL,CAAgB2B,QAApB,CAA8B,CAC1BrE,CAAM,CAACqB,SAAP,CAAmBrB,CAAM,CAAC0B,OAAP,CAAe0C,QACrC,CAFD,IAEO,CACHpE,CAAM,CAACqB,SAAP,CAAmBrB,CAAM,CAAC0B,OAAP,CAAe4C,GACrC,CACJ,C,yDAEiB,CACd,KAAK5B,UAAL,CAAgB2B,QAAhB,CAA2B,CAAC,KAAK3B,UAAL,CAAgB2B,QAC/C,C,2DASkB,CACf,MAAO,MAAKzB,SACf,C,wCAQO2B,C,CAAUC,C,CAAO,CACrBxC,UAAI3B,KAAJ,CAAUmE,CAAV,EACA,KAAKtE,OAAL,CAAauE,KAAb,CAAmBC,GAAnB,WAA4BF,CAAK,CAACG,MAAlC,OACA,KAAKzE,OAAL,CAAauE,KAAb,CAAmBG,IAAnB,WAA6BJ,CAAK,CAACK,OAAnC,MACH,C,+CAEY,CACT,KAAKjC,SAAL,CAAiB,CAAC,KAAKA,SAAvB,CACA,KAAKE,QAAL,CAAcgC,YAAd,CAA2B,KAAKlC,SAAhC,EACA,GAAI,KAAKA,SAAT,CAAoB,CAChB,KAAKmC,MAAL,EACH,CAFD,IAEO,CACH,KAAKC,IAAL,EACH,CACJ,C,uCAEQ,IAEChB,CAAAA,CAAS,CAAGiB,MAAM,CAACC,WAAP,EAAsB/E,QAAQ,CAACgF,eAAT,CAAyBnB,SAF5D,CAGCoB,CAAU,CAAGH,MAAM,CAACI,UAAP,CAAoB,CAHlC,CAKCZ,CAAK,CAAG,CACVa,QAAQ,CAAE,UADA,CAEVC,MAAM,CAAE,MAFE,CAGVC,QAAQ,CAAE,MAHA,CAIVC,MAAM,CAAE,OAJE,CAKVC,KAAK,CAAE,OALG,CAMVhB,GAAG,WAAKV,CAAS,CAAG,GAAjB,MANO,CAOVY,IAAI,WAAKQ,CAAU,CAAG,GAAlB,MAPM,CALT,CAcLO,MAAM,CAACC,MAAP,CAAc,KAAK1F,OAAL,CAAauE,KAA3B,CAAkCA,CAAlC,EAEA,KAAKrD,UAAL,CAAgB,KAAKnB,SAAL,CAAesC,KAA/B,EAAsCkC,KAAtC,CAA4CgB,MAA5C,CAAqD,MAArD,CACA,KAAKrE,UAAL,CAAgB,KAAKnB,SAAL,CAAea,GAA/B,EAAoC2D,KAApC,CAA0CgB,MAA1C,CAAmD,MAAnD,CAEA,KAAKxC,iBAAL,CAAuB,KAAK7B,UAAL,CAAgB,KAAKnB,SAAL,CAAewC,GAA/B,CAAvB,CACH,C,mCAEM,YACW,CACV,UADU,CAEV,QAFU,CAGV,UAHU,CAIV,KAJU,CAKV,MALU,CAMV,QANU,CAOV,OAPU,CASd,CAAMxB,OAAN,CACI,SAAA4E,CAAI,QAAI,CAAA,CAAI,CAAC3F,OAAL,CAAauE,KAAb,CAAmBqB,cAAnB,CAAkCD,CAAlC,CAAJ,CADR,EAGA,KAAK5C,iBAAL,CAAuB,KAAK7B,UAAL,CAAgB,KAAKnB,SAAL,CAAewC,GAA/B,CAAvB,CACH,C,4DAEiBvC,C,CAAS,OACoB,CAACA,CAAO,CAACwB,OAAR,CAAgB4C,GAAjB,CAAsBpE,CAAO,CAACmB,SAA9B,CADpB,CACtBnB,CAAO,CAACmB,SADc,MACHnB,CAAO,CAACwB,OAAR,CAAgB4C,GADb,KAE1B,C,cAlN+BpC,e","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Reactive module debug panel.\n *\n * @module     core/local/reactive/debugpanel\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent, DragDrop, debug} from 'core/reactive';\nimport log from 'core/log';\n\n/**\n * Init the main reactive panel.\n *\n * @param {element|string} target the DOM main element or its ID\n * @param {object} selectors optional css selector overrides\n */\nexport const init = (target, selectors) => {\n    const element = document.getElementById(target);\n    // Check if the debug reactive module is available.\n    if (debug === undefined) {\n        element.remove();\n        return;\n    }\n    // Create the main component.\n    new GlobalDebugPanel({\n        element,\n        reactive: debug,\n        selectors,\n    });\n};\n\n/**\n * Init an instance reactive subpanel.\n *\n * @param {element|string} target the DOM main element or its ID\n * @param {object} selectors optional css selector overrides\n */\nexport const initsubpanel = (target, selectors) => {\n    const element = document.getElementById(target);\n    // Check if the debug reactive module is available.\n    if (debug === undefined) {\n        element.remove();\n        return;\n    }\n    // Create the main component.\n    new DebugInstanceSubpanel({\n        element,\n        reactive: debug,\n        selectors,\n    });\n};\n\n/**\n * Component for the main reactive dev panel.\n *\n * This component shows the list of reactive instances and handle the buttons\n * to open a specific instance panel.\n */\nclass GlobalDebugPanel extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'GlobalDebugPanel';\n        // Default query selectors.\n        this.selectors = {\n            LOADERS: `[data-for='loaders']`,\n            SUBPANEL: `[data-for='subpanel']`,\n            LOG: `[data-for='log']`,\n        };\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {object} state the initial state\n     */\n    stateReady(state) {\n        // Generate loading buttons.\n        state.reactives.forEach(\n            instance => {\n                this._createLoader(instance);\n            }\n        );\n        // Remove loading wheel.\n        this.getElement(this.selectors.SUBPANEL).innerHTML = '';\n    }\n\n    _createLoader(instance) {\n        const loaders = this.getElement(this.selectors.LOADERS);\n        const btn = document.createElement(\"button\");\n        btn.innerHTML = instance.id;\n        btn.dataset.id = instance.id;\n        loaders.appendChild(btn);\n        // Add click event.\n        this.addEventListener(btn, 'click', () => this._openPanel(btn, instance));\n    }\n\n    async _openPanel(btn, instance) {\n        try {\n            const target = this.getElement(this.selectors.SUBPANEL);\n            const data = {...instance};\n            await this.renderComponent(target, 'core/local/reactive/debuginstancepanel', data);\n        } catch (error) {\n            log.error('Cannot load reactive debug subpanel');\n            throw error;\n        }\n    }\n}\n\n/**\n * Component for the main reactive dev panel.\n *\n * This component shows the list of reactive instances and handle the buttons\n * to open a specific instance panel.\n */\nclass DebugInstanceSubpanel extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'DebugInstanceSubpanel';\n        // Default query selectors.\n        this.selectors = {\n            NAME: `[data-for='name']`,\n            CLOSE: `[data-for='close']`,\n            READMODE: `[data-for='readmode']`,\n            HIGHLIGHT: `[data-for='highlight']`,\n            LOG: `[data-for='log']`,\n            STATE: `[data-for='state']`,\n            CLEAN: `[data-for='clean']`,\n            PIN: `[data-for='pin']`,\n        };\n        this.id = this.element.dataset.id;\n        this.controller = M.reactive[this.id];\n\n        // The component is created always pinned.\n        this.draggable = false;\n        // We want the element to be dragged like modal.\n        this.relativeDrag = true;\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     */\n    stateReady() {\n        // Enable drag and drop.\n        this.dragdrop = new DragDrop(this);\n\n        // Close button.\n        this.addEventListener(\n            this.getElement(this.selectors.CLOSE),\n            'click',\n            this.remove\n        );\n        // Highlight button.\n        if (this.controller.highlight) {\n            this._toggleButtonText(this.getElement(this.selectors.HIGHLIGHT));\n        }\n        this.addEventListener(\n            this.getElement(this.selectors.HIGHLIGHT),\n            'click',\n            () => {\n                this.controller.highlight = !this.controller.highlight;\n                this._toggleButtonText(this.getElement(this.selectors.HIGHLIGHT));\n            }\n        );\n        // Edit mode button.\n        this.addEventListener(\n            this.getElement(this.selectors.READMODE),\n            'click',\n            this._toggleEditMode\n        );\n        // Clean log and state.\n        this.addEventListener(\n            this.getElement(this.selectors.CLEAN),\n            'click',\n            this._cleanAreas\n        );\n        // Add current state.\n        this._refreshState();\n        // Unpin panel.\n        this.addEventListener(\n            this.getElement(this.selectors.PIN),\n            'click',\n            this._togglePin\n        );\n    }\n\n    /**\n     * Remove all subcomponents dependencies.\n     */\n    destroy() {\n        if (this.dragdrop !== undefined) {\n            this.dragdrop.unregister();\n        }\n    }\n\n    /**\n     * Component watchers.\n     *\n     * @returns {Array} of watchers\n     */\n    getWatchers() {\n        return [\n            {watch: `reactives[${this.id}].lastChanges:updated`, handler: this._refreshLog},\n            {watch: `reactives[${this.id}].modified:updated`, handler: this._refreshState},\n            {watch: `reactives[${this.id}].readOnly:updated`, handler: this._refreshReadOnly},\n        ];\n    }\n\n    _refreshLog({element}) {\n        const list = element?.lastChanges ?? [];\n\n        const logContent = list.join(\"\\n\");\n        // Append last log.\n        const target = this.getElement(this.selectors.LOG);\n        target.value += `\\n\\n= Transaction =\\n ${logContent}`;\n        target.scrollTop = target.scrollHeight;\n    }\n\n    _cleanAreas() {\n        let target = this.getElement(this.selectors.LOG);\n        target.value = '';\n\n        this._refreshState();\n    }\n\n    _refreshState() {\n        const target = this.getElement(this.selectors.STATE);\n        target.value = JSON.stringify(this.controller.state, null, 4);\n    }\n\n    _refreshReadOnly() {\n        // Toggle the read mode button.\n        const target = this.getElement(this.selectors.READMODE);\n        if (target.dataset.readonly === undefined) {\n            target.dataset.readonly = target.innerHTML;\n        }\n        if (this.controller.readOnly) {\n            target.innerHTML = target.dataset.readonly;\n        } else {\n            target.innerHTML = target.dataset.alt;\n        }\n    }\n\n    _toggleEditMode() {\n        this.controller.readOnly = !this.controller.readOnly;\n    }\n\n    // Drag and drop methods.\n\n    /**\n     * Get the draggable data of this component.\n     *\n     * @returns {Object} exported course module drop data\n     */\n    getDraggableData() {\n        return this.draggable;\n    }\n\n    /**\n     * The element drop end hook.\n     *\n     * @param {Object} dropdata the dropdata\n     * @param {Event} event the dropdata\n     */\n    dragEnd(dropdata, event) {\n        log.debug(event);\n        this.element.style.top = `${event.newTop}px`;\n        this.element.style.left = `${event.newLeft}px`;\n    }\n\n    _togglePin() {\n        this.draggable = !this.draggable;\n        this.dragdrop.setDraggable(this.draggable);\n        if (this.draggable) {\n            this._unpin();\n        } else {\n            this._pin();\n        }\n    }\n\n    _unpin() {\n        // Find the initial spot.\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n        const pageCenter = window.innerWidth / 2;\n        // Put the element in the middle of the screen\n        const style = {\n            position: 'absolute',\n            resize: 'both',\n            overflow: 'auto',\n            height: '400px',\n            width: '400px',\n            top: `${scrollTop + 100}px`,\n            left: `${pageCenter - 200}px`,\n        };\n        Object.assign(this.element.style, style);\n        // Small also the text areas.\n        this.getElement(this.selectors.STATE).style.height = '50px';\n        this.getElement(this.selectors.LOG).style.height = '50px';\n\n        this._toggleButtonText(this.getElement(this.selectors.PIN));\n    }\n\n    _pin() {\n        const props = [\n            'position',\n            'resize',\n            'overflow',\n            'top',\n            'left',\n            'height',\n            'width',\n        ];\n        props.forEach(\n            prop => this.element.style.removeProperty(prop)\n        );\n        this._toggleButtonText(this.getElement(this.selectors.PIN));\n    }\n\n    _toggleButtonText(element) {\n        [element.innerHTML, element.dataset.alt] = [element.dataset.alt, element.innerHTML];\n    }\n\n}\n"],"file":"debugpanel.min.js"}